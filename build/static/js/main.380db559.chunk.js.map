{"version":3,"sources":["Components/Sphere2.tsx","Components/ColorShow.tsx","Components/Email.tsx","Components/MobileEmailForm.tsx","Components/MobileInstructions.tsx","Components/MobileAnimation2.tsx","Components/MobileApp.tsx","Components/DesktopText.tsx","hooks/useDidUpdate.tsx","Components/DesktopOrb3.tsx","Components/DesktopEmailForm.tsx","Components/DesktopApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sphere","radius","sphereState","setSphereState","breakPoint","setEmailVisible","setColorShowActive","setInstructionsState","sphereRef","useRef","useThree","camera","size","defaultPointSize","inPosition","outPosition","height","hemisphereRef","useFrame","current","rotation","y","setPosition","useCallback","mountAnimating","hold","pointerUpHandler","position","z","prev","direction","vertices","useMemo","computedVertices","i","theta","THREE","randFloatSpread","phi","x","Math","sin","cos","push","map","v","sphereAnimationProps","useSpring","config","mass","tension","friction","clamp","pointsPosition","opacity","onFrame","arg","visible","onRest","every","index","useEffect","material","tan","PI","fov","lookAt","mesh","ref","onPointerDown","onPointerUp","circlePosition","attach","args","transparent","side","DoubleSide","points","pointsMaterial","color","ColorShow","chapterIndex","colorShowActive","setChapterIndex","darkMode","container","useState","transitioning","setTransitioning","initialized","setInitialized","xStart","yStart","yTravel","xTravel","pointerState","setPointerState","backgroundColors","lightMode","arrowColors","backgroundColor","setBackgroundColor","arrowColor","setArrowColor","getActiveSlideIndex","active","slides","children","length","classList","contains","console","log","activeSlide","activeSlideTransitionTarget","nextSlide","nextSlideTransitionTarget","addEventListener","activeCb","remove","removeEventListener","nextCb","add","next","back","containerCb","setTimeout","reset","className","e","clientX","clientY","updated","pointerDownHandler","onPointerMove","pointerMoveHandler","style","background","transitionDelay","width","viewBox","fill","xmlns","fill-rule","clip-rule","d","Email","success","setSuccess","email","setEmail","message","setMessage","processing","setProcessing","formRef","emailInputProps","borderBottom","duration","submitButtonProps","boxShadow","immediate","key","onSubmit","preventDefault","url","process","options","method","body","FormData","fetch","then","res","json","data","result","error","catch","input","name","type","value","placeholder","onChange","currentTarget","onFocus","required","MobileEmailForm","emailVisible","setDarkMode","animationProps","bottom","includes","textProps","buttonProps","div","p","button","onClick","MobileInstructions","instructionsState","instructionsDivProps","instructionsTextProps","src","alt","Camera","aspect","setDefaultCamera","atan","cameraDistance","onUpdate","self","updateProjectionMatrix","MobileAnimation","scrollIndicatorPositions","scrollIndicatorPosition","setScrollIndicatorPosition","scrollIndicatorAnimate","top","MobileApp","DesktopText","wheelThreshold","setButtonShadow","setOrbMovingState","subscribeActive","chapterRefs","createRef","textTransitioning","setTextTransitioning","textAnimation","zIndex","forEach","chapter","func","deps","didUpdate","useDidUpdate","wheelHandler","event","deltaY","abs","onWheel","onTransitionEnd","Orb","pointerPosition","orbMovingState","resetPointer","setSubscribeActive","setEmailActive","setOrbHold","orbHold","setScrollIndicatorHeight","viewport","orbRef","previousPosition","closestSide","subscribePosition","orbMask","orbMaskSphereBbox","rectPositions","textRef1","geometry","textRef2","textRef3","undefined","orbPositions","pre","start","orbPositionConfigs","resting","intersecting","out","to","in","subscribe","subscribe_hold","at_threshold","textBbox1","Box3","textBbox2","textBbox3","subscribeRef","subscribeBbox","orbScale","setOrbScale","orbPosition","setOrbPosition","isIntersecting","setIsIntersecting","orbOpacity","setOrbOpacity","getOrbPosition","currentPosition","coord","match","autoRotateOrb","number","computeBoundingAreas","computeBoundingSphere","computeBoundingBox","updateOrbMaskSphereBboxRadius","boundingSphere","updateOrbMaskSphereBboxCenter","center","getClosestSide","distanceObj","left","right","min","getTranslatedPointerPosition","window","innerWidth","innerHeight","isSphereIntersectingBox","sphere","box","max","sqrt","moveOut","isOrbIntersecting","setFromObject","x1","currentX","percentage","scale","emailActive","inputFocus","setInputFocus","emailDiv","emailDivProps","visibility","headers","JSON","stringify","statusCode","onBlur","DesktopApp","buttonShadow","scrollIndicatorHeight","canvasViewport","setPointerPosition","containerRef","subscribeButtonProps","orthographic","near","far","target","rel","href","App","isMobile","setIsMobile","windowResizeHandler","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.380db559.chunk.js","sourcesContent":["import React, {\n\tFunctionComponent,\n\tuseRef,\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\t// useState,\n} from 'react';\nimport * as THREE from 'three/';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three'\nimport { DoubleSide } from 'three/';\n\ninterface SphereProps {\n\tradius: number,\n\t// setInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\tsetEmailVisible: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetInstructionsState: React.Dispatch<React.SetStateAction<{\n\t\tposition: 'up' | 'down';\n\t\tvisible: boolean;\n\t}>>\n\tsphereAnimationProps?: any,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tsphereState: {\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t},\n\tinPosition: [number, number, number],\n\toutPosition: [number, number, number],\n\tbreakPoint: number,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Sphere: FunctionComponent<SphereProps> = ({\n\tradius,\n\t// inPosition,\n\tsphereState,\n\tsetSphereState,\n\tbreakPoint,\n\t// outPosition,\n\tsetEmailVisible,\n\t// setInstructionsVisible,\n\tsetColorShowActive,\n\tsetInstructionsState\n}) => {\n\t/* \n\t\tTODO: \n\t\t\t-add responsive scaling for smaller and larger mobile viewports\n\t\t\t-responsive outPositions depending on viewport height\n\n\t\t\t-initial animation of ease into view:\n\t\t\t\t- start position \n\t\t\t\t- opacity fade in\n\t\t\t\t- orbLive ? --> fade and ease in to start position, \n\t*/ \n\tconst sphereRef = useRef<any>(null);\n\tconst {\n\t\tcamera,\n\t\t// camera: {\n\t\t// \tfov\n\t\t// },\n\t\t// viewport,\n\t\tsize,\n\t}: { camera: any, viewport: any, size: any } = useThree();\n\n\tconst defaultPointSize = useRef<number>(1.7);\n\tconst inPosition: [number, number, number] = [0, 0, 0];\n\tconst outPosition: [number, number, number] = [0, -size.height / 9, 626];\n\tconst hemisphereRef = useRef<THREE.Points | null>(null);\n\n\n\tuseFrame(() => {\n\t\tif (sphereRef.current) {\n\t\t\treturn sphereRef.current.rotation.y = sphereRef.current.rotation.y + 0.003\n\t\t}\n\t});\n\n\tconst setPosition = useCallback(() => {\n\t\tif (sphereState.mountAnimating) {\n\t\t\treturn outPosition\n\t\t} else {\n\t\t\tif (sphereState.hold) {\n\t\t\t\treturn outPosition\n\t\t\t} else {\n\t\t\t\treturn inPosition\n\t\t\t}\n\t\t}\n\t}, [inPosition, sphereState, outPosition])\n\n\tconst pointerUpHandler = useCallback(() => {\n\t\tif (sphereRef.current.position.z >= breakPoint) {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: true,\n\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t} else {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: false,\n\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t}\n\t}, [setSphereState, breakPoint, sphereState])\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1600; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = radius * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = radius * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = radius * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [radius])\n\n\tconst sphereAnimationProps = useSpring({\n\t\tconfig: { mass: 1.8, tension: 84, friction: 22, clamp: true },\n\t\tpointsPosition: setPosition(),\n\t\topacity: sphereState.mountAnimating ? 0 : 1,\n\t\tonFrame: (arg: any) => {\n\t\t\tif (sphereRef.current.position.z > 0 && sphereRef.current.position.z < 20) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetInstructionsState(prev => ({ ...prev, visible: true}))\n\t\t\t\t} else {\n\t\t\t\t\tsetInstructionsState(prev => ({ ...prev, visible: false}))\n\t\t\t\t}\n\t\t\t} else if (sphereRef.current.position.z > 20 && sphereRef.current.position.z < 50) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetEmailVisible(() => true);\n\t\t\t\t} else {\n\t\t\t\t\tsetEmailVisible(() => false)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRest: (arg: any) => {\n\t\t\tif (outPosition.every((position: number, index: number) => {\n\t\t\t\tif (!sphereState.mountAnimating) {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\treturn sphereRef.current.position.x === position\n\t\t\t\t\t} else if (index === 1) {\n\t\t\t\t\t\treturn sphereRef.current.position.y === position\n\t\t\t\t\t} else if (index === 2) {\n\t\t\t\t\t\treturn sphereRef.current.position.z === position\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}) && sphereState.direction === 'forwards') {\n\t\t\t\tsetColorShowActive((prev) => prev ? prev : true);\n\t\t\t\tsetSphereState((prev) => {\n\t\t\t\t\treturn { ...prev, direction: 'backwards'}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (size.height && camera) {\n\t\t\tsphereRef.current.material.size = defaultPointSize.current / Math.tan( ( Math.PI / 180 ) * camera.fov / 2 )\n\t\t\tcamera.lookAt(0, (-size.height / 6.5), 0);\n\t\t}\n\t}, [size, camera])\n\n\tuseEffect(() => {\n\t\tsetSphereState(prev => {\n\t\t\tif (prev.mountAnimating) {\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\tmountAnimating: false\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn prev\n\t\t\t}\n\t\t})\n\t}, [setSphereState])\n\n\t\n\treturn (\n\t\t<group>\n\t\t\t<a.mesh\n\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\tref={hemisphereRef}\n\t\t\t\tonPointerDown={() => setSphereState(prev => {\n\t\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\t\thold: true,\n\t\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t}\n\t\t\t\t\treturn updated\n\t\t\t\t})}\n\t\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t\tposition={sphereAnimationProps.circlePosition}\n\t\t\t>\n\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\targs={[130, 32, 32, 0, 2*Math.PI, 0, 0.7 * Math.PI]}\n\t\t\t\t/>\n\t\t\t\t<meshBasicMaterial attach='material' transparent={true} opacity={0} side={DoubleSide} />\n\t\t\t</a.mesh>\n\t\t\t<a.points \n\t\t\t\tref={sphereRef}\n\t\t\t\t// ref={sphereRef}\n\t\t\t\tposition={sphereAnimationProps.pointsPosition}\n\t\t\t\t// scale={[1,1,1]}\n\t\t\t>\t\n\t\t\t\t<geometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\tvertices={vertices}\n\t\t\t\t/>\n\t\t\t\t<a.pointsMaterial\n\t\t\t\t\tattach='material'\n\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\tsize={1.7}\n\t\t\t\t\topacity={sphereAnimationProps.opacity}\n\t\t\t\t/>\n\t\t\t</a.points>\n\t\t</group>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tPointerEvent,\n\tuseEffect,\n\tuseRef,\n\tuseState\n} from 'react';\n\n// controlling overflowed span components\n// on chapter change -- animate to next \n\ninterface ColorShowProps {\n\tchapterIndex: number,\n\tcolorShowActive: boolean,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tdarkMode: Boolean\n}\n\nexport const ColorShow: FunctionComponent<ColorShowProps> = ({\n\tchapterIndex,\n\tcolorShowActive,\n\tsetColorShowActive,\n\tsetChapterIndex,\n\tsetSphereState,\n\tdarkMode\n}) => {\n\t// use chapter index to determine which slide to show\n\t// determine swipe direction & length\n\tconst container = useRef<HTMLDivElement>(null);\n\tlet [transitioning, setTransitioning] = useState<boolean>(false);\n\tlet [initialized, setInitialized] = useState<boolean>(false);\n\tlet [pointerState, setPointerState] = useState<any>({\n\t\txStart: null,\n\t\tyStart: null,\n\t\tyTravel: null,\n\t\txTravel: null,\n\t})\n\n\tconst backgroundColors = useRef<any>({\n\t\tlightMode: ['#E4F0FA', '#D64773', '#CBCBCB', '#000000'],\n\t\tdarkMode: ['#000000', '#D64773', '#E4F0FA', '#F9FAFC']\n\t})\n\n\tconst arrowColors = useRef<any>({\n\t\tlightMode: ['#6E81A0', '#FFFFFF', '#D64773', '#CBCBCB'],\n\t\tdarkMode: ['#6E81A0', '#000000', '#D64773', '#009CDF']\n\t})\n\n\tlet [backgroundColor, setBackgroundColor] = useState<string>(backgroundColors.current.lightMode[chapterIndex]);\n\tlet [arrowColor, setArrowColor] = useState<string>(arrowColors.current.lightMode[chapterIndex])\n\n\tconst getActiveSlideIndex = (): number => {\n\t\tif (container.current) {\n\t\t\tlet active = -1;\n\t\t\tconst slides = container.current.children;\n\t\t\tfor (let i = 0; i < slides.length; i++) {\n\t\t\t\tif (!slides[i].classList.contains('out-down') && !slides[i].classList.contains('out-up')) {\n\t\t\t\t\tactive = i\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn active\n\t\t}\n\t\treturn -1\n\t}\n\n\tconst pointerDownHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst updated = {\n\t\t\t\txStart: clientX,\n\t\t\t\tyStart: clientY,\n\t\t\t}\n\t\t\treturn { ...prev, ...updated}\n\t\t})\n\t}\n\n\tconst pointerMoveHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t\t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t\t\treturn { ...prev, yTravel, xTravel }\n\t\t})\n\t}\n\n\tconst pointerUpHandler = () => {\n\t\tsetPointerState(() => ({\n\t\t\txTravel: null,\n\t\t\tyTravel: null,\n\t\t\txStart: null,\n\t\t\tyStart: null,\n\t\t}))\n\t}\n\n\tuseEffect(() => {\n\t\tconst next = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active >= 0 && active < container.current.children.length - 2) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\t// change background color -- account for dark mode\n\t\t\t\t\t\tnextSlide.classList.remove('out-down');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst back = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active > 0) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\tnextSlide.classList.remove('out-up');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (chapterIndex >= 0 && colorShowActive && initialized) {\n\t\t\tif (getActiveSlideIndex() < chapterIndex) {\n\t\t\t\tconsole.log('next')\n\t\t\t\tnext();\n\t\t\t} else if (getActiveSlideIndex() > chapterIndex) {\n\t\t\t\tconsole.log('back')\n\t\t\t\tback();\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, colorShowActive, initialized, darkMode])\n\n\tuseEffect(() => {\n\t\tif (darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.darkMode[0])\n\t\t} else if (!darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.lightMode[0])\n\t\t}\n\t}, [darkMode, initialized])\n\t\n\tuseEffect(() => {\n\t\tconst reset = () => {\n\t\t\tif (container.current) {\n\t\t\t\t// console.log(colorShowActive);\n\t\t\t\tsetTransitioning(() => true);\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\n\t\t\t\tlet containerCb = () => {\n\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\tsetSphereState(prev => {\n\t\t\t\t\t\t\tconst updated: any = {\n\t\t\t\t\t\t\t\thold: false,\n\t\t\t\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn updated\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < container.current.children.length - 1; i++) {\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.remove('out-up');\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.add('out-down');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tsetInitialized(() => false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 1000)\n\t\t\t\t\t\tcontainer.current.removeEventListener('transitionend', containerCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontainer.current.addEventListener('transitionend', containerCb);\n\n\t\t\t\tlet activeCb = () => {\n\t\t\t\t\tif (container.current) {\t\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tcontainer.current.classList.remove('active');\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\tif (active === 0) {\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t} else {\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tconst init = () => {\n\t\t\tif (container.current) {\n\t\t\t\tcontainer.current.classList.add('active');\n\t\t\t\tcontainer.current.children[0].classList.remove('out-down');\n\t\t\t\tsetInitialized(() => true);\n\t\t\t}\n\t\t}\n\n\t\tif (colorShowActive && !initialized) {\n\t\t\tconsole.log('init')\n\t\t\tinit();\n\t\t} else if (!colorShowActive && initialized) {\n\t\t\treset();\n\t\t}\n\t}, [colorShowActive, initialized, setSphereState, setChapterIndex, darkMode])\n\n\tuseEffect(() => {\n\t\tif (pointerState.yTravel > 0 && pointerState.yTravel >= 100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current) {\n\t\t\t\t\tif (prev < container.current.children.length - 2 && !transitioning) {\n\t\t\t\t\t\treturn prev + 1\n\t\t\t\t\t} else if (prev === container.current.children.length -  2) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t} else if (pointerState.yTravel < 0 && pointerState.yTravel <= -100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current && !transitioning) {\n\t\t\t\t\tif (prev > 0) {\n\t\t\t\t\t\treturn prev - 1\n\t\t\t\t\t} else if (prev === 0) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t}\n\t}, [pointerState, setChapterIndex, transitioning, setColorShowActive])\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"ColorShow grid\"\n\t\t\tref={container}\n\t\t\tonPointerDown={(e: PointerEvent) => pointerDownHandler(e)}\n\t\t\tonPointerMove={(e: PointerEvent) => pointerMoveHandler(e)}\n\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\tstyle={{ background: backgroundColor }}\n\t\t>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#E066DB' : '#334669'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>The most dangerous phrase</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>in language is 'It's always</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>been done that way'\"</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<p style={{ color: darkMode ? '#FFFFFF' : '#334669'}}>Admiral Grace Hopper</p>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#000000' : '#FFFFFF'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Andy Mag is an experiential</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>magazine that enables</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>readers to interact (engage)</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<h4>with diverse themes and </h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.2s'}}>\n\t\t\t\t\t\t<h4>ideas.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: '#D64773'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Because a great story is</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>worth remembering.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#009CDF' : '#CBCBCB'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Subscribe to Andy Mag for</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t<h4>updates.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"Arrows\"\n\t\t\t\tstyle={{ opacity: colorShowActive ? 1 : 0 }}\n\t\t\t>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor}/>\n\t\t\t\t</svg>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor} />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import { resolveTxt } from 'dns';\nimport React, { FunctionComponent, useRef, useState } from 'react'\nimport { useSpring, animated } from 'react-spring';\n\n// email form should add email to mailing list on directmailmac \n// on success there should be some indication on the frontend -- turns green with a success message\n// on failure there should be some indication on the frontend -- turns red with an error message\n\n// make an api call to directmailmac with the email address\ninterface EmailProps {\n\tdarkMode: Boolean,\n}\n\nexport const Email: FunctionComponent<EmailProps> = ({ darkMode }) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\tlet [message, setMessage] = useState<string | null>(null)\n\tlet [processing, setProcessing] = useState<boolean>(false);\n\n\tconst reset = () => {\n\t\tsetMessage(() => null);\n\t\tsetSuccess(() => null);\n\t\tsetProcessing(() => false);\n\t}\n\n\tconst formRef = useRef<HTMLFormElement>(null);\n\tconst submitHandler = (e:any) => {\n\t\t// do nothing if successs\n\t\te.preventDefault();\n\t\tif (!success && !processing) {\n\t\t\treset();\n\t\t\tconst url = process.env.REACT_APP_EMAIL_URL ? process.env.REACT_APP_EMAIL_URL : null;\n\t\t\t// const body = { email };\n\t\t\tconst options: any = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// mode: 'no-cors',\n\t\t\t\t// headers: {\n\t\t\t\t// \t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t\t// },\n\t\t\t\tbody: formRef.current ? new FormData(formRef.current) : null,\n\t\t\t}\n\t\n\t\t\tif (url && !processing) {\n\t\t\t\tsetProcessing(() => true);\n\t\t\t\tfetch(url, options)\n\t\t\t\t.then(res => {\n\t\t\t\t\treturn res.json()\n\t\t\t\t})\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.result === 'success') {\n\t\t\t\t\t\tsetSuccess(() => true);\n\t\t\t\t\t\tsetMessage(() => data.message);\n\t\t\t\t\t} else if (data.result === 'error') {\n\t\t\t\t\t\tsetSuccess(() => false);\n\t\t\t\t\t\tsetMessage(() => data.error);\n\t\t\t\t\t}\n\t\t\t\t\tsetProcessing(() => false);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetSuccess(() => false);\n\t\t\t\t\tsetMessage(() => 'An error occurred please try again.')\n\t\t\t\t\tsetProcessing(() => false);\n\t\t\t\t\t// console.log(error)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst emailInputProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tborderBottom: darkMode ? '1.5px solid #FFFFFF' : '1.5px solid #000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst submitButtonProps = useSpring({\n\t\tbackground: success ? '#61F04A' : darkMode ? '#754AAD' : '#EE84FF',\n\t\tboxShadow: darkMode ? '21px 17px 45px rgba(14, 28, 33, .8)' : '8px 8px 24px rgba(176, 195, 210, .8)',\n\t\tcolor: success ? '#000000' : darkMode ? '#FFFFFF' : '#2E476E',\n\t\timmediate: key => key === 'boxShadow'\n\t})\n\n\treturn (\n\t\t// if null do nothing, if false show fail, if true show success\n\t\t<form ref={formRef} onSubmit={submitHandler} className={ darkMode ? 'Email darkmode' : 'Email'}>\n\t\t\t<animated.input\n\t\t\t\tclassName={darkMode ? 'darkmode' : ''}\n\t\t\t\tstyle={emailInputProps} name=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tvalue={email}\n\t\t\t\tplaceholder='email'\n\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)}\n\t\t\t\tonFocus={() => {\n\t\t\t\t\treset();\n\t\t\t\t}}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<animated.input style={submitButtonProps} type=\"submit\" value={success ? 'Subscribed' : processing ? '' : 'Subscribe'} />\n\t\t\t{processing && <div className=\"dot-wrap\"><div className=\"dot-flashing\"></div></div> }\n\t\t\t{success === false && <p className=\"error\">{message}</p> }\n\t\t</form>\n\t)\n}\n\n// on focus -- clear message? \n","import React, { FunctionComponent } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Email } from './Email';\n\ninterface MobileEmailFormProps {\n\tprops?: any,\n\temailVisible: Boolean,\n\tdarkMode: Boolean,\n\tsetDarkMode: React.Dispatch<React.SetStateAction<Boolean>>,\n\t// setInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\t// instructionsVisible: boolean,\n\tsphereState: {\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\t// position: [number, number, number] | null;\n\t},\n}\n\nexport const MobileEmailForm: FunctionComponent<MobileEmailFormProps> = ({ sphereState, emailVisible, darkMode, setDarkMode }) => {\n\tconst animationProps = useSpring({\n\t\tconfig: { mass: 1, friction: 1, clamp: true },\n\t\t// config: { duration: 150 },\n\t\topacity: !emailVisible ? 0 : 1,\n\t\tbottom: !emailVisible ? -6 : 0,\n\t\tbackground: darkMode ? '#2E3138' : '#F9FAFC',\n\t\t// borderImage: darkMode ? 'linear-gradient(to top, #26282C, 70%, #363940) 1 0%' : 'linear-gradient(to right, #FFFFFF, #E5EFFA) 1 0%',\n\t\tboxShadow: darkMode ? '0px 4px 13px rgba(29, 30, 35, .9)' : '0px 14px 18px rgba(31, 36, 39, .75)',\n\t\timmediate: key => ['background', 'boxShadow'].includes(key),\n\t\t// onRest: ({ opacity }) => {\n\t\t// \t!instructionsVisible && setInstructionsVisible((prev) => {\n\t\t// \t\tif (opacity === 1 && sphereState.direction === \"backwards\") {\n\t\t// \t\t\treturn true\n\t\t// \t\t}\n\t\t// \t\treturn prev\n\t\t// \t})\n\t\t// }\n\t})\n\n\tconst textProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst buttonProps = useSpring({\n\t\t// border: darkMode ? '2px solid #FFFFFF' : '2px solid #000000',\n\t\tbackground: darkMode ? '#2C3036' : '#E6EEF8',\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tboxShadow: !darkMode ? '-4px -2px 10px rgba(255, 255, 255, 1), 4px 2px 18px rgba(170, 187, 201, 0.9)' : '-2px -1px 7px rgba(72, 78, 83, 0.75), 3px 1px 7px rgba(22, 26, 28, 0.9)',\n\t\tconfig: { duration: 130 },\n\t\timmediate: key => ['background', 'boxShadow'].includes(key)\n\t})\n\n\treturn (\n\t\t<animated.div className=\"MobileEmailForm\" style={animationProps}>\n\t\t\t<animated.p style={textProps}>Stay Updated</animated.p>\n\t\t\t<Email darkMode={darkMode} />\n\t\t\t<animated.button style={buttonProps} className=\"mode-switch\" onClick={() => setDarkMode(() => !darkMode)}>\n\t\t\t\t{ darkMode ? 'L' : 'D'}\n\t\t\t</animated.button>\n\t\t</animated.div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseEffect,\n\tuseState,\n\tPointerEvent\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface MobileInstructionsProps {\n\tdarkMode: Boolean,\n\tinstructionsState: {\n\t\tposition: 'up' | 'down',\n\t\tvisible: boolean\n\t}\n\tsetInstructionsState: React.Dispatch<React.SetStateAction<{\n\t\tposition: 'up' | 'down';\n\t\tvisible: boolean;\n\t}>>\n}\n\nexport const MobileInstructions: FunctionComponent<MobileInstructionsProps> = ({\n\tinstructionsState,\n\tdarkMode,\n\tsetInstructionsState\n}) => {\n\n\tlet [pointerState, setPointerState] = useState<any>({\n\t\txStart: null,\n\t\tyStart: null,\n\t\tyTravel: null,\n\t\txTravel: null,\n\t})\n\n\tconst pointerDownHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst updated = {\n\t\t\t\txStart: clientX,\n\t\t\t\tyStart: clientY,\n\t\t\t}\n\t\t\treturn { ...prev, ...updated}\n\t\t})\n\t}\n\n\tconst pointerMoveHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t\t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t\t\treturn { ...prev, yTravel, xTravel }\n\t\t})\n\t}\n\n\tconst pointerUpHandler = () => {\n\t\tsetPointerState(() => ({\n\t\t\txTravel: null,\n\t\t\tyTravel: null,\n\t\t\txStart: null,\n\t\t\tyStart: null,\n\t\t}))\n\t}\n\n\t// const resetPointer = () => {\n\t// \tsetPointerState(() => ({\n\t// \t\txTravel: null,\n\t// \t\tyTravel: null,\n\t// \t\txStart: null,\n\t// \t\tyStart: null,\n\t// \t}))\n\t// }\n\n\tconst instructionsDivProps = useSpring({\n\t\topacity: instructionsState.visible ? 1 : 0,\n\t\tconfig: instructionsState.position === 'down' ? { duration: 70 } : { tension: 280, clamp: true },\n\t})\n\n\tconst instructionsTextProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tuseEffect(() => {\n\t\tif (pointerState.yTravel !== null) {\n\t\t\tsetInstructionsState((prev) => {\n\t\t\t\tif (prev.position === 'up' && pointerState.yTravel < -20) {\n\t\t\t\t\t// resetPointer();\n\t\t\t\t\treturn { ...prev, position: 'down'}\n\t\t\t\t} else if (prev.position === 'down' && pointerState.yTravel > 20) {\n\t\t\t\t\t// resetPointer();\n\t\t\t\t\treturn { ...prev, position: 'up'}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [pointerState, setInstructionsState])\n\n\treturn (\n\t\t<animated.div\n\t\t\tonPointerDown={(e: PointerEvent) => pointerDownHandler(e)}\n\t\t\tonPointerMove={(e: PointerEvent) => pointerMoveHandler(e)}\n\t\t\tonPointerUp={() => {\n\t\t\t\tpointerUpHandler()\n\t\t\t}}\n\t\t\tonClick={() => {\n\t\t\t\tif (instructionsState.position === 'down') {\n\t\t\t\t\tsetInstructionsState(prev => ({...prev, position: 'up'}))\n\t\t\t\t}\n\t\t\t}}\n\t\t\tstyle={instructionsDivProps}\n\t\t\tclassName={`hold-icon${darkMode ? ' darkMode' : ''}${instructionsState.position === 'down' ? ' down' : ''}`}\n\t\t>\n\t\t\t<div className=\"center\"><div className=\"swiper\"></div></div>\n\t\t\t{ !darkMode ? <img src=\"../assets/holdicon.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> : <img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> }\n\t\t\t<animated.p style={instructionsTextProps}>Press and hold to learn more about Andy Mag</animated.p>\n\t\t</animated.div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseState,\n\t// useMemo,\n\tuseRef,\n\tuseEffect\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { PerspectiveCamera } from 'three';\nimport { Canvas, useThree } from 'react-three-fiber';\n\nimport { Sphere } from './Sphere2';\nimport { ColorShow } from './ColorShow';\nimport { MobileEmailForm } from './MobileEmailForm';\nimport { MobileInstructions } from './MobileInstructions';\n\n\n\nconst Camera = () => {\n\tconst camera = useRef<PerspectiveCamera | null>(null)\n\tconst { aspect, size, setDefaultCamera } = useThree()\n\tconst pixelToThreeUnitRatio = 1\n\tconst planeDistance = 0\n\tconst cameraDistance = 500\n\tconst distance = cameraDistance - planeDistance\n\tconst height = size.height / pixelToThreeUnitRatio\n\tconst halfFovRadians = Math.atan((height / 2) / distance)\n\tconst fov = 2 * halfFovRadians * (180/Math.PI)\n\tuseEffect(() => {\n\t\tconsole.log(camera.current);\n\t\tif (camera.current) setDefaultCamera(camera.current)\n\t}, [size, setDefaultCamera])\n\n\treturn <perspectiveCamera\n\t\tref={camera}\n\t\taspect={aspect}\n\t\tfov={fov}\n\t\tposition={[0, 0, cameraDistance]}\n\t\tonUpdate={self => self.updateProjectionMatrix()}\n\t/>\n  }\n\nexport const MobileAnimation: FunctionComponent = () => {\n\tconst scrollIndicatorPositions = useRef<number[]>([-1, 10, 22, 31.5]);\n\tconst [darkMode, setDarkMode] = useState<Boolean>(false);\n\tconst [chapterIndex, setChapterIndex ] = useState<number>(0);\n\tconst [colorShowActive, setColorShowActive] = useState<boolean>(false);\n\tconst [sphereState, setSphereState] = useState<{\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t}>({ hold: false, direction: 'backwards', mountAnimating: true});\n\tconst [emailVisible, setEmailVisible] = useState<Boolean>(false);\n\t// const [instructionsVisible, setInstructionsVisible] = useState<boolean>(false);\n\tconst [instructionsState, setInstructionsState] = useState<{ position: 'up' | 'down', visible: boolean}>({ position: 'up', visible: false})\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\tbackgroundColor: darkMode ? '#FFFFFF' : '#000000',\n\t\ttop: scrollIndicatorPosition,\n\t\topacity: colorShowActive ? '1' : '0',\n\t\tconfig: { clamp: true }\n\t})\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\treturn (\n\t\t<div className=\"MobileAnimation\">\n\t\t\t<div className=\"logo\" onClick={() => {\n\t\t\t\tsetColorShowActive(() => false)\n\t\t\t}}>\n\t\t\t\t{ !darkMode ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' /> }\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<Canvas\n\t\t\t\tstyle={{ backgroundColor: darkMode ? '#26282C' : '#F9FAFC' }}\n\t\t\t\tclassName=\"Canvas\"\n\t\t\t>\n\t\t\t\t<Camera />\n\t\t\t\t<Sphere\n\t\t\t\t\tradius={135}\n\t\t\t\t\tsetInstructionsState={setInstructionsState}\n\t\t\t\t\tsetEmailVisible={setEmailVisible}\n\t\t\t\t\tinPosition={[0, 135, 0]}\n\t\t\t\t\tsphereState={sphereState}\n\t\t\t\t\toutPosition={[0, 60, 646]}\n\t\t\t\t\tsetSphereState={setSphereState}\n\t\t\t\t\tbreakPoint={468}\n\t\t\t\t\tsetColorShowActive={setColorShowActive}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t<ColorShow chapterIndex={chapterIndex} colorShowActive={colorShowActive} setColorShowActive={setColorShowActive} setChapterIndex={setChapterIndex} setSphereState={setSphereState} darkMode={darkMode} />\n\t\t\t<MobileInstructions darkMode={darkMode} instructionsState={instructionsState} setInstructionsState={setInstructionsState} />\n\t\t\t<MobileEmailForm\n\t\t\t\tsphereState={sphereState}\n\t\t\t\temailVisible={emailVisible}\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tsetDarkMode={setDarkMode}\n\t\t\t/>\n \t\t</div>\n\t)\n}","import React, { FunctionComponent } from 'react';\n\n// import { Email } from './Email';\n// import { MobileAnimation } from './MobileAnimation';\nimport { MobileAnimation } from './MobileAnimation2';\n\nexport const MobileApp: FunctionComponent = () => {\n\treturn (\n\t\t// <Email />\n\t\t<MobileAnimation />\n\t)\n}","import React, { FunctionComponent, useRef, createRef, useEffect, useCallback, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useDidUpdate } from '../hooks/useDidUpdate';\n\ninterface DesktopTextProps {\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tchapterIndex: number | null\n\twheelThreshold: number\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n\t// orbMovingState: \"out-forward\" | \"out-backward\" | \"to-forward\" | \"to-backward\" | \"resting\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tsubscribeActive: boolean\n}\n\nexport const DesktopText: FunctionComponent<DesktopTextProps> = ({ \n\tchapterIndex,\n\tsetChapterIndex,\n\twheelThreshold,\n\tsetBackgroundColor,\n\tsetButtonShadow,\n\tsetOrbMovingState,\n\tsubscribeActive\n}) => {\n\tlet chapterRefs = useRef<React.RefObject<HTMLDivElement>[]>([createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>()]);\n\tlet [textTransitioning, setTextTransitioning] = useState<'out-down' | 'out-up' | 'in' | null>(null)\n\n\tconst textAnimation = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tzIndex: subscribeActive ? -1 : 2,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\tconst reset = useCallback(() => {\n\t\t// remove all out classes to out down\n\t\tif (chapterRefs.current !== null) {\n\t\t\tchapterRefs.current.forEach((chapter, index) => {\n\t\t\t\tif (chapter.current !== null) {\n\t\t\t\t\tchapter.current.classList.remove('out-up');\n\t\t\t\t\tchapter.current.classList.add('out-down');\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [])\n\t\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tcurrent: chapter = null\n\t\t} = chapterRefs.current[0]\n\n\t\tchapter?.classList.remove('out-down')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetBackgroundColor(() => '#231B1B')\n\t\t\tsetTimeout(reset, 1000);\n\t\t} else {\n\t\t\tif (chapterRefs.current !== null && chapterRefs.current[0].current !== null) {\n\t\t\t\tif (chapterRefs.current[0].current.classList.contains('out-down')) chapterRefs.current[0].current.classList.remove('out-down') \n\t\t\t}\n\t\t}\n\t}, [subscribeActive, setBackgroundColor, reset])\n\n\tuseDidUpdate(() => {\n\t\tif (chapterIndex !== null) {\n\t\t\tconst {\n\t\t\t\tcurrent: chapter = null\n\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\n\t\t\tsetTextTransitioning(() => 'in')\n\t\t\tchapter?.classList.remove('out-down', 'out-up')\n\t\t}\n\t}, [chapterIndex])\n\n\tconst wheelHandler = useCallback((event: React.WheelEvent<HTMLDivElement>) => {\n\t\tconst { deltaY } = event;\n\t\tif (textTransitioning === null) {\n\t\t\tif (Math.abs(deltaY) > wheelThreshold) {\n\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcurrent: chapter = null\n\t\t\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\t\tif (deltaY > 0 && chapterIndex < 3) {\n\t\t\t\t\t\tchapter?.classList.add('out-up');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-up')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t} else if (deltaY < 0 && chapterIndex > 0) {\n\t\t\t\t\t\tchapter?.classList.add('out-down');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-down')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, wheelThreshold, textTransitioning, setOrbMovingState])\n\n\treturn (\n\t\t<animated.div className=\"Text grid\" style={textAnimation}>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t\tref={chapterRefs.current[0]}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>The most damaging phrase in language is 'It's</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>always been done that way'</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"spacer-top-1\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\t// set chapterIndex to next\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2>- Admiral Grace Hopper</h2>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[1]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>Andy Mag is an experiential magazine that</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>enables readers to interact (engage) with diverse</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span \n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>themes and ideas.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[2]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 3)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#95B1D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #779FD4, -1px -2px 7px #BAC4D2')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Because a great story is worth remembering.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[3]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Subscribe to Andy Mag for updates.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react';\n\nexport const useDidUpdate = (func: any, deps: Array<any>) => {\n    const didUpdate = useRef(false);\n\n    useEffect(() => {\n        if (didUpdate.current) func();\n        else didUpdate.current = true;\n    }, deps);\n}","// export default {}\nimport React, { FunctionComponent, useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { a, useSpring } from 'react-spring/three';\n// import { useDidUpdate } from '../hooks/useDidUpdate';\nimport { Box3 } from 'three';\nimport { DoubleSide } from 'three/';\n// import { Sphere } from './Sphere';\n\ninterface OrbProps {\n\tpointerPosition: [number | null, number | null]\n\tchapterIndex: number\n\torbMovingState: \"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"resting\" | \"to\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tresetPointer: () => void\n\tsubscribeActive: boolean\n\tsetSubscribeActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetEmailActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetOrbHold: React.Dispatch<React.SetStateAction<boolean>>\n\torbHold: boolean\n\tsetScrollIndicatorHeight: React.Dispatch<React.SetStateAction<number>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const Orb: FunctionComponent<OrbProps> = ({\n\tpointerPosition,\n\tchapterIndex,\n\torbMovingState,\n\tresetPointer,\n\tsetOrbMovingState,\n\tsubscribeActive,\n\tsetSubscribeActive,\n\tsetEmailActive,\n\tsetOrbHold,\n\torbHold,\n\tsetScrollIndicatorHeight,\n\tsetChapterIndex,\n\tsetBackgroundColor,\n\tsetButtonShadow\n}) => {\n\tconst { viewport } = useThree();\n\tconst orbRef = useRef<THREE.Points | null>(null)\n\tconst previousPosition = useRef<[number, number, number] | null>(null)\n\tconst closestSide = useRef<string | null>(null)\n\tconst subscribePosition = useRef<[number, number, number]>([viewport.width < 1280 ? -220 : -260, 0, 0]);\n\n\tconst orbMask = useRef<any>(null);\n\tconst orbMaskSphereBbox = useRef<THREE.Sphere>(new THREE.Sphere()) // position dependent on orbMask position\n\n\tconst rectPositions = useRef<any>([\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,59,0],\n\t\t\t\tgeometry: [690, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,6,0],\n\t\t\t\tgeometry: [415, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-60,0],\n\t\t\t\tgeometry: [355, 26, 0],\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,51,0],\n\t\t\t\tgeometry: [647, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,-1,0],\n\t\t\t\tgeometry: [748, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-51,0],\n\t\t\t\tgeometry: [272, 26, 0]\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [682, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [537, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t},\n\t]);\n\n\t// this is causing bug: on viewport change position of orb is changing\n\t// const orbPositions = useMemo<any>(() => {\n\t// \tlet radius = 200;\n\t// \tif (viewport.width >= 1280) radius = 240\n\t// \treturn [\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t// \t\t\tstart: [0,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [-250,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t// \t\t\tstart: [50,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [100,0,0]\n\t// \t\t},\n\t// \t]\n\t// }, [viewport])\n\tconst orbPositions = useMemo<any>(() => {\n\t\tlet radius = 200;\n\t\tif (viewport.width >= 1280) radius = 240\n\t\treturn [\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t\t\t\tstart: [0,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [-250,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t\t\t\tstart: [50,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [100,0,0]\n\t\t\t},\n\t\t]\n\t}, [])\n\n\tconst orbPositionConfigs = useRef<any>({\n\t\tresting: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tintersecting: undefined,\n\t\tout: {\n\t\t\tmass: 5,\n\t\t\tfriction: 4.5,\n\t\t\tclamp: true,\n\t\t},\n\t\tto: {\n\t\t\tduration: 1\n\t\t},\n\t\tin: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tsubscribe: {\n\t\t\ttension: 120,\n\t\t\tclamp: true\n\t\t},\n\t\tsubscribe_hold: {\n\t\t\tmass: 70,\n\t\t\t// friction: 50,\n\t\t\ttension: 100,\n\t\t\tclamp: true\n\t\t\t// duration: 600\n\t\t},\n\t\tat_threshold: {\n\t\t\tduration: 600\n\t\t}\n\t})\n\n\t// chapter rects\n\n\tconst textRef1 = useRef<any>(null);\n\tconst textBbox1 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef2 = useRef<any>(null);\n\tconst textBbox2 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef3 = useRef<any>(null);\n\tconst textBbox3 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst subscribeRef = useRef<any>(null);\n\tlet subscribeBbox = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst [orbScale, setOrbScale] = useState<[number, number, number] | null>(null)\n\tconst [orbPosition, setOrbPosition] = useState<[number,number,number] | null>(orbPositions[chapterIndex].pre)\n\tconst [isIntersecting, setIsIntersecting] = useState<boolean>(orbMovingState === 'intersecting' ? true : false);\n\tconst [orbOpacity, setOrbOpacity] = useState<number>(1);\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1800; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = 200 * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = 200 * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = 200 * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [])\n\n\tconst getOrbPosition = useCallback(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tconst currentPosition = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z];\n\t\t\tconst setPosition = orbPosition;\n\t\t\tlet match;\n\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => {\n\t\t\t\t\t// if the coord is within 5 units away in any direction return true for that direction\n\t\t\t\t\treturn Math.abs(coord - setPosition[index]) < 8\n\t\t\t\t}) : false\n\t\t\t} else {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => coord === setPosition[index]) : false;\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\tswitch (orbMovingState) {\n\t\t\t\t\tcase 'to':\n\t\t\t\t\t\treturn 'pre'\n\t\t\t\t\tcase 'subscribe':\n\t\t\t\t\t\treturn 'subscribe'\n\t\t\t\t\tcase 'at_threshold':\n\t\t\t\t\t\treturn 'at_threshold'\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn false\n\t}, [orbMovingState, orbPosition])\n\n\tconst { position, opacity, transparent } = useSpring({\n\t\tposition: orbPosition,\n\t\topacity: orbOpacity,\n\t\ttransparent: 0,\n\t\tconfig: isIntersecting ? orbPositionConfigs.current.intersecting : orbPositionConfigs.current[orbMovingState],\n\t\tonFrame: ({ opacity }: { opacity: number }) => {\n\t\t\tconst match = getOrbPosition();\n\t\t\tif (match === 'pre') {\n\t\t\t\tsetSubscribeActive((prev) => {\n\t\t\t\t\tif (prev === true) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t})\n\t\t\t\tsetScrollIndicatorHeight(() => 0)\n\t\t\t\tsetOrbMovingState(() => 'in');\n\t\t\t\tsetOrbPosition(() => orbPositions[chapterIndex].start);\n\t\t\t} else if (match === 'subscribe') {\n\t\t\t\tsetEmailActive(() => true)\n\t\t\t} else if (match === 'at_threshold') {\n\t\t\t\tif (opacity === 0) {\n\t\t\t\t\t// do not set subscribe back to active until orb is at pre position\n\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\tsetOrbMovingState(() => 'to')\n\t\t\t\t\tsetEmailActive(() => false)\n\t\t\t\t\tsetOrbHold(() => false)\n\t\t\t\t\tsetOrbPosition(() => orbPositions[0].pre)\n\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\tconst autoRotateOrb = useCallback((number: number) => {\n\t\tif (orbRef.current !== null) {\n\t\t\torbRef.current.rotation.y += number\n\t\t}\n\t}, [])\n\n\tconst computeBoundingAreas = useCallback(() => {\n\t\tif (orbMask.current !== null) orbMask.current.geometry.computeBoundingSphere();\n\t\tif (textRef1.current !== null) textRef1.current.geometry.computeBoundingBox();\n\t\tif (textRef2.current !== null) textRef2.current.geometry.computeBoundingBox();\n\t\tif (textRef3.current !== null) textRef3.current.geometry.computeBoundingBox();\n\t\tif (subscribeRef.current !== null) subscribeRef.current.geometry.computeBoundingBox();\n\t}, [])\n\n\tconst updateOrbMaskSphereBboxRadius = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) {\n\t\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius;\n\t\t\t} else if (viewport.width >= 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius + 40;\n\t\t\t}\n\t\t}\n\t}, [viewport])\n\n\tconst updateOrbMaskSphereBboxCenter = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) orbMaskSphereBbox.current.center = new THREE.Vector3(orbMask.current.position.x, orbMask.current.position.y, orbMask.current.position.z)\n\t}, [])\n\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetBackgroundColor(() => '#D695AB')\n\t// \tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t// \tsetOrbOpacity(() => 0)\n\t// \tsetChapterIndex(() => 0)\n\t// \tsetSubscribeActive(() => false)\n\t// \tsetOrbMovingState(() => 'out')\n\t// \tsetEmailActive(() => false)\n\t// }, [setChapterIndex, setBackgroundColor, setButtonShadow, setOrbOpacity, setSubscribeActive, setEmailActive, setOrbMovingState])\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetOrbMovingState(() => 'at_threshold');\n\t// }, [setOrbMovingState])\n\n\tconst getClosestSide = useCallback((): string | null => {\n\t\tif (orbRef.current !== null ) {\n\t\t\tconst distanceObj = {\n\t\t\t\tleft: orbRef.current.position.x + (0.5 * viewport.width),\n\t\t\t\tright: (0.5 * viewport.width) - orbRef.current.position.x,\n\t\t\t\ttop: (0.5 * viewport.height) - orbRef.current.position.y,\n\t\t\t\tbottom: orbRef.current.position.y + (0.5 * viewport.height)\n\t\t\t}\n\t\t\t\n\t\t\tconst min = Math.min(distanceObj.left, distanceObj.right, distanceObj.top, distanceObj.bottom);\n\n\t\t\tif (min === distanceObj.left) {\n\t\t\t\treturn 'left'\n\t\t\t} else if (min === distanceObj.right) {\n\t\t\t\treturn 'right'\n\t\t\t} else if (min === distanceObj.bottom) {\n\t\t\t\treturn 'bottom'\n\t\t\t} else if (min === distanceObj.top) {\n\t\t\t\treturn 'top'\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}, [viewport])\n\n\tconst getTranslatedPointerPosition = useCallback(() => {\n\t\tlet position: [number, number, number] | null = null;\n\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\tconst x = pointerPosition[0] - window.innerWidth / 2;\n\t\t\tconst y = -pointerPosition[1] + window.innerHeight / 2;\n\t\t\tposition = [x, y, 0];\n\t\t}\n\t\treturn position\n\t}, [pointerPosition])\n\n\tconst isSphereIntersectingBox = useCallback((sphere: THREE.Sphere, box: Box3) => {\n\t\tvar x = Math.max(box.min.x, Math.min(sphere.center.x, box.max.x));\n\t\tvar y = Math.max(box.min.y, Math.min(sphere.center.y, box.max.y));\n\t\tvar z = Math.max(box.min.z, Math.min(sphere.center.z, box.max.z));\n\t  \n\t\tvar distance = Math.sqrt((x - sphere.center.x) * (x - sphere.center.x) +\n\t\t\t\t\t\t\t\t (y - sphere.center.y) * (y - sphere.center.y) +\n\t\t\t\t\t\t\t\t (z - sphere.center.z) * (z - sphere.center.z));\n\t\t\n\t\treturn distance < sphere.radius;\n\t}, [])\n\n\tconst moveOut = useCallback(() => {\n\t\t// using the closest side, translate out of view\n\t\tlet radius: number;\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tradius = 200;\n\t\t} else {\n\t\t\tradius = 240;\n\t\t}\n\n\t\tsetOrbPosition((prev) => {\n\t\t\tif (prev !== null && orbRef.current !== null) {\n\t\t\t\tlet x = orbRef.current.position.x;\n\t\t\t\tlet y = orbRef.current.position.y;\n\t\t\t\tconst z = orbRef.current.position.z;\n\t\t\t\tif (closestSide.current === 'left') {\n\t\t\t\t\tx = (-0.5 * viewport.width) - radius;\n\t\t\t\t} else if (closestSide.current === 'bottom') {\n\t\t\t\t\ty = (-0.5 * viewport.height) - radius;\n\t\t\t\t} else if (closestSide.current === 'top') {\n\t\t\t\t\ty = (0.5 * viewport.height) + radius\n\t\t\t\t} else if (closestSide.current === 'right') {\n\t\t\t\t\tx = (0.5 * viewport.width) + radius;\n\t\t\t\t}\n\t\t\t\treturn [x,y,z]\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t}, [viewport])\n\n\tconst isOrbIntersecting = useCallback(() => {\n\t\treturn !subscribeActive ? isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox1.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, subscribeBbox.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox2.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox3.current) : false\n\t}, [isSphereIntersectingBox, subscribeActive])\n\n\tuseEffect(() => {\n\t\tcomputeBoundingAreas();\n\t\t\n\t\tsubscribeBbox.current.setFromObject(subscribeRef.current);\n\t\t\n\t\tupdateOrbMaskSphereBboxRadius()\n\t\tupdateOrbMaskSphereBboxCenter();\n\t}, [computeBoundingAreas, updateOrbMaskSphereBboxRadius, updateOrbMaskSphereBboxCenter])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState(() => 'to');\n\t\tsetOrbPosition(() => orbPositions[chapterIndex].pre);\n\t\ttextBbox1.current.setFromObject(textRef1.current);\n\t\ttextBbox2.current.setFromObject(textRef2.current);\n\t\ttextBbox3.current.setFromObject(textRef3.current);\n\t}, [chapterIndex, setOrbMovingState, orbPositions])\n\n\tuseEffect(() => {\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tsetOrbScale(() => [1,1,1])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t} else {\n\t\t\tsetOrbScale(() => [1.2, 1.2, 1.2])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t}\n\t}, [viewport, updateOrbMaskSphereBboxRadius])\n\n\tuseEffect(() => {\n\t\tif (orbMovingState === 'out') {\n\t\t\tmoveOut();\n\t\t\tresetPointer();\n\t\t} else if (orbMovingState === 'at_threshold') {\n\t\t\tsetOrbOpacity(() => 0);\n\t\t} else if (orbMovingState === 'to') {\n\t\t\tsetOrbOpacity((prev) => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [orbMovingState, moveOut, resetPointer])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetOrbMovingState(() => 'subscribe')\n\t\t} else {\n\t\t\tsetOrbOpacity(prev => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [subscribeActive, setOrbMovingState])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState((prev) => {\n\t\t\tif (prev === 'subscribe' && orbHold === true) {\n\t\t\t\treturn 'subscribe_hold'\n\t\t\t} else if (prev === 'subscribe_hold' && orbHold === false) {\n\t\t\t\treturn 'subscribe'\n\t\t\t}\n\t\t\treturn prev\n\t\t})\n\t}, [orbHold, setOrbMovingState])\n \n\tuseFrame(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tautoRotateOrb(0.001);\n\n\t\t\t// update the orbMaskSphereBbox to the position of the orbMask\n\t\t\tupdateOrbMaskSphereBboxCenter();\n\n\t\t\t// calculate what side or is closest to\n\t\t\tclosestSide.current = getClosestSide();\n\n\t\t\t// logic for orb movement\n\t\t\tif (!isOrbIntersecting()) {\n\t\t\t\tsetIsIntersecting(() => false)\n\t\t\t\tpreviousPosition.current = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z]\n\t\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\t\tsetOrbPosition(() => {\n\t\t\t\t\t\tsubscribePosition.current = [viewport.width < 1280 ? -220 : -260, 0, 0];\n\t\t\t\t\t\treturn [viewport.width < 1280 ? -220 : -260, 0, 0]\n\t\t\t\t\t})\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'resting') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'resting') {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) return getTranslatedPointerPosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'in') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'resting');\n\t\t\t\t\t\t\t\treturn getTranslatedPointerPosition();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'subscribe_hold') {\n\t\t\t\t\tsetOrbPosition(() => [0, 0, 0])\n\t\t\t\t\t// get percentage of travel\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\t// percentage is 100 when origin is atleast 10 units away from origin\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// automator\n\t\t\t\t\t\t\t\tif (percentage === 1) {\n\t\t\t\t\t\t\t\t\t// atHoldThresholdAutomator();\n\t\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'at_threshold');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetIsIntersecting(() => true)\n\t\t\t\tsetOrbPosition(() => previousPosition.current)\n\t\t\t}\n\t\t}\n\t})\t\n\t\n\treturn (\n\t\t<>\n\t\t\t<group\n\t\t\t>\n\t\t\t\t<a.mesh\n\t\t\t\t\tonPointerDown={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return true\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tonPointerUp={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return false\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tref={orbMask}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t>\n\t\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\targs={[200, 32, 32, 0, 2*Math.PI, 0, Math.PI]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t\tside={DoubleSide}\n\t\t\t\t\t/>\n\t\t\t\t</a.mesh>\n\t\t\t\t<a.points\n\t\t\t\t\tonPointerDown={() => setOrbHold(() => true)}\n\t\t\t\t\tonPointerUp={() => setOrbHold(() => false)}\n\t\t\t\t\tref={orbRef}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t\t// opacity={orbAnimationProps.opacity}\n\t\t\t\t>\t\n\t\t\t\t\t<geometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\tvertices={vertices}\n\t\t\t\t\t/>\n\t\t\t\t\t<a.pointsMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t\tsize={2.5}\n\t\t\t\t\t\ttransparent={transparent}\n\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t/>\n\t\t\t\t</a.points>\n\t\t\t</group>\n\t\t\t<group>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef1}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef1.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef1.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef2}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef2.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef2.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef3}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef3.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef3.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={subscribeRef}\n\t\t\t\t\tposition={[0, -viewport.height / 2.65, 0]}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={[280, 50, 0]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t</group>\t\t\t\n\t\t</>\n\t)\n\t\n}\n\t\n","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef, useEffect\n\t}\nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface DesktopEmailProps {\n\temailActive: boolean\n\torbHold: boolean\n}\n\nexport const Email: FunctionComponent<DesktopEmailProps> = ({\n\temailActive,\n\torbHold\n}) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\tlet [inputFocus, setInputFocus] = useState<boolean>(false);\n\tconst emailDiv = useRef<HTMLDivElement | null>(null)\n\n\tconst emailDivProps = useSpring({\n\t\topacity: orbHold ? 0 : 1,\n\t\tvisibility: orbHold ? 'hidden' : 'visible',\n\t\tconfig: {\n\t\t\tmass: 2,\n\t\t\tfriction: 2,\n\t\t\tclamp: true\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (emailDiv.current !== null) {\n\t\t\temailActive ? emailDiv.current.classList.add('active') : emailDiv.current.classList.remove('active')\n\t\t\tif (inputFocus) {\n\t\t\t\temailDiv.current.classList.add('focused') \n\t\t\t} else {\n\t\t\t\temailDiv.current.classList.remove('focused')\n\t\t\t}\n\t\t}\n\t}, [emailActive, inputFocus, email])\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\treturn (\n\t\t<animated.div className='DesktopEmail grid' ref={emailDiv} style={emailDivProps}>\n\t\t\t<form onSubmit={submitHandler} className={success ? 'desktopEmailWrapper Email success' : (success === 'false' ? 'desktopEmailWrapper Email fail' : 'desktopEmailWrapper Email')}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h3>STAY UPDATED WITH THE</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h3>ANDY MAG NEWSLETTER</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<label>\n\t\t\t\t\t<h4>Email</h4>\n\t\t\t\t</label>\n\t\t\t\t{ inputFocus ? <img className=\"submitIcon\" src=\"../assets/paper_plane_purple.svg\" alt=\"Submit\" /> : <img className=\"submitIcon\" src=\"../assets/paper_plane_white.svg\" alt=\"Submit\" /> }\n\t\t\t\t<input\n\t\t\t\t\tonFocus={() => setInputFocus(() => true)}\n\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\t\tif (email === undefined || email.length < 1) setInputFocus(() => false)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t\t{/* <input type=\"submit\" value=\"SUBSCRIBE\"/> */}\n\t\t\t</form>\n\t\t\t{/* <div className=\"hold-icon\">\n\t\t\t\t<img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/>\n\t\t\t\t<p>Press and hold to go back</p>\n\t\t\t</div> */}\n\t\t</animated.div>\n\t\t\n\t)\n}","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef,\n\t\tuseEffect,\n\t\tuseCallback,\n\t} \nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Canvas } from 'react-three-fiber';\n\nimport { DesktopText } from './DesktopText';\n// import { DesktopOrb } from './DesktopOrb';\nimport { Orb } from './DesktopOrb3';\n// import { DesktopInstructions } from './DesktopInstructions'\nimport { Email } from './DesktopEmailForm';\n\ninterface OrbState {\n\torb_position: [number, number, number],\n\tmove_state: 'out' | 'in' | 'to' | 'rest',\n}\n\nexport const DesktopApp: FunctionComponent = () => {\n\tlet [chapterIndex, setChapterIndex] = useState<number>(0);\n\tlet [backgroundColor, setBackgroundColor] = useState<string>('#D695AB')\n\tlet [subscribeActive, setSubscribeActive] = useState<boolean>(false);\n\tlet [emailActive, setEmailActive] = useState<boolean>(false);\n\tlet [buttonShadow, setButtonShadow] = useState<string>('1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\tconst scrollIndicatorPositions = useRef<number[]>([0, 10, 19, 28.2]);\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tlet [scrollIndicatorHeight, setScrollIndicatorHeight] = useState<number>(0);\n\tlet [canvasViewport, setCanvasViewport] = useState<{width: number, height: number, factor: number} | null>(null)\n\tlet [orbMovingState, setOrbMovingState] = useState<'out' | 'resting' | 'to' | 'intersecting' | 'in' | 'subscribe' | 'subscribe_hold' | 'at_threshold'>('resting')\n\tlet [orbHold, setOrbHold] = useState<boolean>(false);\n\tlet [pointerPosition, setPointerPosition] = useState<[number | null, number | null]>([null, null])\n\t// console.log(scrollIndicatorHeight);\n\tlet wheelThreshold = useRef<number>(40);\n\tlet containerRef = useRef<HTMLDivElement>(null);\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\t// top: subscribeActive ? 'auto' : scrollIndicatorPosition,\n\t\ttop: !subscribeActive ? scrollIndicatorPosition : 'auto',\n\t\tbottom: subscribeActive ? 1 : 'auto',\n\t\theight: subscribeActive ? scrollIndicatorHeight : 19,\n\t\tconfig: { clamp: true },\n\t\tbackgroundColor: !subscribeActive ? 'black' : 'white',\n\t})\n\n\t// const instructionsProps = useSpring({\n\t// \topacity: orbHold ? 0 : 1\n\t// })\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerPosition(() => [null, null])\n\t}, [])\n\n\tconst subscribeButtonProps = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName=\"DesktopAnimation\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: backgroundColor\n\t\t\t}}\n\t\t\tonPointerMove={(e) => {\n\t\t\t\tconst {\n\t\t\t\t\tclientX,\n\t\t\t\t\tclientY\n\t\t\t\t} = e;\n\t\t\t\tsetPointerPosition(() => {\n\t\t\t\t\treturn [clientX, clientY]\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\t\t\t<Canvas\n\t\t\t\tclassName=\"Orb\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t\torthographic\n\t\t\t\tcamera={{\n\t\t\t\t\tleft: canvasViewport ? -canvasViewport.width / 2 : undefined,\n\t\t\t\t\tright: canvasViewport ? canvasViewport.width / 2 : undefined,\n\t\t\t\t\ttop: canvasViewport ? canvasViewport.height / 2 : undefined,\n\t\t\t\t\tbottom: canvasViewport ? -canvasViewport.height / 2 : undefined,\n\t\t\t\t\tnear: 300,\n\t\t\t\t\tfar: -300\n\t\t\t\t}}\n\t\t\t>\t\n\t\t\t\t<Orb setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setChapterIndex={setChapterIndex} setScrollIndicatorHeight={setScrollIndicatorHeight} orbHold={orbHold} setOrbHold={setOrbHold} setEmailActive={setEmailActive} pointerPosition={pointerPosition} chapterIndex={chapterIndex} orbMovingState={orbMovingState} resetPointer={resetPointer} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} setSubscribeActive={setSubscribeActive} />\n\t\t\t</Canvas>\n\t\t\t<div className=\"logo\" onClick={() => setChapterIndex(() => 0)}>\n\t\t\t\t{ !subscribeActive ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' />}\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<DesktopText chapterIndex={chapterIndex} setChapterIndex={setChapterIndex} wheelThreshold={wheelThreshold.current} setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} />\n\t\t\t<animated.div className=\"SubscribeButton\" style={subscribeButtonProps}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSubscribeActive(() => true)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: buttonShadow\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSUBSCRIBE\n\t\t\t\t</button>\n\t\t\t</animated.div>\n\t\t\t<div className=\"SocialMedia\">\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.snapchat.com/add/theandymag\"><img src=\"../assets/snapchat.svg\" alt=\"Snapchat\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/theandymag/\"><img src=\"../assets/instagram.svg\" alt=\"Instagram\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/theandymag_\"><img src=\"../assets/twitter.svg\" alt=\"Twitter\" /></a>\n\t\t\t</div>\n\t\t\t{/* <DesktopInstructions /> */}\n\t\t\t<Email orbHold={orbHold} emailActive={emailActive} />\n\t\t</div>\n\t)\n}","import React, { useEffect, useState, useCallback } from 'react';\n\nimport './styles/base.sass'\nimport { MobileApp } from './Components/MobileApp'\nimport { DesktopApp } from './Components/DesktopApp'\n\nfunction App() {\n\t\n\tlet [isMobile, setIsMobile] = useState<Boolean>(window.innerWidth <= 900);\n\n\tconst windowResizeHandler = useCallback(() => {\n\t\twindow.innerWidth <= 900 ? setIsMobile(true) : setIsMobile(false);\n\t}, [])\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', windowResizeHandler)\n\t}, [windowResizeHandler]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\tisMobile ? <MobileApp /> : <DesktopApp />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}