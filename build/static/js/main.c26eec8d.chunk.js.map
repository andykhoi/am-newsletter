{"version":3,"sources":["Components/Sphere.tsx","hooks/useDidUpdate.tsx","Components/GradientShow2.tsx","Components/Email.tsx","Components/MobileEmailForm.tsx","Components/MobileAnimation.tsx","Components/MobileApp.tsx","Components/DesktopText.tsx","Components/DesktopOrb3.tsx","Components/DesktopEmailForm.tsx","Components/DesktopApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sphere","radius","startPosition","sphereState","setSphereState","setGradientActive","breakPoint","endPosition","setEmailVisible","setInstructionsVisible","sphereRef","useRef","hemisphereRef","currentPosition","sphereAnimationProps","useSpring","config","mass","tension","friction","clamp","pointsPosition","hold","circlePosition","onFrame","arg","current","direction","onRest","length","every","position","index","useFrame","rotation","y","pointerUpHandler","useCallback","vertices","useMemo","computedVertices","i","theta","THREE","randFloatSpread","phi","x","Math","sin","cos","z","push","map","v","mesh","PI","ref","onPointerDown","onPointerUp","attach","args","transparent","opacity","side","DoubleSide","points","color","size","useDidUpdate","func","deps","didUpdate","useEffect","GradientShow2","gradientActive","swipeThreshold","children","chapterConfigs","chapterIndex","setChapterIndex","darkMode","planeRef","undefined","containerRef","MAX_CHAPTERS","React","Children","toArray","MAX_TEXT_SHADOW","scrollIndicatorPositions","useState","active","initial_y_direction","x_start","y_start","y_travel","x_travel","swipePercentage","pointerState","setPointerState","textOpacity","setTextOpacity","textShadow","setTextShadow","textColor","setTextColor","lightColor","setLightColor","lightPosition","setLightPosition","lightRotation","planeColor","setPlaneColor","lightIntensity","setLightIntensity","scrollIndicatorPosition","setScrollIndicatorPosition","unmountLightColor","planeAnimation","useSpringThree","rectLightAnimation","intensity","coord","setTimeout","scrollIndicatorAnimate","backgroundColor","top","gradientContainerAnimation","zIndex","immediate","key","unmount","resetPointer","resetAnimationValues","pointerDownHandler","e","clientY","clientX","prevState","updatedValues","pointerMoveHandler","preventDefault","y_position","x_position","abs","el","addEventListener","removeEventListener","absSwipePercentage","div","className","style","items","from","update","enter","leave","props","cloneElement","rectAreaLight","width","height","lookAt","meshPhysicalMaterial","Email","success","setSuccess","email","setEmail","emailInputProps","borderBottom","duration","submitButtonProps","boxShadow","onSubmit","body","options","method","headers","JSON","stringify","fetch","process","then","res","json","data","console","log","statusCode","catch","error","input","type","value","placeholder","onChange","currentTarget","required","MobileEmailForm","emailVisible","setDarkMode","animationProps","bottom","includes","textProps","buttonProps","border","p","button","onClick","MobileAnimation","instructionsVisible","gradientConfig","instructionsDivProps","instructionsTextProps","src","alt","camera","MobileApp","DesktopText","wheelThreshold","setBackgroundColor","setButtonShadow","setOrbMovingState","subscribeActive","chapterRefs","createRef","textTransitioning","setTextTransitioning","textAnimation","reset","forEach","chapter","classList","remove","add","contains","wheelHandler","event","deltaY","onWheel","transitionDelay","onTransitionEnd","Orb","pointerPosition","orbMovingState","setSubscribeActive","setEmailActive","setOrbHold","orbHold","setScrollIndicatorHeight","viewport","useThree","orbRef","previousPosition","closestSide","subscribePosition","orbMask","orbMaskSphereBbox","rectPositions","textRef1","geometry","textRef2","textRef3","orbPositions","pre","start","orbPositionConfigs","resting","intersecting","out","to","in","subscribe","subscribe_hold","at_threshold","textBbox1","Box3","textBbox2","textBbox3","subscribeRef","subscribeBbox","orbScale","setOrbScale","orbPosition","setOrbPosition","isIntersecting","setIsIntersecting","orbOpacity","setOrbOpacity","getOrbPosition","setPosition","match","prev","autoRotateOrb","number","computeBoundingAreas","computeBoundingSphere","computeBoundingBox","updateOrbMaskSphereBboxRadius","boundingSphere","updateOrbMaskSphereBboxCenter","center","getClosestSide","distanceObj","left","right","min","getTranslatedPointerPosition","window","innerWidth","innerHeight","isSphereIntersectingBox","sphere","box","max","sqrt","moveOut","isOrbIntersecting","setFromObject","x1","currentX","percentage","scale","pointsMaterial","emailActive","inputFocus","setInputFocus","emailDiv","emailDivProps","visibility","onFocus","onBlur","DesktopApp","buttonShadow","scrollIndicatorHeight","canvasViewport","setPointerPosition","subscribeButtonProps","onPointerMove","orthographic","near","far","target","rel","href","App","isMobile","setIsMobile","windowResizeHandler","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c26eec8d.chunk.js","sourcesContent":["import React, { FunctionComponent, useRef, useCallback, useMemo } from 'react';\nimport * as THREE from 'three/';\nimport { useFrame } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three'\nimport { DoubleSide } from 'three/';\n\ninterface SphereProps {\n\tradius: number,\n\tsetInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\tsetEmailVisible: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereAnimationProps?: any,\n\tsetGradientActive: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t}>>\n\tsphereState: {\n\t\thold: Boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t},\n\tstartPosition: [number, number, number],\n\tendPosition: [number, number, number],\n\tbreakPoint: number,\n}\n\nexport const Sphere: FunctionComponent<SphereProps> = ({ radius, startPosition, sphereState, setSphereState, setGradientActive, breakPoint, endPosition, setEmailVisible, setInstructionsVisible }) => {\n\tconst sphereRef = useRef<THREE.Points | null>(null);\n\tconst hemisphereRef = useRef<THREE.Points | null>(null);\n\tconst currentPosition = useRef<[number, number, number]>(startPosition);\n\tconst sphereAnimationProps = useSpring({\n\t\tconfig: { mass: 1.8, tension: 84, friction: 22, clamp: true },\n\t\tpointsPosition: !sphereState.hold ? startPosition : endPosition,\n\t\tcirclePosition: !sphereState.hold ? startPosition : endPosition,\n\t\tonFrame: (arg: any) => {\n\t\t\tcurrentPosition.current = arg.pointsPosition\n\t\t\tif (currentPosition.current[2] > 0 && currentPosition.current[2] < 50) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetEmailVisible(() => true)\n\t\t\t\t\tsetInstructionsVisible(() => true)\n\t\t\t\t} else {\n\t\t\t\t\tsetEmailVisible(() => false);\n\t\t\t\t\tsetInstructionsVisible(() => false)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRest: (arg: any) => { \n\t\t\tif (currentPosition.current.length === endPosition.length && currentPosition.current.every((position: number, index: number) => position === endPosition[index])) {\n\t\t\t\tsetGradientActive(() => true);\n\t\t\t}\n\t\t}\n\t})\n\n\tuseFrame(() => {\n\t\tif (sphereRef.current) {\n\t\t\treturn sphereRef.current.rotation.y = sphereRef.current.rotation.y + 0.003\n\t\t}\n\t});\n\n\tconst pointerUpHandler = useCallback(() => {\n\t\tif (currentPosition.current[2] >= breakPoint) {\n\t\t\tsetSphereState({\n\t\t\t\thold: true,\n\t\t\t\tdirection: 'forwards',\n\t\t\t});\n\t\t} else {\n\t\t\tsetSphereState({\n\t\t\t\thold: false,\n\t\t\t\tdirection: 'backwards',\n\t\t\t});\n\t\t}\n\t}, [setSphereState, breakPoint])\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1600; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = radius * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = radius * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = radius * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [radius])\n\t\n\treturn (\n\t\t<group>\n\t\t\t<a.mesh\n\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\tref={hemisphereRef}\n\t\t\t\tonPointerDown={() => setSphereState({\n\t\t\t\t\thold: true,\n\t\t\t\t\tdirection: 'forwards',\n\t\t\t\t})}\n\t\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t\tposition={sphereAnimationProps.circlePosition}\n\t\t\t>\n\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\targs={[130, 32, 32, 0, 2*Math.PI, 0, 0.7 * Math.PI]}\n\t\t\t\t/>\n\t\t\t\t<meshBasicMaterial attach='material' transparent={true} opacity={0} side={DoubleSide} />\n\t\t\t</a.mesh>\n\t\t\t<a.points \n\t\t\t\tref={sphereRef}\n\t\t\t\t// ref={sphereRef}\n\t\t\t\tposition={sphereAnimationProps.pointsPosition}\n\t\t\t>\t\n\t\t\t\t<geometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\tvertices={vertices}\n\t\t\t\t/>\n\t\t\t\t<pointsMaterial\n\t\t\t\t\tattach='material'\n\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t// sizeAttenuation={false}\n\t\t\t\t\t// map={sprite}\n\t\t\t\t\tsize={2}\n\t\t\t\t/>\n\t\t\t</a.points>\n\t\t</group>\n\t)\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react';\n\nexport const useDidUpdate = (func: any, deps: Array<any>) => {\n    const didUpdate = useRef(false);\n\n    useEffect(() => {\n        if (didUpdate.current) func();\n        else didUpdate.current = true;\n    }, deps);\n}","import React, { FunctionComponent, useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDidUpdate } from '../hooks/useDidUpdate'\nimport { Canvas } from 'react-three-fiber'\nimport { useSpring as useSpringThree, a as aThree } from 'react-spring/three'\nimport { useSpring, animated } from 'react-spring'\nimport * as THREE from 'three/';\nimport { Transition } from 'react-spring/renderprops';\n\ninterface GradientShowProps {\n\tprops?: any\n\tgradientActive: Boolean,\n\tswipeThreshold: number,\n\tchapterConfigs: any,\n\tchapterIndex: number | null,\n\tdarkMode: Boolean,\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number | null>>,\n\tsetGradientActive: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t}>>\n\tchildren: React.ReactNode\n}\ninterface PointerState {\n\tactive: Boolean,\n\tinitial_y_direction: 'up' | 'down' | null\n\tx_start: number | null\n\ty_start: number | null\n\ty_travel: number | null\n\tx_travel: number | null\n\tswipePercentage: number | null\n}\n\n// will have to reset to initial state when user presses Icon\n\nexport const GradientShow2: FunctionComponent<GradientShowProps> = ({ gradientActive, swipeThreshold, children, chapterConfigs, setGradientActive, setSphereState, chapterIndex, setChapterIndex, darkMode }) => {\n\tconst planeRef = useRef<THREE.Object3D | undefined>(undefined);\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\n\tconst MAX_CHAPTERS = useRef<number>(React.Children.toArray(children).length);\n\tconst MAX_TEXT_SHADOW = useRef<number>(7);\n\tconst scrollIndicatorPositions = useRef<number[]>([25, 33.8, 42.7, 51.5]);\n\t// const MAX_TEXT_OPACITY = useRef<number>(1);\n\n\tlet [pointerState, setPointerState] = useState<PointerState>({\n\t\tactive: false,\n\t\tinitial_y_direction: null,\n\t\tx_start: null,\n\t\ty_start: null,\n\t\ty_travel: null, // length of y drag, null if active is false\n\t\tx_travel: null, // length of x drag, null if active is false\n\t\tswipePercentage: null // y_travel / swipeThreshold\n\t})\t\n\tlet [textOpacity, setTextOpacity] = useState<number>(1);\n\tlet [textShadow, setTextShadow] = useState<number>(0);\n\tlet [textColor, setTextColor] = useState<string>(chapterConfigs[0].textColor)\n\tlet [lightColor, setLightColor] = useState<string>(chapterConfigs[0].lightColor)\n\tlet [lightPosition, setLightPosition] = useState<[number, number, number]>([0,0,0]);\n\tlet [lightRotation, setLightRotation] = useState<[number, number, number]>([0,0,0]);\n\tlet [planeColor, setPlaneColor] = useState<string>(chapterConfigs[0].planeColor)\n\tlet [lightIntensity, setLightIntensity] = useState<number>(chapterConfigs[0].lightIntensity)\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tconst unmountLightColor = useMemo(() => darkMode ? '#000000' : '#FFFFFF', [darkMode])\n\t\n\t// plane color\n\tconst planeAnimation = useSpringThree({\n\t\tcolor: planeColor,\n\t})\n\n\t// light position\n\tconst rectLightAnimation = useSpringThree({\n\t\tposition: lightPosition,\n\t\tcolor: lightColor,\n\t\trotation: lightRotation,\n\t\tintensity: lightIntensity,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 8,\n\t\t\ttension: 70,\n\t\t\tclamp: true\n\t\t},\n\t\tonRest: (arg: any) => {\n\t\t\tif (chapterIndex === null && lightPosition.every(coord => coord === 0)) {\n\t\t\t\tsetGradientActive(() => false);\n\t\t\t\tsetSphereState(() => ({\n\t\t\t\t\thold: false,\n\t\t\t\t\tdirection: 'backwards',\n\t\t\t\t}))\n\t\t\t\tsetTimeout(() => setChapterIndex(() => 0), 500);\n\t\t\t}\n\t\t} \n\t});\n\n\t// scrollIndicator \n\tconst scrollIndicatorAnimate = useSpring({\n\t\tbackgroundColor: darkMode ? '#FFFFFF' : '#000000',\n\t\ttop: scrollIndicatorPosition,\n\t\topacity: chapterIndex === null ? '0' : '1',\n\t\tconfig: { clamp: true }\n\t\t// config: { mass: 1, friction: 1, tension: 100, clamp: true }\n\t})\n\n\t// container opacity & z-index\n\tconst gradientContainerAnimation = useSpring({\n\t\tzIndex: !gradientActive ? -1 : 4,\n\t\topacity: !gradientActive ? 0 : 1,\n\t\timmediate: key => key === 'zIndex',\n\t});\n\n\tconst unmount = useCallback(() => {\n\t\tsetChapterIndex(() => null);\n\t}, [setChapterIndex])\n\n\t// reset pointer to default, unactive state\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerState(() => ({\n\t\t\tactive: false,\n\t\t\tinitial_y_direction: null,\n\t\t\tx_start: null,\n\t\t\ty_start: null,\n\t\t\ty_travel: null,\n\t\t\tx_travel: null,\n\t\t\tswipePercentage: null\n\t\t}))\n\t}, [])\n\n\t// reset react-spring animation values to defaults\n\tconst resetAnimationValues = useCallback(() => {\n\t\tsetLightColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].lightColor\n\t\t});\n\t\tsetTextColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].textColor;\n\t\t});\n\t\tsetLightIntensity(() => {\n\t\t\treturn chapterIndex === null ? 2 : chapterConfigs[chapterIndex].lightIntensity;\n\t\t})\n\t\tsetPlaneColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].planeColor;\n\t\t});\n\t\tsetLightPosition(() => [0,0,0]);\n\t\tsetTextShadow(() => 0);\n\t\tsetTextOpacity(() => 1);\n\t}, [chapterIndex, chapterConfigs, unmountLightColor])\n\n\tconst pointerDownHandler = useCallback((e: PointerEvent) => {\n\t\tconst y_start = e.clientY;\n\t\tconst x_start = e.clientX;\n\t\tsetPointerState(prevState => {\n\t\t\tconst updatedValues = {\n\t\t\t\tactive: true,\n\t\t\t\tx_start,\n\t\t\t\ty_start,\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...prevState, ...updatedValues\n\t\t\t}\n\t\t})\n\t}, [])\n\n\tconst pointerUpHandler = useCallback((e: PointerEvent) => {\n\t\tresetPointer();\n\t}, [resetPointer])\n\n\tconst pointerMoveHandler = useCallback((e: PointerEvent) => {\n\t\tif (pointerState.active) {\n\t\t\te.preventDefault();\n\t\t\tconst y_position = e.clientY;\n\t\t\tconst x_position = e.clientX;\n\t\t\tsetPointerState(prevState => {\n\t\t\t\tlet updatedValues;\n\t\t\t\tconst y_travel = prevState.y_start ? y_position - prevState.y_start : null;\n\t\t\t\tconst x_travel = prevState.x_start ? x_position - prevState.x_start : null;\n\t\t\t\t\n\t\t\t\tif (prevState.initial_y_direction === null) {\n\t\t\t\t\tlet initial_y_direction: 'up' | 'down' | null = null;\n\t\t\t\t\tif (y_travel) {\n\t\t\t\t\t\tif (y_travel < 0) {\n\t\t\t\t\t\t\tinitial_y_direction = 'up';\n\t\t\t\t\t\t} else if (y_travel > 0) {\n\t\t\t\t\t\t\tinitial_y_direction = 'down';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\tinitial_y_direction,\n\t\t\t\t\t}\n\t\t\t\t} else if (prevState.initial_y_direction !== null) {\n\t\t\t\t\tlet swipePercentage = y_travel !== null ? y_travel / swipeThreshold : null;\n\t\t\t\t\tif (prevState.initial_y_direction === 'up') {\n\t\t\t\t\t\tif (swipePercentage && swipePercentage < 0) {\n\t\t\t\t\t\t\tif (Math.abs(swipePercentage) < 0.10) swipePercentage = 0;\n\t\t\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\t\t\tswipePercentage,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (prevState.initial_y_direction === 'down' && chapterIndex !== null && chapterIndex > 0) {\n\t\t\t\t\t\tif (swipePercentage && swipePercentage > 0) {\n\t\t\t\t\t\t\tif (Math.abs(swipePercentage) < 0.10) swipePercentage = 0;\n\t\t\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\t\t\tswipePercentage,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...prevState, ...updatedValues\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [pointerState, swipeThreshold, chapterIndex])\n\n\tuseEffect(() => {\n\t\tconst el = containerRef.current\n\t\tif (el) {\n\t\t\tel.addEventListener('pointerdown', pointerDownHandler)\n\t\t\tel.addEventListener('pointermove', pointerMoveHandler, false)\n\t\t\tel.addEventListener('pointerup', pointerUpHandler)\n\t\t}\n\t\treturn () => {\n\t\t\tif (el) {\n\t\t\t\tel.removeEventListener('pointerdown', pointerDownHandler)\n\t\t\t\tel.removeEventListener('pointermove', pointerMoveHandler, false)\n\t\t\t\tel.removeEventListener('pointerup', pointerUpHandler)\n\t\t\t}\n\t\t}\t\n\t}, [pointerMoveHandler, pointerDownHandler, pointerUpHandler])\n\n\tuseEffect(() => {\n\t\tconst { \n\t\t\tactive,\n\t\t\tswipePercentage,\n\t\t\tinitial_y_direction,\n\t\t} = pointerState;\n\t\tif (active) {\n\t\t\tif (swipePercentage !== null) {\n\t\t\t\tconst absSwipePercentage = Math.abs(swipePercentage);\n\t\t\t\tif (absSwipePercentage >= 1) {\n\t\t\t\t\t// define unmounting scenario here\n\t\t\t\t\t// swipePercentage < 0 ? setChapterIndex(prevState => prevState + 1) : setChapterIndex(prevState => prevState - 1)\n\t\t\t\t\tif (swipePercentage < 0) {\n\t\t\t\t\t\tif (chapterIndex === MAX_CHAPTERS.current - 1) {\n\t\t\t\t\t\t\t// unmount\n\t\t\t\t\t\t\tunmount();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetChapterIndex(prevState => {\n\t\t\t\t\t\t\t\tif (prevState !== null) {\n\t\t\t\t\t\t\t\t\treturn prevState + 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn prevState\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetChapterIndex(prevState => {\n\t\t\t\t\t\t\tif (prevState !== null) {\n\t\t\t\t\t\t\t\treturn prevState - 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn prevState\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tresetPointer();\n\t\t\t\t} else if (absSwipePercentage >= 0 && absSwipePercentage < 1) {\n\t\t\t\t\tsetTextShadow(() => 4 + (absSwipePercentage * MAX_TEXT_SHADOW.current))\n\t\t\t\t\tsetTextOpacity(() => 1 - (absSwipePercentage * 0.5))\n\t\t\t\t\tif (absSwipePercentage >= 0.70) {\n\t\t\t\t\t\tsetLightPosition(() => [48, 120, 72])\n\t\t\t\t\t} else if (absSwipePercentage >= 0.50) {\n\t\t\t\t\t\tsetLightPosition(() => [36, 90, 54])\n\t\t\t\t\t} else if (absSwipePercentage >= 0.10) {\n\t\t\t\t\t\tsetLightPosition(() => [27, 67.5, 40.5])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (initial_y_direction === null) {\n\t\t\t\tsetTextShadow(() => 3.5)\n\t\t\t\t// setTextOpacity(() => 0.8)\n\t\t\t\tsetLightPosition(() => [10, -52.5, 31.5])\n\t\t\t} else if (chapterIndex === 0) {\n\t\t\t\tif (initial_y_direction === 'down') resetPointer();\n\t\t\t}\n\t\t} else {\n\t\t\tresetAnimationValues();\n\t\t}\n\t}, [pointerState, chapterIndex, resetPointer, resetAnimationValues, unmount, setChapterIndex])\n\n\tuseDidUpdate(() => {\n\t\tsetLightColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].lightColor;\n\t\t});\n\t\tsetTextColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].textColor;\n\t\t});\n\t\tsetLightIntensity(() => {\n\t\t\treturn chapterIndex === null ? 2 : chapterConfigs[chapterIndex].lightIntensity;\n\t\t})\n\t\tsetPlaneColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].planeColor;\n\t\t});\n\t\tsetLightPosition(() => [0,0,0])\n\t\tsetTextOpacity(() => 1)\n\t\tsetTextShadow(() => 0)\n\t\tsetScrollIndicatorPosition((prevState) => {\n\t\t\treturn chapterIndex === null ? prevState : scrollIndicatorPositions.current[chapterIndex]\n\t\t})\n\t}, [chapterIndex, chapterConfigs, unmountLightColor])\n\n\treturn (\n\t\t<animated.div className=\"GradientShow\"\n\t\t\tstyle={gradientContainerAnimation}\n\t\t\tref={containerRef}\n\t\t>\n\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t<div className=\"grid\">\n\t\t\t\t<Transition\n\t\t\t\t\titems={chapterIndex}\n\t\t\t\t\tfrom={{ opacity: 0, textShadow: `0px 0px 0px ${textColor}`, immediate: (key: any) => key === 'textShadow' }}\n\t\t\t\t\tupdate={{ opacity: textOpacity, textShadow: `0px 0px ${textShadow}px ${textColor}`, config: { mass: 1, tension: 190, friction: 20, clamp: true }}}\n\t\t\t\t\tenter={{ opacity: 1 }}\n\t\t\t\t\tleave={{ textShadow: `0px 0px ${MAX_TEXT_SHADOW}px black`, opacity: 0, config: { mass: 1, friction: 10, clamp: true }}}\n\t\t\t\t>\n\t\t\t\t\t{ chapterIndex => (props) => {\n\t\t\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\t\t\treturn React.cloneElement(React.Children.toArray(children)[chapterIndex] as React.ReactElement<any>, { style: props })\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}}\n\t\t\t\t</Transition>\n\t\t\t\t<Canvas className=\"gradient\">\n\t\t\t\t\t{/* <ambientLight intensity={0.5} /> */}\n\t\t\t\t\t<aThree.rectAreaLight\n\t\t\t\t\t\tposition={rectLightAnimation.position}\n\t\t\t\t\t\tcolor={rectLightAnimation.color}\n\t\t\t\t\t\trotation={rectLightAnimation.rotation}\n\t\t\t\t\t\tintensity={rectLightAnimation.intensity}\n\t\t\t\t\t\t// distance={2}/\n\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\theight={550}\n\t\t\t\t\t\t// decay={0}\n\t\t\t\t\t\tlookAt={() => planeRef.current && planeRef.current.position} />\n\t\t\t\t\t<mesh position={[0, 0, -80]} ref={planeRef}>\n\t\t\t\t\t\t<planeBufferGeometry attach='geometry' args={[1000, 1000]} />\n\t\t\t\t\t\t<aThree.meshPhysicalMaterial attach='material' color={planeAnimation.color} />\n\t\t\t\t\t</mesh>\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","import React, { FunctionComponent, useState } from 'react'\nimport { useSpring, animated } from 'react-spring';\n\n// email form should add email to mailing list on directmailmac \n// on success there should be some indication on the frontend -- turns green with a success message\n// on failure there should be some indication on the frontend -- turns red with an error message\n\n// make an api call to directmailmac with the email address\ninterface EmailProps {\n\tdarkMode: Boolean,\n}\n\nexport const Email: FunctionComponent<EmailProps> = ({ darkMode }) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\tconst emailInputProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tborderBottom: darkMode ? '1.5px solid #FFFFFF' : '1.5px solid #000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst submitButtonProps = useSpring({\n\t\tboxShadow: darkMode ? 'inset 0px 0px 1px 0px #FFFFFF' : 'inset 0px 0px 2px 1px #FFFFFF',\n\t\timmediate: key => key === 'boxShadow'\n\t})\n\n\treturn (\n\t\t// if null do nothing, if false show fail, if true show success\n\t\t<form onSubmit={submitHandler} className={success ? 'Email success' : (success === 'false' ? 'Email fail' : 'Email')}>\n\t\t\t<animated.input className={darkMode ? 'darkmode' : ''} style={emailInputProps} type=\"email\" value={email} placeholder='email' onChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t<animated.input style={submitButtonProps} type=\"submit\" value=\"SUBSCRIBE\"/>\n\t\t</form>\n\t)\n}\n\n// what is going on? Requesting data from directmailmac via fetch on the frontend is being blocked\n// potentially because I'm requesting from my localhost which is identified as the origin, making a \n// request from the localhost to directmail is defined as a cross-origin request,\n\n// Wrong, for now, -- the preflight OPTIONS request that the browser sends to the server is returning with a \n// 401. This may be a bug on their server configs. However, if it is the case I still don't know if \n// a cross-origin request from localhost is allowed/will work. Even then, I shouldn't be exposing the \n// API key to the frontend. So I will have to create a server folder and configure a quick server to\n// request to from the app, which then will post request to the API, responding to the frontend with a success -- \n// allowing the component to make necessary changes to styling.","import React, { FunctionComponent } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Email } from './Email';\n\ninterface MobileEmailFormProps {\n\tprops?: any,\n\temailVisible: Boolean,\n\tdarkMode: Boolean,\n\tsetDarkMode: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereState: {\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\t// position: [number, number, number] | null;\n\t},\n}\n\nexport const MobileEmailForm: FunctionComponent<MobileEmailFormProps> = ({ sphereState, emailVisible, darkMode, setDarkMode }) => {\n\tconst animationProps = useSpring({\n\t\tconfig: { mass: 1, friction: 20, clamp: true },\n\t\topacity: !emailVisible ? 0 : 1,\n\t\tbottom: !emailVisible ? -6 : 0,\n\t\tbackgroundColor: darkMode ? '#000B23' : '#F4F4F4',\n\t\timmediate: key => ['backgroundColor'].includes(key)\n\t})\n\n\tconst textProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst buttonProps = useSpring({\n\t\tborder: darkMode ? '2px solid #FFFFFF' : '2px solid #000000',\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\treturn (\n\t\t<animated.div className=\"MobileEmailForm\" style={animationProps}>\n\t\t\t<animated.p style={textProps}>STAY UPDATED</animated.p>\n\t\t\t<Email darkMode={darkMode} />\n\t\t\t<animated.button style={buttonProps} className=\"mode-switch\" onClick={() => setDarkMode(() => !darkMode)}>\n\t\t\t\t{ darkMode ? 'L' : 'D'}\n\t\t\t</animated.button>\n\t\t</animated.div>\n\t)\n}","import React, { FunctionComponent, useState, useMemo } from 'react';\nimport { Canvas } from 'react-three-fiber';\n\nimport { Sphere } from './Sphere';\n// import { GradientShow } from './GradientShow';\nimport { GradientShow2 } from './GradientShow2';\nimport { MobileEmailForm } from './MobileEmailForm';\nimport { useSpring, animated } from 'react-spring';\n// import { useSpring as useSpringThree, a as aThree } from 'react-spring/three'\n\nexport const MobileAnimation: FunctionComponent = () => {\n\tconst [darkMode, setDarkMode] = useState<Boolean>(false);\n\tconst [gradientActive, setGradientActive] = useState<Boolean>(false);\n\tconst [chapterIndex, setChapterIndex ] = useState<number | null>(0);\n\tconst [sphereState, setSphereState] = useState<{ hold: Boolean, direction: null | 'forwards' | 'backwards' }>({ hold: false, direction: null});\n\tconst [emailVisible, setEmailVisible] = useState<Boolean>(true);\n\tconst [instructionsVisible, setInstructionsVisible ] = useState<boolean>(true);\n\tconst gradientConfig = useMemo<any>(() => {\n\t\tlet config;\n\t\tif (!darkMode) {\n\t\t\tconfig = [{\n\t\t\t\tlightIntensity: 2,\n\t\t\t\ttextColor: '#972C95',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#FFFFFF',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.3,\n\t\t\t\ttextColor: '#FFFFFF',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#e75a81',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.45,\n\t\t\t\ttextColor: '#e75a81',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#EAEAEA'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1,\n\t\t\t\ttextColor: '#C9C9C9',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#000000',\n\t\t\t}]\n\t\t} else {\n\t\t\tconfig = [{\n\t\t\t\tlightIntensity: 0,\n\t\t\t\ttextColor: '#972C95',\n\t\t\t\tplaneColor: '#000000',\n\t\t\t\tlightColor: '#000000',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.45,\n\t\t\t\ttextColor: '#000000',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#EAEAEA',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.3,\n\t\t\t\ttextColor: '#C9C9C9',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#e75a81'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 2,\n\t\t\t\ttextColor: '#e75a81',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#FFFFFF',\n\t\t\t}]\n\t\t}\n\t\treturn config\n\t}, [darkMode])\n\n\tconst instructionsDivProps = useSpring({\n\t\topacity: instructionsVisible ? 1 : 0,\n\t\tconfig: { mass: 1, friction: 10, clamp: true },\n\t})\n\n\tconst instructionsTextProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\treturn (\n\t\t<div className=\"MobileAnimation\">\n\t\t\t<div className=\"logo\" onClick={() => {\n\t\t\t\tif (gradientActive) setChapterIndex(() => null);\n\t\t\t}}>\n\t\t\t\t{ !darkMode ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' /> }\n\t\t\t</div>\n\t\t\t<Canvas\n\t\t\t\tstyle={{ backgroundColor: darkMode ? '#000000' : 'transparent' }}\n\t\t\t\tclassName=\"Canvas\"\n\t\t\t\tcamera={{position: [0, 0, 500]}}\n\t\t\t>\n\t\t\t\t<Sphere\n\t\t\t\t\tradius={135}\n\t\t\t\t\tsetInstructionsVisible={setInstructionsVisible}\n\t\t\t\t\tsetEmailVisible={setEmailVisible}\n\t\t\t\t\tstartPosition={[0, 135, 0]}\n\t\t\t\t\tsphereState={sphereState}\n\t\t\t\t\tendPosition={[0, -120, 646]}\n\t\t\t\t\tsetSphereState={setSphereState}\n\t\t\t\t\tsetGradientActive={setGradientActive}\n\t\t\t\t\tbreakPoint={468}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t<GradientShow2\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tchapterIndex={chapterIndex}\n\t\t\t\tsetChapterIndex={setChapterIndex}\n\t\t\t\tgradientActive={gradientActive}\n\t\t\t\tswipeThreshold={150}\n\t\t\t\tchapterConfigs={gradientConfig}\n\t\t\t\tsetGradientActive={setGradientActive}\n\t\t\t\tsetSphereState={setSphereState}\n\t\t\t>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>The most damaging phrase in language is 'It's always been done that way.'</h2>\n\t\t\t\t\t<h4 className=\"spacer-top-1\">- Admiral Grace Hopper</h4>\n\t\t\t\t\t<p className=\"begin\">Scroll to begin.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Andy Mag is an experiential magazine that enables readers to interact (engage) with diverse themes and ideas.</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Because a great story is worth remembering.</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Subscribe to Andy Mag for updates.</h2>\n\t\t\t\t</div>\n\t\t\t</GradientShow2>\n\t\t\t<animated.div className=\"hold-icon\" style={instructionsDivProps}>\n\t\t\t\t{ !darkMode ? <img src=\"../assets/holdicon.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> : <img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> }\n\t\t\t\t<animated.p style={instructionsTextProps}>Press and hold to learn more about Andy Mag</animated.p>\n\t\t\t</animated.div>\n\t\t\t<MobileEmailForm\n\t\t\t\tsphereState={sphereState}\n\t\t\t\temailVisible={emailVisible}\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tsetDarkMode={setDarkMode}\n\t\t\t/>\n \t\t</div>\n\t)\n}","import React, { FunctionComponent } from 'react';\n\n// import { Email } from './Email';\nimport { MobileAnimation } from './MobileAnimation';\n\nexport const MobileApp: FunctionComponent = () => {\n\treturn (\n\t\t// <Email />\n\t\t<MobileAnimation />\n\t)\n}","import React, { FunctionComponent, useRef, createRef, useEffect, useCallback, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useDidUpdate } from '../hooks/useDidUpdate';\n\ninterface DesktopTextProps {\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tchapterIndex: number | null\n\twheelThreshold: number\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n\t// orbMovingState: \"out-forward\" | \"out-backward\" | \"to-forward\" | \"to-backward\" | \"resting\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tsubscribeActive: boolean\n}\n\nexport const DesktopText: FunctionComponent<DesktopTextProps> = ({ \n\tchapterIndex,\n\tsetChapterIndex,\n\twheelThreshold,\n\tsetBackgroundColor,\n\tsetButtonShadow,\n\tsetOrbMovingState,\n\tsubscribeActive\n}) => {\n\tlet chapterRefs = useRef<React.RefObject<HTMLDivElement>[]>([createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>()]);\n\tlet [textTransitioning, setTextTransitioning] = useState<'out-down' | 'out-up' | 'in' | null>(null)\n\n\tconst textAnimation = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tzIndex: subscribeActive ? -1 : 2,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\tconst reset = useCallback(() => {\n\t\t// remove all out classes to out down\n\t\tif (chapterRefs.current !== null) {\n\t\t\tchapterRefs.current.forEach((chapter, index) => {\n\t\t\t\tif (chapter.current !== null) {\n\t\t\t\t\tchapter.current.classList.remove('out-up');\n\t\t\t\t\tchapter.current.classList.add('out-down');\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [])\n\t\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tcurrent: chapter = null\n\t\t} = chapterRefs.current[0]\n\n\t\tchapter?.classList.remove('out-down')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetBackgroundColor(() => '#231B1B')\n\t\t\tsetTimeout(reset, 1000);\n\t\t} else {\n\t\t\tif (chapterRefs.current !== null && chapterRefs.current[0].current !== null) {\n\t\t\t\tif (chapterRefs.current[0].current.classList.contains('out-down')) chapterRefs.current[0].current.classList.remove('out-down') \n\t\t\t}\n\t\t}\n\t}, [subscribeActive, setBackgroundColor, reset])\n\n\tuseDidUpdate(() => {\n\t\tif (chapterIndex !== null) {\n\t\t\tconst {\n\t\t\t\tcurrent: chapter = null\n\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\n\t\t\tsetTextTransitioning(() => 'in')\n\t\t\tchapter?.classList.remove('out-down', 'out-up')\n\t\t}\n\t}, [chapterIndex])\n\n\tconst wheelHandler = useCallback((event: React.WheelEvent<HTMLDivElement>) => {\n\t\tconst { deltaY } = event;\n\t\tif (textTransitioning === null) {\n\t\t\tif (Math.abs(deltaY) > wheelThreshold) {\n\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcurrent: chapter = null\n\t\t\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\t\tif (deltaY > 0 && chapterIndex < 3) {\n\t\t\t\t\t\tchapter?.classList.add('out-up');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-up')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t} else if (deltaY < 0 && chapterIndex > 0) {\n\t\t\t\t\t\tchapter?.classList.add('out-down');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-down')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, wheelThreshold, textTransitioning, setOrbMovingState])\n\n\treturn (\n\t\t<animated.div className=\"Text grid\" style={textAnimation}>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t\tref={chapterRefs.current[0]}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>The most damaging phrase in language is 'It's</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>always been done that way'</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"spacer-top-1\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\t// set chapterIndex to next\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2>- Admiral Grace Hopper</h2>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[1]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>Andy Mag is an experiential magazine that</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>enables readers to interact (engage) with diverse</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span \n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>themes and ideas.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[2]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 3)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#95B1D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #779FD4, -1px -2px 7px #BAC4D2')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Because a great story is worth remembering.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[3]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Subscribe to Andy Mag for updates.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","// export default {}\nimport React, { FunctionComponent, useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { a, useSpring } from 'react-spring/three';\n// import { useDidUpdate } from '../hooks/useDidUpdate';\nimport { Box3 } from 'three';\nimport { DoubleSide } from 'three/';\n// import { Sphere } from './Sphere';\n\ninterface OrbProps {\n\tpointerPosition: [number | null, number | null]\n\tchapterIndex: number\n\torbMovingState: \"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"resting\" | \"to\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tresetPointer: () => void\n\tsubscribeActive: boolean\n\tsetSubscribeActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetEmailActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetOrbHold: React.Dispatch<React.SetStateAction<boolean>>\n\torbHold: boolean\n\tsetScrollIndicatorHeight: React.Dispatch<React.SetStateAction<number>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const Orb: FunctionComponent<OrbProps> = ({\n\tpointerPosition,\n\tchapterIndex,\n\torbMovingState,\n\tresetPointer,\n\tsetOrbMovingState,\n\tsubscribeActive,\n\tsetSubscribeActive,\n\tsetEmailActive,\n\tsetOrbHold,\n\torbHold,\n\tsetScrollIndicatorHeight,\n\tsetChapterIndex,\n\tsetBackgroundColor,\n\tsetButtonShadow\n}) => {\n\tconst { viewport } = useThree();\n\tconst orbRef = useRef<THREE.Points | null>(null)\n\tconst previousPosition = useRef<[number, number, number] | null>(null)\n\tconst closestSide = useRef<string | null>(null)\n\tconst subscribePosition = useRef<[number, number, number]>([viewport.width < 1280 ? -220 : -260, 0, 0]);\n\n\tconst orbMask = useRef<any>(null);\n\tconst orbMaskSphereBbox = useRef<THREE.Sphere>(new THREE.Sphere()) // position dependent on orbMask position\n\n\tconst rectPositions = useRef<any>([\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,59,0],\n\t\t\t\tgeometry: [690, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,6,0],\n\t\t\t\tgeometry: [415, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-60,0],\n\t\t\t\tgeometry: [355, 26, 0],\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,51,0],\n\t\t\t\tgeometry: [647, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,-1,0],\n\t\t\t\tgeometry: [748, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-51,0],\n\t\t\t\tgeometry: [272, 26, 0]\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [682, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [537, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t},\n\t]);\n\n\t// this is causing bug: on viewport change position of orb is changing\n\t// const orbPositions = useMemo<any>(() => {\n\t// \tlet radius = 200;\n\t// \tif (viewport.width >= 1280) radius = 240\n\t// \treturn [\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t// \t\t\tstart: [0,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [-250,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t// \t\t\tstart: [50,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [100,0,0]\n\t// \t\t},\n\t// \t]\n\t// }, [viewport])\n\tconst orbPositions = useMemo<any>(() => {\n\t\tlet radius = 200;\n\t\tif (viewport.width >= 1280) radius = 240\n\t\treturn [\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t\t\t\tstart: [0,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [-250,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t\t\t\tstart: [50,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [100,0,0]\n\t\t\t},\n\t\t]\n\t}, [])\n\n\tconst orbPositionConfigs = useRef<any>({\n\t\tresting: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tintersecting: undefined,\n\t\tout: {\n\t\t\tmass: 5,\n\t\t\tfriction: 4.5,\n\t\t\tclamp: true,\n\t\t},\n\t\tto: {\n\t\t\tduration: 1\n\t\t},\n\t\tin: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tsubscribe: {\n\t\t\ttension: 120,\n\t\t\tclamp: true\n\t\t},\n\t\tsubscribe_hold: {\n\t\t\tmass: 70,\n\t\t\t// friction: 50,\n\t\t\ttension: 100,\n\t\t\tclamp: true\n\t\t\t// duration: 600\n\t\t},\n\t\tat_threshold: {\n\t\t\tduration: 600\n\t\t}\n\t})\n\n\t// chapter rects\n\n\tconst textRef1 = useRef<any>(null);\n\tconst textBbox1 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef2 = useRef<any>(null);\n\tconst textBbox2 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef3 = useRef<any>(null);\n\tconst textBbox3 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst subscribeRef = useRef<any>(null);\n\tlet subscribeBbox = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst [orbScale, setOrbScale] = useState<[number, number, number] | null>(null)\n\tconst [orbPosition, setOrbPosition] = useState<[number,number,number] | null>(orbPositions[chapterIndex].pre)\n\tconst [isIntersecting, setIsIntersecting] = useState<boolean>(orbMovingState === 'intersecting' ? true : false);\n\tconst [orbOpacity, setOrbOpacity] = useState<number>(1);\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1800; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = 200 * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = 200 * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = 200 * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [])\n\n\tconst getOrbPosition = useCallback(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tconst currentPosition = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z];\n\t\t\tconst setPosition = orbPosition;\n\t\t\tlet match;\n\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => {\n\t\t\t\t\t// if the coord is within 5 units away in any direction return true for that direction\n\t\t\t\t\treturn Math.abs(coord - setPosition[index]) < 8\n\t\t\t\t}) : false\n\t\t\t} else {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => coord === setPosition[index]) : false;\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\tswitch (orbMovingState) {\n\t\t\t\t\tcase 'to':\n\t\t\t\t\t\treturn 'pre'\n\t\t\t\t\tcase 'subscribe':\n\t\t\t\t\t\treturn 'subscribe'\n\t\t\t\t\tcase 'at_threshold':\n\t\t\t\t\t\treturn 'at_threshold'\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn false\n\t}, [orbMovingState, orbPosition])\n\n\tconst { position, opacity, transparent } = useSpring({\n\t\tposition: orbPosition,\n\t\topacity: orbOpacity,\n\t\ttransparent: 0,\n\t\tconfig: isIntersecting ? orbPositionConfigs.current.intersecting : orbPositionConfigs.current[orbMovingState],\n\t\tonFrame: ({ opacity }: { opacity: number }) => {\n\t\t\tconst match = getOrbPosition();\n\t\t\tif (match === 'pre') {\n\t\t\t\tsetSubscribeActive((prev) => {\n\t\t\t\t\tif (prev === true) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t})\n\t\t\t\tsetScrollIndicatorHeight(() => 0)\n\t\t\t\tsetOrbMovingState(() => 'in');\n\t\t\t\tsetOrbPosition(() => orbPositions[chapterIndex].start);\n\t\t\t} else if (match === 'subscribe') {\n\t\t\t\tsetEmailActive(() => true)\n\t\t\t} else if (match === 'at_threshold') {\n\t\t\t\tif (opacity === 0) {\n\t\t\t\t\t// do not set subscribe back to active until orb is at pre position\n\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\tsetOrbMovingState(() => 'to')\n\t\t\t\t\tsetEmailActive(() => false)\n\t\t\t\t\tsetOrbHold(() => false)\n\t\t\t\t\tsetOrbPosition(() => orbPositions[0].pre)\n\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\tconst autoRotateOrb = useCallback((number: number) => {\n\t\tif (orbRef.current !== null) {\n\t\t\torbRef.current.rotation.y += number\n\t\t}\n\t}, [])\n\n\tconst computeBoundingAreas = useCallback(() => {\n\t\tif (orbMask.current !== null) orbMask.current.geometry.computeBoundingSphere();\n\t\tif (textRef1.current !== null) textRef1.current.geometry.computeBoundingBox();\n\t\tif (textRef2.current !== null) textRef2.current.geometry.computeBoundingBox();\n\t\tif (textRef3.current !== null) textRef3.current.geometry.computeBoundingBox();\n\t\tif (subscribeRef.current !== null) subscribeRef.current.geometry.computeBoundingBox();\n\t}, [])\n\n\tconst updateOrbMaskSphereBboxRadius = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) {\n\t\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius;\n\t\t\t} else if (viewport.width >= 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius + 40;\n\t\t\t}\n\t\t}\n\t}, [viewport])\n\n\tconst updateOrbMaskSphereBboxCenter = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) orbMaskSphereBbox.current.center = new THREE.Vector3(orbMask.current.position.x, orbMask.current.position.y, orbMask.current.position.z)\n\t}, [])\n\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetBackgroundColor(() => '#D695AB')\n\t// \tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t// \tsetOrbOpacity(() => 0)\n\t// \tsetChapterIndex(() => 0)\n\t// \tsetSubscribeActive(() => false)\n\t// \tsetOrbMovingState(() => 'out')\n\t// \tsetEmailActive(() => false)\n\t// }, [setChapterIndex, setBackgroundColor, setButtonShadow, setOrbOpacity, setSubscribeActive, setEmailActive, setOrbMovingState])\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetOrbMovingState(() => 'at_threshold');\n\t// }, [setOrbMovingState])\n\n\tconst getClosestSide = useCallback((): string | null => {\n\t\tif (orbRef.current !== null ) {\n\t\t\tconst distanceObj = {\n\t\t\t\tleft: orbRef.current.position.x + (0.5 * viewport.width),\n\t\t\t\tright: (0.5 * viewport.width) - orbRef.current.position.x,\n\t\t\t\ttop: (0.5 * viewport.height) - orbRef.current.position.y,\n\t\t\t\tbottom: orbRef.current.position.y + (0.5 * viewport.height)\n\t\t\t}\n\t\t\t\n\t\t\tconst min = Math.min(distanceObj.left, distanceObj.right, distanceObj.top, distanceObj.bottom);\n\n\t\t\tif (min === distanceObj.left) {\n\t\t\t\treturn 'left'\n\t\t\t} else if (min === distanceObj.right) {\n\t\t\t\treturn 'right'\n\t\t\t} else if (min === distanceObj.bottom) {\n\t\t\t\treturn 'bottom'\n\t\t\t} else if (min === distanceObj.top) {\n\t\t\t\treturn 'top'\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}, [viewport])\n\n\tconst getTranslatedPointerPosition = useCallback(() => {\n\t\tlet position: [number, number, number] | null = null;\n\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\tconst x = pointerPosition[0] - window.innerWidth / 2;\n\t\t\tconst y = -pointerPosition[1] + window.innerHeight / 2;\n\t\t\tposition = [x, y, 0];\n\t\t}\n\t\treturn position\n\t}, [pointerPosition])\n\n\tconst isSphereIntersectingBox = useCallback((sphere: THREE.Sphere, box: Box3) => {\n\t\tvar x = Math.max(box.min.x, Math.min(sphere.center.x, box.max.x));\n\t\tvar y = Math.max(box.min.y, Math.min(sphere.center.y, box.max.y));\n\t\tvar z = Math.max(box.min.z, Math.min(sphere.center.z, box.max.z));\n\t  \n\t\tvar distance = Math.sqrt((x - sphere.center.x) * (x - sphere.center.x) +\n\t\t\t\t\t\t\t\t (y - sphere.center.y) * (y - sphere.center.y) +\n\t\t\t\t\t\t\t\t (z - sphere.center.z) * (z - sphere.center.z));\n\t\t\n\t\treturn distance < sphere.radius;\n\t}, [])\n\n\tconst moveOut = useCallback(() => {\n\t\t// using the closest side, translate out of view\n\t\tlet radius: number;\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tradius = 200;\n\t\t} else {\n\t\t\tradius = 240;\n\t\t}\n\n\t\tsetOrbPosition((prev) => {\n\t\t\tif (prev !== null && orbRef.current !== null) {\n\t\t\t\tlet x = orbRef.current.position.x;\n\t\t\t\tlet y = orbRef.current.position.y;\n\t\t\t\tconst z = orbRef.current.position.z;\n\t\t\t\tif (closestSide.current === 'left') {\n\t\t\t\t\tx = (-0.5 * viewport.width) - radius;\n\t\t\t\t} else if (closestSide.current === 'bottom') {\n\t\t\t\t\ty = (-0.5 * viewport.height) - radius;\n\t\t\t\t} else if (closestSide.current === 'top') {\n\t\t\t\t\ty = (0.5 * viewport.height) + radius\n\t\t\t\t} else if (closestSide.current === 'right') {\n\t\t\t\t\tx = (0.5 * viewport.width) + radius;\n\t\t\t\t}\n\t\t\t\treturn [x,y,z]\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t}, [viewport])\n\n\tconst isOrbIntersecting = useCallback(() => {\n\t\treturn !subscribeActive ? isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox1.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, subscribeBbox.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox2.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox3.current) : false\n\t}, [isSphereIntersectingBox, subscribeActive])\n\n\tuseEffect(() => {\n\t\tcomputeBoundingAreas();\n\t\t\n\t\tsubscribeBbox.current.setFromObject(subscribeRef.current);\n\t\t\n\t\tupdateOrbMaskSphereBboxRadius()\n\t\tupdateOrbMaskSphereBboxCenter();\n\t}, [computeBoundingAreas, updateOrbMaskSphereBboxRadius, updateOrbMaskSphereBboxCenter])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState(() => 'to');\n\t\tsetOrbPosition(() => orbPositions[chapterIndex].pre);\n\t\ttextBbox1.current.setFromObject(textRef1.current);\n\t\ttextBbox2.current.setFromObject(textRef2.current);\n\t\ttextBbox3.current.setFromObject(textRef3.current);\n\t}, [chapterIndex, setOrbMovingState, orbPositions])\n\n\tuseEffect(() => {\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tsetOrbScale(() => [1,1,1])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t} else {\n\t\t\tsetOrbScale(() => [1.2, 1.2, 1.2])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t}\n\t}, [viewport, updateOrbMaskSphereBboxRadius])\n\n\tuseEffect(() => {\n\t\tif (orbMovingState === 'out') {\n\t\t\tmoveOut();\n\t\t\tresetPointer();\n\t\t} else if (orbMovingState === 'at_threshold') {\n\t\t\tsetOrbOpacity(() => 0);\n\t\t} else if (orbMovingState === 'to') {\n\t\t\tsetOrbOpacity((prev) => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [orbMovingState, moveOut, resetPointer])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetOrbMovingState(() => 'subscribe')\n\t\t} else {\n\t\t\tsetOrbOpacity(prev => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [subscribeActive, setOrbMovingState])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState((prev) => {\n\t\t\tif (prev === 'subscribe' && orbHold === true) {\n\t\t\t\treturn 'subscribe_hold'\n\t\t\t} else if (prev === 'subscribe_hold' && orbHold === false) {\n\t\t\t\treturn 'subscribe'\n\t\t\t}\n\t\t\treturn prev\n\t\t})\n\t}, [orbHold, setOrbMovingState])\n \n\tuseFrame(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tautoRotateOrb(0.001);\n\n\t\t\t// update the orbMaskSphereBbox to the position of the orbMask\n\t\t\tupdateOrbMaskSphereBboxCenter();\n\n\t\t\t// calculate what side or is closest to\n\t\t\tclosestSide.current = getClosestSide();\n\n\t\t\t// logic for orb movement\n\t\t\tif (!isOrbIntersecting()) {\n\t\t\t\tsetIsIntersecting(() => false)\n\t\t\t\tpreviousPosition.current = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z]\n\t\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\t\tsetOrbPosition(() => {\n\t\t\t\t\t\tsubscribePosition.current = [viewport.width < 1280 ? -220 : -260, 0, 0];\n\t\t\t\t\t\treturn [viewport.width < 1280 ? -220 : -260, 0, 0]\n\t\t\t\t\t})\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'resting') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'resting') {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) return getTranslatedPointerPosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'in') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'resting');\n\t\t\t\t\t\t\t\treturn getTranslatedPointerPosition();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'subscribe_hold') {\n\t\t\t\t\tsetOrbPosition(() => [0, 0, 0])\n\t\t\t\t\t// get percentage of travel\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\t// percentage is 100 when origin is atleast 10 units away from origin\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// automator\n\t\t\t\t\t\t\t\tif (percentage === 1) {\n\t\t\t\t\t\t\t\t\t// atHoldThresholdAutomator();\n\t\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'at_threshold');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetIsIntersecting(() => true)\n\t\t\t\tsetOrbPosition(() => previousPosition.current)\n\t\t\t}\n\t\t}\n\t})\t\n\t\n\treturn (\n\t\t<>\n\t\t\t<group\n\t\t\t>\n\t\t\t\t<a.mesh\n\t\t\t\t\tonPointerDown={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return true\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tonPointerUp={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return false\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tref={orbMask}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t>\n\t\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\targs={[200, 32, 32, 0, 2*Math.PI, 0, Math.PI]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t\tside={DoubleSide}\n\t\t\t\t\t/>\n\t\t\t\t</a.mesh>\n\t\t\t\t<a.points\n\t\t\t\t\tonPointerDown={() => setOrbHold(() => true)}\n\t\t\t\t\tonPointerUp={() => setOrbHold(() => false)}\n\t\t\t\t\tref={orbRef}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t\t// opacity={orbAnimationProps.opacity}\n\t\t\t\t>\t\n\t\t\t\t\t<geometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\tvertices={vertices}\n\t\t\t\t\t/>\n\t\t\t\t\t<a.pointsMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t\tsize={2.5}\n\t\t\t\t\t\ttransparent={transparent}\n\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t/>\n\t\t\t\t</a.points>\n\t\t\t</group>\n\t\t\t<group>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef1}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef1.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef1.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef2}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef2.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef2.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef3}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef3.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef3.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={subscribeRef}\n\t\t\t\t\tposition={[0, -viewport.height / 2.65, 0]}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={[280, 50, 0]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t</group>\t\t\t\n\t\t</>\n\t)\n\t\n}\n\t\n","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef, useEffect\n\t}\nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface DesktopEmailProps {\n\temailActive: boolean\n\torbHold: boolean\n}\n\nexport const Email: FunctionComponent<DesktopEmailProps> = ({\n\temailActive,\n\torbHold\n}) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\tlet [inputFocus, setInputFocus] = useState<boolean>(false);\n\tconst emailDiv = useRef<HTMLDivElement | null>(null)\n\n\tconst emailDivProps = useSpring({\n\t\topacity: orbHold ? 0 : 1,\n\t\tvisibility: orbHold ? 'hidden' : 'visible',\n\t\tconfig: {\n\t\t\tmass: 2,\n\t\t\tfriction: 2,\n\t\t\tclamp: true\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (emailDiv.current !== null) {\n\t\t\temailActive ? emailDiv.current.classList.add('active') : emailDiv.current.classList.remove('active')\n\t\t\tif (inputFocus) {\n\t\t\t\temailDiv.current.classList.add('focused') \n\t\t\t} else {\n\t\t\t\temailDiv.current.classList.remove('focused')\n\t\t\t}\n\t\t}\n\t}, [emailActive, inputFocus, email])\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\treturn (\n\t\t<animated.div className='DesktopEmail grid' ref={emailDiv} style={emailDivProps}>\n\t\t\t<form onSubmit={submitHandler} className={success ? 'desktopEmailWrapper Email success' : (success === 'false' ? 'desktopEmailWrapper Email fail' : 'desktopEmailWrapper Email')}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h3>STAY UPDATED WITH THE</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h3>ANDY MAG NEWSLETTER</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<label>\n\t\t\t\t\t<h4>Email</h4>\n\t\t\t\t</label>\n\t\t\t\t{ inputFocus ? <img className=\"submitIcon\" src=\"../assets/paper_plane_purple.svg\" alt=\"Submit\" /> : <img className=\"submitIcon\" src=\"../assets/paper_plane_white.svg\" alt=\"Submit\" /> }\n\t\t\t\t<input\n\t\t\t\t\tonFocus={() => setInputFocus(() => true)}\n\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\t\tif (email === undefined || email.length < 1) setInputFocus(() => false)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t\t{/* <input type=\"submit\" value=\"SUBSCRIBE\"/> */}\n\t\t\t</form>\n\t\t\t{/* <div className=\"hold-icon\">\n\t\t\t\t<img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/>\n\t\t\t\t<p>Press and hold to go back</p>\n\t\t\t</div> */}\n\t\t</animated.div>\n\t\t\n\t)\n}","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef,\n\t\tuseEffect,\n\t\tuseCallback,\n\t} \nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Canvas } from 'react-three-fiber';\n\nimport { DesktopText } from './DesktopText';\n// import { DesktopOrb } from './DesktopOrb';\nimport { Orb } from './DesktopOrb3';\n// import { DesktopInstructions } from './DesktopInstructions'\nimport { Email } from './DesktopEmailForm';\n\ninterface OrbState {\n\torb_position: [number, number, number],\n\tmove_state: 'out' | 'in' | 'to' | 'rest',\n}\n\nexport const DesktopApp: FunctionComponent = () => {\n\tlet [chapterIndex, setChapterIndex] = useState<number>(0);\n\tlet [backgroundColor, setBackgroundColor] = useState<string>('#D695AB')\n\tlet [subscribeActive, setSubscribeActive] = useState<boolean>(false);\n\tlet [emailActive, setEmailActive] = useState<boolean>(false);\n\tlet [buttonShadow, setButtonShadow] = useState<string>('1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\tconst scrollIndicatorPositions = useRef<number[]>([0, 10, 19, 28.2]);\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tlet [scrollIndicatorHeight, setScrollIndicatorHeight] = useState<number>(0);\n\tlet [canvasViewport, setCanvasViewport] = useState<{width: number, height: number, factor: number} | null>(null)\n\tlet [orbMovingState, setOrbMovingState] = useState<'out' | 'resting' | 'to' | 'intersecting' | 'in' | 'subscribe' | 'subscribe_hold' | 'at_threshold'>('resting')\n\tlet [orbHold, setOrbHold] = useState<boolean>(false);\n\tlet [pointerPosition, setPointerPosition] = useState<[number | null, number | null]>([null, null])\n\t// console.log(scrollIndicatorHeight);\n\tlet wheelThreshold = useRef<number>(40);\n\tlet containerRef = useRef<HTMLDivElement>(null);\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\t// top: subscribeActive ? 'auto' : scrollIndicatorPosition,\n\t\ttop: !subscribeActive ? scrollIndicatorPosition : 'auto',\n\t\tbottom: subscribeActive ? 1 : 'auto',\n\t\theight: subscribeActive ? scrollIndicatorHeight : 19,\n\t\tconfig: { clamp: true },\n\t\tbackgroundColor: !subscribeActive ? 'black' : 'white',\n\t})\n\n\t// const instructionsProps = useSpring({\n\t// \topacity: orbHold ? 0 : 1\n\t// })\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerPosition(() => [null, null])\n\t}, [])\n\n\tconst subscribeButtonProps = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName=\"DesktopAnimation\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: backgroundColor\n\t\t\t}}\n\t\t\tonPointerMove={(e) => {\n\t\t\t\tconst {\n\t\t\t\t\tclientX,\n\t\t\t\t\tclientY\n\t\t\t\t} = e;\n\t\t\t\tsetPointerPosition(() => {\n\t\t\t\t\treturn [clientX, clientY]\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\t\t\t<Canvas\n\t\t\t\tclassName=\"Orb\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t\torthographic\n\t\t\t\tcamera={{\n\t\t\t\t\tleft: canvasViewport ? -canvasViewport.width / 2 : undefined,\n\t\t\t\t\tright: canvasViewport ? canvasViewport.width / 2 : undefined,\n\t\t\t\t\ttop: canvasViewport ? canvasViewport.height / 2 : undefined,\n\t\t\t\t\tbottom: canvasViewport ? -canvasViewport.height / 2 : undefined,\n\t\t\t\t\tnear: 300,\n\t\t\t\t\tfar: -300\n\t\t\t\t}}\n\t\t\t>\t\n\t\t\t\t<Orb setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setChapterIndex={setChapterIndex} setScrollIndicatorHeight={setScrollIndicatorHeight} orbHold={orbHold} setOrbHold={setOrbHold} setEmailActive={setEmailActive} pointerPosition={pointerPosition} chapterIndex={chapterIndex} orbMovingState={orbMovingState} resetPointer={resetPointer} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} setSubscribeActive={setSubscribeActive} />\n\t\t\t</Canvas>\n\t\t\t<div className=\"logo\" onClick={() => setChapterIndex(() => 0)}>\n\t\t\t\t{ !subscribeActive ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' />}\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<DesktopText chapterIndex={chapterIndex} setChapterIndex={setChapterIndex} wheelThreshold={wheelThreshold.current} setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} />\n\t\t\t<animated.div className=\"SubscribeButton\" style={subscribeButtonProps}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSubscribeActive(() => true)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: buttonShadow\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSUBSCRIBE\n\t\t\t\t</button>\n\t\t\t</animated.div>\n\t\t\t<div className=\"SocialMedia\">\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.snapchat.com/add/theandymag\"><img src=\"../assets/snapchat.svg\" alt=\"Snapchat\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/theandymag/\"><img src=\"../assets/instagram.svg\" alt=\"Instagram\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/theandymag_\"><img src=\"../assets/twitter.svg\" alt=\"Twitter\" /></a>\n\t\t\t</div>\n\t\t\t{/* <DesktopInstructions /> */}\n\t\t\t<Email orbHold={orbHold} emailActive={emailActive} />\n\t\t</div>\n\t)\n}","import React, { useEffect, useState, useCallback } from 'react';\n\nimport './styles/base.sass'\nimport { MobileApp } from './Components/MobileApp'\nimport { DesktopApp } from './Components/DesktopApp'\n\nfunction App() {\n\t\n\tlet [isMobile, setIsMobile] = useState<Boolean>(window.innerWidth <= 900);\n\n\tconst windowResizeHandler = useCallback(() => {\n\t\twindow.innerWidth <= 900 ? setIsMobile(true) : setIsMobile(false);\n\t}, [])\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', windowResizeHandler)\n\t}, [windowResizeHandler]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\tisMobile ? <MobileApp /> : <DesktopApp />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}