{"version":3,"sources":["Components/Sphere2.tsx","Components/ColorShow.tsx","context/viewportContext.tsx","Components/Email.tsx","Components/MobileEmailForm.tsx","Components/MobileInstructions.tsx","Components/MobileAnimation2.tsx","Components/MobileApp.tsx","Components/DesktopText.tsx","hooks/useDidUpdate.tsx","Components/DesktopOrb3.tsx","Components/DesktopInstructions.tsx","Components/DesktopEmailForm.tsx","Components/DesktopApp.tsx","App.tsx","serviceWorker.ts","context/index.tsx","index.tsx"],"names":["Sphere","radius","sphereState","setSphereState","breakPoint","setEmailVisible","setColorShowActive","setInstructionsState","sphereRef","useRef","useThree","camera","size","defaultPointSize","inPosition","outPosition","height","hemisphereRef","useFrame","current","rotation","y","setPosition","useCallback","mountAnimating","hold","pointerUpHandler","position","z","prev","direction","vertices","useMemo","computedVertices","i","theta","THREE","randFloatSpread","phi","x","Math","sin","cos","push","map","v","sphereAnimationProps","useSpring","config","mass","tension","friction","clamp","pointsPosition","opacity","onFrame","arg","visible","onRest","every","index","useEffect","material","tan","PI","fov","lookAt","mesh","ref","onPointerDown","onPointerUp","circlePosition","attach","args","transparent","side","DoubleSide","points","pointsMaterial","color","ColorShow","chapterIndex","colorShowActive","setChapterIndex","darkMode","container","useState","transitioning","setTransitioning","initialized","setInitialized","xStart","yStart","yTravel","xTravel","pointerState","setPointerState","backgroundColors","lightMode","arrowColors","backgroundColor","setBackgroundColor","arrowColor","setArrowColor","getActiveSlideIndex","active","slides","children","length","classList","contains","activeSlide","activeSlideTransitionTarget","nextSlide","nextSlideTransitionTarget","addEventListener","activeCb","remove","removeEventListener","nextCb","add","next","back","console","log","containerCb","setTimeout","reset","className","e","clientX","clientY","updated","pointerDownHandler","onPointerMove","pointerMoveHandler","style","background","transitionDelay","width","viewBox","fill","xmlns","fill-rule","clip-rule","d","defaultViewportContext","isMobile","window","innerWidth","isPortrait","matchMedia","matches","defaultDeviceHeight","defaultDeviceWidth","currentDeviceHeight","innerHeight","currentDeviceWidth","lockedViewportHeight","lockedViewportWidth","lockViewport","unlockViewport","ViewportContext","createContext","ViewportContextWrapper","props","viewport","document","querySelector","setIsMobile","setIsPortrait","setCurrentDeviceHeight","setCurrentDeviceWidth","setLockedViewportHeight","setLockedViewportWidth","target","screen","orientation","angle","store","setAttribute","Provider","value","Email","success","setSuccess","email","setEmail","message","setMessage","processing","setProcessing","useContext","formRef","emailInputProps","borderBottom","duration","submitButtonProps","boxShadow","immediate","key","onSubmit","preventDefault","url","process","options","method","body","FormData","fetch","then","res","json","data","result","error","catch","input","name","type","placeholder","onChange","currentTarget","onFocus","onBlur","required","MobileEmailForm","emailVisible","setDarkMode","animationProps","bottom","includes","textProps","buttonProps","div","h5","button","onClick","MobileInstructions","instructionsState","instructionsRef","clickHandler","instructionsDivProps","instructionsTextProps","src","alt","p","Camera","aspect","setDefaultCamera","atan","cameraDistance","onUpdate","self","updateProjectionMatrix","MobileAnimation","scrollIndicatorPositions","scrollIndicatorPosition","setScrollIndicatorPosition","scrollIndicatorAnimate","top","MobileApp","DesktopText","wheelThreshold","setButtonShadow","setOrbMovingState","subscribeActive","chapterRefs","createRef","textTransitioning","setTextTransitioning","textAnimation","zIndex","forEach","chapter","func","deps","didUpdate","useDidUpdate","wheelHandler","event","deltaY","abs","onWheel","onTransitionEnd","Orb","pointerPosition","orbMovingState","resetPointer","setSubscribeActive","setEmailActive","setOrbHold","orbHold","setScrollIndicatorHeight","setInstructionPosition","setInstructionActive","orbRef","previousPosition","closestSide","subscribePosition","orbMask","orbMaskSphereBbox","rectPositions","textRef1","geometry","textRef2","textRef3","undefined","orbPositions","pre","start","orbPositionConfigs","resting","intersecting","out","to","in","subscribe","subscribe_hold","at_threshold","textBbox1","Box3","textBbox2","textBbox3","subscribeRef","subscribeBbox","orbScale","setOrbScale","orbPosition","setOrbPosition","isIntersecting","setIsIntersecting","orbOpacity","setOrbOpacity","getOrbPosition","currentPosition","coord","placeInstructions","center","project","match","autoRotateOrb","number","computeBoundingAreas","computeBoundingSphere","computeBoundingBox","updateOrbMaskSphereBboxRadius","boundingSphere","updateOrbMaskSphereBboxCenter","getClosestSide","distanceObj","left","right","min","getTranslatedPointerPosition","isSphereIntersectingBox","sphere","box","max","sqrt","moveOut","isOrbIntersecting","setFromObject","x1","currentX","percentage","scale","DesktopInstructions","instructionPosition","instructionActive","instructionProps","visibility","emailActive","inputFocus","setInputFocus","emailDiv","emailDivProps","headers","JSON","stringify","statusCode","DesktopApp","buttonShadow","scrollIndicatorHeight","canvasViewport","setPointerPosition","containerRef","subscribeButtonProps","orthographic","near","far","rel","href","App","Boolean","location","hostname","Store","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.661562cd.chunk.js","sourcesContent":["import React, {\n\tFunctionComponent,\n\tuseRef,\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\t// useState,\n} from 'react';\nimport * as THREE from 'three/';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three'\nimport { DoubleSide } from 'three/';\n\ninterface SphereProps {\n\tradius: number,\n\t// setInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\tsetEmailVisible: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetInstructionsState: React.Dispatch<React.SetStateAction<{\n\t\tposition: 'up' | 'down';\n\t\tvisible: boolean;\n\t}>>\n\tsphereAnimationProps?: any,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tsphereState: {\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t},\n\tinPosition: [number, number, number],\n\toutPosition: [number, number, number],\n\tbreakPoint: number,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Sphere: FunctionComponent<SphereProps> = ({\n\tradius,\n\t// inPosition,\n\tsphereState,\n\tsetSphereState,\n\tbreakPoint,\n\t// outPosition,\n\tsetEmailVisible,\n\t// setInstructionsVisible,\n\tsetColorShowActive,\n\tsetInstructionsState\n}) => {\n\t/* \n\t\tTODO: \n\t\t\t-add responsive scaling for smaller and larger mobile viewports\n\t\t\t-responsive outPositions depending on viewport height\n\n\t\t\t-initial animation of ease into view:\n\t\t\t\t- start position \n\t\t\t\t- opacity fade in\n\t\t\t\t- orbLive ? --> fade and ease in to start position, \n\t*/ \n\tconst sphereRef = useRef<any>(null);\n\tconst {\n\t\tcamera,\n\t\t// camera: {\n\t\t// \tfov\n\t\t// },\n\t\t// viewport,\n\t\tsize,\n\t}: { camera: any, viewport: any, size: any } = useThree();\n\n\tconst defaultPointSize = useRef<number>(1.7);\n\tconst inPosition: [number, number, number] = [0, 0, 0];\n\tconst outPosition: [number, number, number] = [0, -size.height / 9, 626];\n\tconst hemisphereRef = useRef<THREE.Points | null>(null);\n\n\n\tuseFrame(() => {\n\t\tif (sphereRef.current) {\n\t\t\treturn sphereRef.current.rotation.y = sphereRef.current.rotation.y + 0.003\n\t\t}\n\t});\n\n\tconst setPosition = useCallback(() => {\n\t\tif (sphereState.mountAnimating) {\n\t\t\treturn outPosition\n\t\t} else {\n\t\t\tif (sphereState.hold) {\n\t\t\t\treturn outPosition\n\t\t\t} else {\n\t\t\t\treturn inPosition\n\t\t\t}\n\t\t}\n\t}, [inPosition, sphereState, outPosition])\n\n\tconst pointerUpHandler = useCallback(() => {\n\t\tif (sphereRef.current.position.z >= breakPoint) {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: true,\n\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t} else {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: false,\n\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t}\n\t}, [setSphereState, breakPoint, sphereState])\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1600; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = radius * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = radius * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = radius * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [radius])\n\n\tconst sphereAnimationProps = useSpring({\n\t\tconfig: { mass: 1.8, tension: 84, friction: 22, clamp: true },\n\t\tpointsPosition: setPosition(),\n\t\topacity: sphereState.mountAnimating ? 0 : 1,\n\t\tonFrame: (arg: any) => {\n\t\t\tif (sphereRef.current.position.z > 0 && sphereRef.current.position.z < 20) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetInstructionsState(prev => ({ ...prev, visible: true}))\n\t\t\t\t} else {\n\t\t\t\t\tsetInstructionsState(prev => ({ ...prev, visible: false}))\n\t\t\t\t}\n\t\t\t} else if (sphereRef.current.position.z > 20 && sphereRef.current.position.z < 50) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetEmailVisible(() => true);\n\t\t\t\t} else {\n\t\t\t\t\tsetEmailVisible(() => false)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRest: (arg: any) => {\n\t\t\tif (outPosition.every((position: number, index: number) => {\n\t\t\t\tif (!sphereState.mountAnimating) {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\treturn sphereRef.current.position.x === position\n\t\t\t\t\t} else if (index === 1) {\n\t\t\t\t\t\treturn sphereRef.current.position.y === position\n\t\t\t\t\t} else if (index === 2) {\n\t\t\t\t\t\treturn sphereRef.current.position.z === position\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}) && sphereState.direction === 'forwards') {\n\t\t\t\tsetColorShowActive((prev) => prev ? prev : true);\n\t\t\t\tsetSphereState((prev) => {\n\t\t\t\t\treturn { ...prev, direction: 'backwards'}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (size.height && camera) {\n\t\t\tsphereRef.current.material.size = defaultPointSize.current / Math.tan( ( Math.PI / 180 ) * camera.fov / 2 )\n\t\t\tcamera.lookAt(0, (-size.height / 6.5), 0);\n\t\t}\n\t}, [size, camera])\n\n\tuseEffect(() => {\n\t\tsetSphereState(prev => {\n\t\t\tif (prev.mountAnimating) {\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\tmountAnimating: false\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn prev\n\t\t\t}\n\t\t})\n\t}, [setSphereState])\n\n\t\n\treturn (\n\t\t<group>\n\t\t\t<a.mesh\n\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\tref={hemisphereRef}\n\t\t\t\tonPointerDown={() => setSphereState(prev => {\n\t\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\t\thold: true,\n\t\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t}\n\t\t\t\t\treturn updated\n\t\t\t\t})}\n\t\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t\tposition={sphereAnimationProps.circlePosition}\n\t\t\t>\n\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\targs={[130, 32, 32, 0, 2*Math.PI, 0, 0.7 * Math.PI]}\n\t\t\t\t/>\n\t\t\t\t<meshBasicMaterial attach='material' transparent={true} opacity={0} side={DoubleSide} />\n\t\t\t</a.mesh>\n\t\t\t<a.points \n\t\t\t\tref={sphereRef}\n\t\t\t\t// ref={sphereRef}\n\t\t\t\tposition={sphereAnimationProps.pointsPosition}\n\t\t\t\t// scale={[1,1,1]}\n\t\t\t>\t\n\t\t\t\t<geometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\tvertices={vertices}\n\t\t\t\t/>\n\t\t\t\t<a.pointsMaterial\n\t\t\t\t\tattach='material'\n\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\tsize={1.7}\n\t\t\t\t\topacity={sphereAnimationProps.opacity}\n\t\t\t\t/>\n\t\t\t</a.points>\n\t\t</group>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tPointerEvent,\n\t// TouchEvent,\n\t// useCallback,\n\tuseEffect,\n\tuseRef,\n\tuseState\n} from 'react';\n\n// controlling overflowed span components\n// on chapter change -- animate to next \n\n// const isElementAtBottom = (e: HTMLDivElement) => {\n// \treturn e.scrollTop === (e.scrollHeight - e.offsetHeight);\n// }\n\ninterface ColorShowProps {\n\tchapterIndex: number,\n\tcolorShowActive: boolean,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tdarkMode: Boolean\n}\n\nexport const ColorShow: FunctionComponent<ColorShowProps> = ({\n\tchapterIndex,\n\tcolorShowActive,\n\tsetColorShowActive,\n\tsetChapterIndex,\n\tsetSphereState,\n\tdarkMode\n}) => {\n\tconst container = useRef<HTMLDivElement>(null);\n\t// let [preventTouch, setPreventTouch] = useState<boolean>(false);\n\tlet [transitioning, setTransitioning] = useState<boolean>(false);\n\tlet [initialized, setInitialized] = useState<boolean>(false);\n\tlet [pointerState, setPointerState] = useState<any>({\n\t\txStart: null,\n\t\tyStart: null,\n\t\tyTravel: null,\n\t\txTravel: null,\n\t})\n\t// console.log(container.current ? isElementAtBottom(container.current) : null)\n\tconst backgroundColors = useRef<any>({\n\t\tlightMode: ['#E4F0FA', '#D64773', '#CBCBCB', '#000000'],\n\t\tdarkMode: ['#000000', '#D64773', '#E4F0FA', '#F9FAFC']\n\t})\n\n\tconst arrowColors = useRef<any>({\n\t\tlightMode: ['#6E81A0', '#FFFFFF', '#D64773', '#CBCBCB'],\n\t\tdarkMode: ['#6E81A0', '#000000', '#D64773', '#009CDF']\n\t})\n\n\tlet [backgroundColor, setBackgroundColor] = useState<string>(backgroundColors.current.lightMode[chapterIndex]);\n\tlet [arrowColor, setArrowColor] = useState<string>(arrowColors.current.lightMode[chapterIndex])\n\n\tconst getActiveSlideIndex = (): number => {\n\t\tif (container.current) {\n\t\t\tlet active = -1;\n\t\t\tconst slides = container.current.children;\n\t\t\tfor (let i = 0; i < slides.length; i++) {\n\t\t\t\tif (!slides[i].classList.contains('out-down') && !slides[i].classList.contains('out-up')) {\n\t\t\t\t\tactive = i\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn active\n\t\t}\n\t\treturn -1\n\t}\n\n\tconst pointerDownHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY,\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst updated = {\n\t\t\t\txStart: clientX,\n\t\t\t\tyStart: clientY,\n\t\t\t}\n\t\t\treturn { ...prev, ...updated}\n\t\t})\n\t}\n\n\tconst pointerMoveHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY,\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t\t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t\t\treturn { ...prev, yTravel, xTravel }\n\t\t})\n\t}\n\n\t// const pointerDownHandler = (e: TouchEvent) => {\n\t// \tconst {\n\t// \t\ttouches\n\t// \t} = e\n\t// \tconst {\n\t// \t\tclientY,\n\t// \t\tclientX\n\t// \t} = touches[0]\n\t// \tsetPointerState((prev: any) => {\n\t// \t\tconst updated = {\n\t// \t\t\txStart: clientX,\n\t// \t\t\tyStart: clientY,\n\t// \t\t}\n\t// \t\treturn { ...prev, ...updated}\n\t// \t})\n\t// }\n\n\t// const pointerMoveHandler = (e: TouchEvent) => {\n\t// \tconst {\n\t// \t\ttouches\n\t// \t} = e\n\t// \tconst {\n\t// \t\tclientY,\n\t// \t\tclientX\n\t// \t} = touches[0]\n\t// \tsetPointerState((prev: any) => {\n\t// \t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t// \t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t// \t\treturn { ...prev, yTravel, xTravel }\n\t// \t})\n\t// }\n\n\tconst pointerUpHandler = () => {\n\t\tsetPointerState(() => ({\n\t\t\txTravel: null,\n\t\t\tyTravel: null,\n\t\t\txStart: null,\n\t\t\tyStart: null,\n\t\t}))\n\t}\n\n\t// const resizeHandler = () => {\n\t// \tsetPreventTouch((prev) => {\n\t// \t\tif (container.current) {\n\t// \t\t\tif (container.current.clientHeight === window.innerHeight) {\n\t// \t\t\t\treturn true\n\t// \t\t\t} else {\n\t// \t\t\t\treturn false\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn prev\n\t// \t})\n\t// }\n\n\tuseEffect(() => {\n\t\tconst next = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active >= 0 && active < container.current.children.length - 2) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\t// change background color -- account for dark mode\n\t\t\t\t\t\tnextSlide.classList.remove('out-down');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst back = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active > 0) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\tnextSlide.classList.remove('out-up');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (chapterIndex >= 0 && colorShowActive && initialized) {\n\t\t\t// setPreventTouch((prev) => {\n\t\t\t// \tif (container.current) {\n\t\t\t// \t\t// console.\n\t\t\t// \t\tif (container.current.clientHeight === window.innerHeight) {\n\t\t\t// \t\t\treturn true\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\treturn false\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// \treturn prev\n\t\t\t// })\n\t\t\tif (getActiveSlideIndex() < chapterIndex) {\n\t\t\t\tnext();\n\t\t\t\t// setPreventTouch(() => true)\n\t\t\t} else if (getActiveSlideIndex() > chapterIndex) {\n\t\t\t\tback();\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, colorShowActive, initialized, darkMode])\n\n\tuseEffect(() => {\n\t\tif (darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.darkMode[0])\n\t\t} else if (!darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.lightMode[0])\n\t\t}\n\t}, [darkMode, initialized])\n\n\t// useEffect(() => {\n\t// \twindow.addEventListener('resize', resizeHandler);\n\t// \treturn () => window.removeEventListener('resize', resizeHandler);\n\t// }, [])\n\t\n\tuseEffect(() => {\n\t\tconst reset = () => {\n\t\t\tif (container.current) {\n\t\t\t\t// console.log(colorShowActive);\n\t\t\t\tsetTransitioning(() => true);\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\n\t\t\t\tlet containerCb = () => {\n\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\tsetSphereState(prev => {\n\t\t\t\t\t\t\tconst updated: any = {\n\t\t\t\t\t\t\t\thold: false,\n\t\t\t\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn updated\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < container.current.children.length - 1; i++) {\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.remove('out-up');\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.add('out-down');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t// setPreventTouch(() => false)\n\t\t\t\t\t\t\t\tsetInitialized(() => false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 1000)\n\t\t\t\t\t\tcontainer.current.removeEventListener('transitionend', containerCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontainer.current.addEventListener('transitionend', containerCb);\n\n\t\t\t\tlet activeCb = () => {\n\t\t\t\t\tif (container.current) {\t\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tcontainer.current.classList.remove('active');\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\tif (active === 0) {\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t} else {\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tconst init = () => {\n\t\t\tif (container.current) {\n\t\t\t\tcontainer.current.classList.add('active');\n\t\t\t\tcontainer.current.children[0].classList.remove('out-down');\n\t\t\t\tsetInitialized(() => true);\n\t\t\t}\n\t\t}\n\n\t\tif (colorShowActive && !initialized) {\n\t\t\tconsole.log('init')\n\t\t\tinit();\n\t\t} else if (!colorShowActive && initialized) {\n\t\t\treset();\n\t\t}\n\t}, [colorShowActive, initialized, setSphereState, setChapterIndex, darkMode])\n\n\tuseEffect(() => {\n\t\tif (pointerState.yTravel > 0 && pointerState.yTravel >= 100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current) {\n\t\t\t\t\tif (prev < container.current.children.length - 2 && !transitioning) {\n\t\t\t\t\t\treturn prev + 1\n\t\t\t\t\t} else if (prev === container.current.children.length -  2) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t} else if (pointerState.yTravel < 0 && pointerState.yTravel <= -100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current && !transitioning) {\n\t\t\t\t\tif (prev > 0) {\n\t\t\t\t\t\treturn prev - 1\n\t\t\t\t\t} else if (prev === 0) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t}\n\t}, [pointerState, setChapterIndex, transitioning, setColorShowActive])\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"ColorShow grid\"\n\t\t\tref={container}\n\t\t\tonPointerDown={(e: PointerEvent) => pointerDownHandler(e)}\n\t\t\tonPointerMove={(e: PointerEvent) => pointerMoveHandler(e)}\n\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t// onTouchStart={(e: TouchEvent) => pointerDownHandler(e)}\n\t\t\t// onTouchMove={(e: TouchEvent) => pointerMoveHandler(e)}\n\t\t\t// onTouchEnd={() => pointerUpHandler()}\n\t\t\tstyle={{\n\t\t\t\tbackground: backgroundColor,\n\t\t\t\t// touchAction: preventTouch ? 'none' : 'auto'\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#E066DB' : '#334669'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>The most dangerous phrase</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>in language is 'It's always</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>been done that way'\"</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<p style={{ color: darkMode ? '#FFFFFF' : '#334669'}}>Admiral Grace Hopper</p>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#000000' : '#FFFFFF'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Andy Mag is an experiential</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>magazine that enables</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>readers to interact (engage)</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<h4>with diverse themes and </h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.2s'}}>\n\t\t\t\t\t\t<h4>ideas.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: '#D64773'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Because a great story is</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>worth remembering.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#009CDF' : '#CBCBCB'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Subscribe to Andy Mag for</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t<h4>updates.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"Arrows\"\n\t\t\t\tstyle={{ opacity: colorShowActive ? 1 : 0 }}\n\t\t\t>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor}/>\n\t\t\t\t</svg>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor} />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, {\n\tcreateContext,\n\tFunctionComponent,\n\tuseState,\n\t// Dispatch,\n\t// SetStateAction,\n\tuseEffect,\n\tuseRef,\n} from 'react';\n\ntype ViewportContextType = {\n\tisMobile: boolean,\n\n\t// orientation: 'portrait' | 'landscape' | null,\n\tisPortrait: boolean\n\n\tdefaultDeviceHeight: null,\n\tdefaultDeviceWidth: 'device-width',\n\n\tlockedViewportHeight: null | number,\n\tlockedViewportWidth: null | number,\n\n\tcurrentDeviceHeight: number,\n\tcurrentDeviceWidth: number,\n\n\tlockViewport: () => [ViewportContextType['currentDeviceHeight'], ViewportContextType['currentDeviceWidth']] | null,\n\tunlockViewport: () => void,\n\t// lockViewport: (currentDeviceHeight: ViewportContextType['currentDeviceHeight'], currentDeviceWidth: ViewportContextType['currentDeviceWidth']) => void\n\t// unlockViewport: (defaultDeviceHeight: ViewportContextType['defaultDeviceHeight'], defaultDeviceWidth: ViewportContextType['defaultDeviceWidth']) => void\n\t// setOrientation: Dispatch<SetStateAction<ViewportContextType['orientation']>>,\n\t// setCurrentDeviceHeight: Dispatch<SetStateAction<ViewportContextType['currentDeviceHeight']>>,\n\t// setCurrentDeviceWidth: Dispatch<SetStateAction<ViewportContextType['currentDeviceWidth']>>,\n\t// setIsMobile: Dispatch<SetStateAction<ViewportContextType['isMobile']>\n}\n\nconst defaultViewportContext: ViewportContextType = {\n\t// window\n\n\tisMobile: window.innerWidth <= 900,\n\n\tisPortrait: window.matchMedia(\"(orientation: portrait)\").matches,\n\t\n\tdefaultDeviceHeight: null,\n\tdefaultDeviceWidth: \"device-width\",\n\n\tcurrentDeviceHeight: window.innerHeight,\n\tcurrentDeviceWidth: window.innerWidth,\n\n\tlockedViewportHeight: null,\n\tlockedViewportWidth: null,\n\n\tlockViewport: () => null,\n\tunlockViewport: () => null,\n\n\t// setOrientation: () => null,\n\t// setCurrentDeviceWidth: () => null,\n\t// setCurrentDeviceHeight: () => null,\n\t// setIsMobile: () => null,\n}\n\nexport const ViewportContext = createContext<ViewportContextType>(defaultViewportContext);\n\nexport const ViewportContextWrapper: FunctionComponent = (props) => {\n\tconst viewport = useRef(document.querySelector(\"meta[name=viewport]\"));\n\n\tlet [isMobile, setIsMobile] = useState<ViewportContextType['isMobile']>(defaultViewportContext.isMobile);\n\tlet [isPortrait, setIsPortrait] = useState<ViewportContextType['isMobile']>(defaultViewportContext.isPortrait);\n\t// let [orientation, setOrientation] = useState<ViewportContextType['orientation']>(defaultViewportContext.orientation);\n\tlet [currentDeviceHeight, setCurrentDeviceHeight] = useState<ViewportContextType['currentDeviceHeight']>(defaultViewportContext.currentDeviceHeight);\n\tlet [currentDeviceWidth, setCurrentDeviceWidth] = useState<ViewportContextType['currentDeviceWidth']>(defaultViewportContext.currentDeviceWidth);\n\tlet [lockedViewportHeight, setLockedViewportHeight] = useState<ViewportContextType['lockedViewportHeight']>(defaultViewportContext.lockedViewportHeight);\n\tlet [lockedViewportWidth, setLockedViewportWidth] = useState<ViewportContextType['lockedViewportWidth']>(defaultViewportContext.lockedViewportWidth)\n\t\n\tconst unlockViewport:ViewportContextType['unlockViewport'] = () => {\n\t\tif (viewport.current) {\n\t\t\tviewport.current.setAttribute('content', `width=${defaultViewportContext.defaultDeviceWidth}, initial-scale=1`)\n\t\t\tsetLockedViewportHeight(() => null);\n\t\t\tsetLockedViewportWidth(() => null);\n\t\t}\n\t}\n\n\tconst lockViewport:ViewportContextType['lockViewport'] = () => {\n\t\tif (viewport.current) {\n\t\t\tviewport.current.setAttribute('content', `width=${currentDeviceWidth}, height=${currentDeviceHeight}, initital-scale=1`)\n\t\t\tsetLockedViewportHeight(() => currentDeviceHeight);\n\t\t\tsetLockedViewportWidth(() => currentDeviceWidth)\n\t\t}\n\t\treturn null\n\t}\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', () => {\n\t\t\tsetCurrentDeviceHeight(() => window.innerHeight);\n\t\t\tsetCurrentDeviceWidth(() => window.innerWidth);\n\t\t\tsetIsMobile(() => {\n\t\t\t\treturn window.innerWidth <= 900\n\t\t\t});\n\t\t})\n\t\twindow.addEventListener('orientationchange', (e: any) => {\n\t\t\tsetIsPortrait((prev) => {\n\t\t\t\tconst target = e.target;\n\t\t\t\tif (target) {\n\t\t\t\t\treturn target.screen.orientation.angle === 0\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t})\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', () => {\n\t\t\t\tsetCurrentDeviceHeight(() => window.innerHeight);\n\t\t\t\tsetCurrentDeviceWidth(() => window.innerWidth);\n\t\t\t\tsetIsMobile(() => {\n\t\t\t\t\treturn window.innerWidth <= 900\n\t\t\t\t});\n\t\t\t})\n\t\t\twindow.removeEventListener('orientationchange', () => {\n\t\t\t\tsetIsPortrait(() => {\n\t\t\t\t\treturn window.matchMedia(\"(orientation: portrait)\").matches\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}, [])\n\n\tconst store = {\n\t\tisMobile,\n\t\tisPortrait,\n\t\t// orientation,\n\t\t// setOrientation,\n\n\t\tdefaultDeviceHeight: defaultViewportContext.defaultDeviceHeight,\n\t\tdefaultDeviceWidth: defaultViewportContext.defaultDeviceWidth,\n\t\t\n\t\tcurrentDeviceHeight,\n\t\tcurrentDeviceWidth,\n\t\t// setCurrentDeviceWidth,\n\t\t// setCurrentDeviceHeight,\n\n\t\tlockedViewportHeight,\n\t\tlockedViewportWidth,\n\t\t\n\t\tunlockViewport,\n\t\tlockViewport,\n\n\t\t// setIsMobile\n\t}\n\n\treturn (\n\t\t<ViewportContext.Provider value={store}> \n\t\t\t{ props.children }\n\t\t</ViewportContext.Provider>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseRef,\n\tuseState,\n\tuseContext,\n} from 'react'\nimport { useSpring, animated } from 'react-spring';\n\nimport { ViewportContext } from '../context/viewportContext';\n\ninterface EmailProps {\n\tdarkMode: Boolean,\n}\n\nexport const Email: FunctionComponent<EmailProps> = ({ darkMode }) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string>('')\n\tlet [message, setMessage] = useState<string | null>(null)\n\tlet [processing, setProcessing] = useState<boolean>(false);\n\tconst { lockViewport, unlockViewport, currentDeviceHeight, lockedViewportHeight, lockedViewportWidth } = useContext(ViewportContext);\n\n\t// let [lockedViewport, setLockedViewport] = useState<any>(null)\n\n\tconst reset = () => {\n\t\tsetMessage(() => null);\n\t\tsetSuccess(() => null);\n\t\tsetProcessing(() => false);\n\t}\n\n\tconst formRef = useRef<HTMLFormElement>(null);\n\tconst submitHandler = (e:any) => {\n\t\t// do nothing if successs\n\t\te.preventDefault();\n\t\tif (!success && !processing) {\n\t\t\t// unlockViewport();\n\t\t\treset();\n\t\t\tconst url = process.env.REACT_APP_EMAIL_URL ? process.env.REACT_APP_EMAIL_URL : null;\n\t\t\t// const body = { email };\n\t\t\tconst options: any = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\t// mode: 'no-cors',\n\t\t\t\t// headers: {\n\t\t\t\t// \t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t\t// },\n\t\t\t\tbody: formRef.current ? new FormData(formRef.current) : null,\n\t\t\t}\n\t\n\t\t\tif (url && !processing) {\n\t\t\t\tsetProcessing(() => true);\n\t\t\t\tfetch(url, options)\n\t\t\t\t.then(res => {\n\t\t\t\t\treturn res.json()\n\t\t\t\t})\n\t\t\t\t.then(data => {\n\t\t\t\t\tif (data.result === 'success') {\n\t\t\t\t\t\tsetSuccess(() => true);\n\t\t\t\t\t\tsetMessage(() => data.message);\n\t\t\t\t\t} else if (data.result === 'error') {\n\t\t\t\t\t\tsetSuccess(() => false);\n\t\t\t\t\t\tsetMessage(() => data.error);\n\t\t\t\t\t}\n\t\t\t\t\tsetProcessing(() => false);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetSuccess(() => false);\n\t\t\t\t\tsetMessage(() => 'An error occurred please try again.')\n\t\t\t\t\tsetProcessing(() => false);\n\t\t\t\t\t// console.log(error)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tconst emailInputProps = useSpring({\n\t\tcolor: darkMode ? email.length > 0 ? '#FFFFFF' : '#464950' : email.length > 0 ? '#334669' : '#D8DCE6',\n\t\tborderBottom: darkMode ?  email.length > 0 ? '2px solid #FFFFFF' : '2px solid #464950' : email.length > 0 ? '2px solid #334669' : '2px solid #D8DCE6',\n\t\tconfig: { duration: 0 },\n\t\t// immediate: (key) => key === 'color'\n\t})\n\n\tconst submitButtonProps = useSpring({\n\t\tbackground: success ? '#68ec52' : darkMode ? '#754AAD' : '#EE84FF',\n\t\tboxShadow: darkMode ? '21px 17px 45px rgba(14, 28, 33, .8)' : '5px 6px 25px rgba(176, 195, 210, .8)',\n\t\tcolor: success ? '#000000' : darkMode ? '#FFFFFF' : '#2E476E',\n\t\timmediate: key => key === 'boxShadow'\n\t})\n\n\treturn (\n\t\t// if null do nothing, if false show fail, if true show success\n\t\t<form ref={formRef} onSubmit={submitHandler} className={ darkMode ? 'Email darkmode' : 'Email'}>\n\t\t\t<animated.input\n\t\t\t\tstyle={emailInputProps} name=\"Email\"\n\t\t\t\ttype=\"email\"\n\t\t\t\tvalue={email}\n\t\t\t\tplaceholder='email'\n\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)}\n\t\t\t\tonFocus={() => {\n\t\t\t\t\treset();\n\t\t\t\t\tif (!lockedViewportHeight && !lockedViewportWidth) {\n\t\t\t\t\t\tlockViewport();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tif (currentDeviceHeight === lockedViewportHeight) {\n\t\t\t\t\t\tunlockViewport();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}}\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<div className=\"submitWrapper\">\n\t\t\t\t<animated.input style={submitButtonProps} type=\"submit\" value={success ? 'Subscribed' : processing ? '' : 'Subscribe'} />\n\t\t\t\t{processing && <div className=\"dot-wrap\"><div className=\"dot-flashing\"></div></div> }\n\t\t\t</div>\n\t\t\t{success === false && <p className=\"error\">{message}</p> }\n\t\t</form>\n\t)\n}\n","import React, { FunctionComponent } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Email } from './Email';\n\ninterface MobileEmailFormProps {\n\tprops?: any,\n\temailVisible: Boolean,\n\tdarkMode: Boolean,\n\tsetDarkMode: React.Dispatch<React.SetStateAction<Boolean>>,\n\t// setInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\t// instructionsVisible: boolean,\n\tsphereState: {\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\t// position: [number, number, number] | null;\n\t},\n}\n\nexport const MobileEmailForm: FunctionComponent<MobileEmailFormProps> = ({ sphereState, emailVisible, darkMode, setDarkMode }) => {\n\tconst animationProps = useSpring({\n\t\t// config: { mass: 1, friction: 8, clamp: true },\n\t\tconfig: { duration: 150 },\n\t\topacity: !emailVisible ? 0 : 1,\n\t\tbottom: !emailVisible ? -6 : 0,\n\t\tbackground: darkMode ? '#2E3138' : '#F9FAFC',\n\t\t// borderImage: darkMode ? 'linear-gradient(to top, #26282C, 70%, #363940) 1 0%' : 'linear-gradient(to right, #FFFFFF, #E5EFFA) 1 0%',\n\t\tboxShadow: darkMode ? '0px 4px 13px rgba(29, 30, 35, .9)' : '0px 14px 18px rgba(31, 36, 39, .75)',\n\t\timmediate: key => ['background', 'boxShadow'].includes(key),\n\t\t// onRest: ({ opacity }) => {\n\t\t// \t!instructionsVisible && setInstructionsVisible((prev) => {\n\t\t// \t\tif (opacity === 1 && sphereState.direction === \"backwards\") {\n\t\t// \t\t\treturn true\n\t\t// \t\t}\n\t\t// \t\treturn prev\n\t\t// \t})\n\t\t// }\n\t})\n\n\tconst textProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#334669',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst buttonProps = useSpring({\n\t\t// border: darkMode ? '2px solid #FFFFFF' : '2px solid #000000',\n\t\tbackground: darkMode ? '#2C3036' : '#E6EEF8',\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tboxShadow: !darkMode ? '-4px -2px 10px rgba(255, 255, 255, 1), 4px 2px 18px rgba(170, 187, 201, 0.9)' : '-2px -1px 7px rgba(72, 78, 83, 0.75), 3px 1px 7px rgba(22, 26, 28, 0.9)',\n\t\tconfig: { duration: 130 },\n\t\timmediate: key => ['background', 'boxShadow'].includes(key)\n\t})\n\n\treturn (\n\t\t<animated.div className=\"MobileEmailForm\" style={animationProps}>\n\t\t\t<animated.h5 style={textProps}>Stay Updated</animated.h5>\n\t\t\t<Email darkMode={darkMode} />\n\t\t\t<animated.button style={buttonProps} className=\"mode-switch\" onClick={() => setDarkMode(() => !darkMode)}>\n\t\t\t\t{ darkMode ? 'L' : 'D'}\n\t\t\t</animated.button>\n\t\t</animated.div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseEffect,\n\tuseState,\n\t// PointerEvent,\n\tuseRef, \n\tuseCallback\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface MobileInstructionsProps {\n\tdarkMode: Boolean,\n\tinstructionsState: {\n\t\tposition: 'up' | 'down',\n\t\tvisible: boolean\n\t}\n\tsetInstructionsState: React.Dispatch<React.SetStateAction<{\n\t\tposition: 'up' | 'down';\n\t\tvisible: boolean;\n\t}>>\n}\n\nexport const MobileInstructions: FunctionComponent<MobileInstructionsProps> = ({\n\tinstructionsState,\n\tdarkMode,\n\tsetInstructionsState\n}) => {\n\tconst instructionsRef = useRef<HTMLDivElement>(null);\n\n\tlet [pointerState, setPointerState] = useState<any>({\n\t\txStart: null,\n\t\tyStart: null,\n\t\tyTravel: null,\n\t\txTravel: null,\n\t})\n\n\tconst pointerDownHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst updated = {\n\t\t\t\txStart: clientX,\n\t\t\t\tyStart: clientY,\n\t\t\t}\n\t\t\treturn { ...prev, ...updated}\n\t\t})\n\t}\n\n\tconst pointerMoveHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t\t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t\t\treturn { ...prev, yTravel, xTravel }\n\t\t})\n\t}\n\n\tconst pointerUpHandler = () => {\n\t\tsetPointerState(() => ({\n\t\t\txTravel: null,\n\t\t\tyTravel: null,\n\t\t\txStart: null,\n\t\t\tyStart: null,\n\t\t}))\n\t}\n\n\tconst clickHandler = useCallback(() => {\n\t\tsetInstructionsState((prev) => {\n\t\t\tif (prev.position === 'down') {\n\t\t\t\treturn { ...prev, position: 'up'}\n\t\t\t}\n\t\t\treturn prev\n\t\t})\n\t}, [setInstructionsState])\n\n\t// const resetPointer = () => {\n\t// \tsetPointerState(() => ({\n\t// \t\txTravel: null,\n\t// \t\tyTravel: null,\n\t// \t\txStart: null,\n\t// \t\tyStart: null,\n\t// \t}))\n\t// }\n\n\tconst instructionsDivProps = useSpring({\n\t\topacity: instructionsState.visible ? 1 : 0,\n\t\tconfig: instructionsState.position === 'down' ? { duration: 70 } : { tension: 280, clamp: true },\n\t})\n\n\tconst instructionsTextProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tuseEffect(() => {\n\t\tif (pointerState.yTravel !== null) {\n\t\t\tsetInstructionsState((prev) => {\n\t\t\t\tif (prev.position === 'up' && pointerState.yTravel < -8) {\n\t\t\t\t\t// resetPointer();\n\t\t\t\t\treturn { ...prev, position: 'down'}\n\t\t\t\t} else if (prev.position === 'down' && pointerState.yTravel > 8) {\n\t\t\t\t\t// resetPointer();\n\t\t\t\t\treturn { ...prev, position: 'up'}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [pointerState, setInstructionsState])\n\n\tuseEffect(() => {\n\t\tlet ref = instructionsRef.current;\n\t\tif (ref) {\n\t\t\tref.addEventListener('pointerdown', (e: PointerEvent) => pointerDownHandler(e))\n\t\t\tref.addEventListener('pointermove', (e: PointerEvent) => pointerMoveHandler(e))\n\t\t\tref.addEventListener('pointerup', () => pointerUpHandler())\n\t\t\tref.addEventListener('click', () => clickHandler())\n\t\t}\n\t\treturn () => {\n\t\t\tif (ref) {\n\t\t\t\tref.removeEventListener('pointerdown', (e: PointerEvent) => pointerDownHandler(e))\n\t\t\t\tref.removeEventListener('pointermove', (e: PointerEvent) => pointerMoveHandler(e))\n\t\t\t\tref.removeEventListener('pointerup', () => pointerUpHandler())\n\t\t\t\tref.removeEventListener('click', () => clickHandler())\n\t\t\t}\n\t\t}\n\t}, [clickHandler])\n\n\treturn (\n\t\t<animated.div\n\t\t\t// onPointerDown={(e: PointerEvent) => pointerDownHandler(e)}\n\t\t\t// onPointerMove={(e: PointerEvent) => pointerMoveHandler(e)}\n\t\t\t// onPointerUp={() => {\n\t\t\t// \tpointerUpHandler()\n\t\t\t// }}\n\t\t\t// onClick={() => {\n\t\t\t// \tif (instructionsState.position === 'down') {\n\t\t\t// \t\tsetInstructionsState(prev => ({...prev, position: 'up'}))\n\t\t\t// \t}\n\t\t\t// }}\n\t\t\tref={instructionsRef}\n\t\t\tstyle={instructionsDivProps}\n\t\t\tclassName={`hold-icon${darkMode ? ' darkMode' : ''}${instructionsState.position === 'down' ? ' down' : ''}`}\n\t\t>\n\t\t\t<div className=\"center\"><div className=\"swiper\"></div></div>\n\t\t\t{ !darkMode ? <img src=\"../assets/holdicon.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> : <img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> }\n\t\t\t<animated.p style={instructionsTextProps}>Press and hold to learn more about Andy Mag</animated.p>\n\t\t</animated.div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseState,\n\t// useMemo,\n\tuseRef,\n\tuseEffect, useContext\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { PerspectiveCamera } from 'three';\nimport { Canvas, useThree } from 'react-three-fiber';\n\nimport { Sphere } from './Sphere2';\nimport { ColorShow } from './ColorShow';\nimport { MobileEmailForm } from './MobileEmailForm';\nimport { MobileInstructions } from './MobileInstructions';\n\nimport { ViewportContext } from '../context/viewportContext';\n\nconst Camera = () => {\n\tconst camera = useRef<PerspectiveCamera | null>(null)\n\tconst { aspect, size, setDefaultCamera } = useThree()\n\tconst pixelToThreeUnitRatio = 1\n\tconst planeDistance = 0\n\tconst cameraDistance = 500\n\tconst distance = cameraDistance - planeDistance\n\tconst height = size.height / pixelToThreeUnitRatio\n\tconst halfFovRadians = Math.atan((height / 2) / distance)\n\tconst fov = 2 * halfFovRadians * (180/Math.PI)\n\tuseEffect(() => {\n\t\tconsole.log(camera.current);\n\t\tif (camera.current) setDefaultCamera(camera.current)\n\t}, [size, setDefaultCamera])\n\n\treturn <perspectiveCamera\n\t\tref={camera}\n\t\taspect={aspect}\n\t\tfov={fov}\n\t\tposition={[0, 0, cameraDistance]}\n\t\tonUpdate={self => self.updateProjectionMatrix()}\n\t/>\n  }\n\nexport const MobileAnimation: FunctionComponent = () => {\n\tconst { isPortrait } = useContext(ViewportContext);\n\tconst scrollIndicatorPositions = useRef<number[]>([-1, 10, 22, 31.5]);\n\tconst [darkMode, setDarkMode] = useState<Boolean>(false);\n\tconst [chapterIndex, setChapterIndex ] = useState<number>(0);\n\tconst [colorShowActive, setColorShowActive] = useState<boolean>(false);\n\tconst [sphereState, setSphereState] = useState<{\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t}>({ hold: false, direction: 'backwards', mountAnimating: true});\n\tconst [emailVisible, setEmailVisible] = useState<Boolean>(false);\n\t// const [instructionsVisible, setInstructionsVisible] = useState<boolean>(false);\n\tconst [instructionsState, setInstructionsState] = useState<{ position: 'up' | 'down', visible: boolean}>({ position: 'up', visible: false})\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\tbackgroundColor: darkMode ? '#FFFFFF' : '#000000',\n\t\ttop: scrollIndicatorPosition,\n\t\topacity: colorShowActive ? '1' : '0',\n\t\tconfig: { clamp: true }\n\t})\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\treturn (\n\t\t<div className={`MobileAnimation${!isPortrait ? ' hide' : ''}`}>\n\t\t\t<div className=\"logo\" onClick={() => {\n\t\t\t\tsetColorShowActive(() => false)\n\t\t\t}}>\n\t\t\t\t{ !darkMode ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' /> }\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<Canvas\n\t\t\t\tstyle={{ backgroundColor: darkMode ? '#26282C' : '#F9FAFC' }}\n\t\t\t\tclassName=\"Canvas\"\n\t\t\t>\n\t\t\t\t<Camera />\n\t\t\t\t<Sphere\n\t\t\t\t\tradius={135}\n\t\t\t\t\tsetInstructionsState={setInstructionsState}\n\t\t\t\t\tsetEmailVisible={setEmailVisible}\n\t\t\t\t\tinPosition={[0, 135, 0]}\n\t\t\t\t\tsphereState={sphereState}\n\t\t\t\t\toutPosition={[0, 60, 646]}\n\t\t\t\t\tsetSphereState={setSphereState}\n\t\t\t\t\tbreakPoint={468}\n\t\t\t\t\tsetColorShowActive={setColorShowActive}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t<ColorShow chapterIndex={chapterIndex} colorShowActive={colorShowActive} setColorShowActive={setColorShowActive} setChapterIndex={setChapterIndex} setSphereState={setSphereState} darkMode={darkMode} />\n\t\t\t<MobileInstructions darkMode={darkMode} instructionsState={instructionsState} setInstructionsState={setInstructionsState} />\n\t\t\t<MobileEmailForm\n\t\t\t\tsphereState={sphereState}\n\t\t\t\temailVisible={emailVisible}\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tsetDarkMode={setDarkMode}\n\t\t\t/>\n \t\t</div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseContext\n} from 'react';\n\n// import { Email } from './Email';\n// import { MobileAnimation } from './MobileAnimation';\nimport { MobileAnimation } from './MobileAnimation2';\nimport { ViewportContext } from '../context/viewportContext';\n\nexport const MobileApp: FunctionComponent = () => {\n\tconst { isPortrait } = useContext(ViewportContext);\n\n\treturn (\n\t\t<>\n\t\t\t{ !isPortrait && \n\t\t\t\t<div className=\"LandscapeError\">\n\t\t\t\t\t<img src=\"../assets/round_arrow.svg\" alt=\"Round Arrow\" />\n\t\t\t\t\t<h3>Rotate to portrait mode.</h3>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<MobileAnimation />\n\t\t</>\n\t)\n}","import React, { FunctionComponent, useRef, createRef, useEffect, useCallback, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useDidUpdate } from '../hooks/useDidUpdate';\n\ninterface DesktopTextProps {\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tchapterIndex: number | null\n\twheelThreshold: number\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n\t// orbMovingState: \"out-forward\" | \"out-backward\" | \"to-forward\" | \"to-backward\" | \"resting\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tsubscribeActive: boolean\n}\n\nexport const DesktopText: FunctionComponent<DesktopTextProps> = ({ \n\tchapterIndex,\n\tsetChapterIndex,\n\twheelThreshold,\n\tsetBackgroundColor,\n\tsetButtonShadow,\n\tsetOrbMovingState,\n\tsubscribeActive\n}) => {\n\tlet chapterRefs = useRef<React.RefObject<HTMLDivElement>[]>([createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>()]);\n\tlet [textTransitioning, setTextTransitioning] = useState<'out-down' | 'out-up' | 'in' | null>(null)\n\n\tconst textAnimation = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tzIndex: subscribeActive ? -1 : 2,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\tconst reset = useCallback(() => {\n\t\t// remove all out classes to out down\n\t\tif (chapterRefs.current !== null) {\n\t\t\tchapterRefs.current.forEach((chapter, index) => {\n\t\t\t\tif (chapter.current !== null) {\n\t\t\t\t\tchapter.current.classList.remove('out-up');\n\t\t\t\t\tchapter.current.classList.add('out-down');\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [])\n\t\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tcurrent: chapter = null\n\t\t} = chapterRefs.current[0]\n\n\t\tchapter?.classList.remove('out-down')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetBackgroundColor(() => '#231B1B')\n\t\t\tsetTimeout(reset, 1000);\n\t\t} else {\n\t\t\tif (chapterRefs.current !== null && chapterRefs.current[0].current !== null) {\n\t\t\t\tif (chapterRefs.current[0].current.classList.contains('out-down')) chapterRefs.current[0].current.classList.remove('out-down') \n\t\t\t}\n\t\t}\n\t}, [subscribeActive, setBackgroundColor, reset])\n\n\tuseDidUpdate(() => {\n\t\tif (chapterIndex !== null) {\n\t\t\tconst {\n\t\t\t\tcurrent: chapter = null\n\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\n\t\t\tsetTextTransitioning(() => 'in')\n\t\t\tchapter?.classList.remove('out-down', 'out-up')\n\t\t}\n\t}, [chapterIndex])\n\n\tconst wheelHandler = useCallback((event: React.WheelEvent<HTMLDivElement>) => {\n\t\tconst { deltaY } = event;\n\t\tif (textTransitioning === null) {\n\t\t\tif (Math.abs(deltaY) > wheelThreshold) {\n\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcurrent: chapter = null\n\t\t\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\t\tif (deltaY > 0 && chapterIndex < 3) {\n\t\t\t\t\t\tchapter?.classList.add('out-up');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-up')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t} else if (deltaY < 0 && chapterIndex > 0) {\n\t\t\t\t\t\tchapter?.classList.add('out-down');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-down')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, wheelThreshold, textTransitioning, setOrbMovingState])\n\n\treturn (\n\t\t<animated.div className=\"Text grid\" style={textAnimation}>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t\tref={chapterRefs.current[0]}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>The most damaging phrase in language is 'It's</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>always been done that way'</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"spacer-top-1\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\t// set chapterIndex to next\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2>- Admiral Grace Hopper</h2>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[1]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>Andy Mag is an experiential magazine that</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>enables readers to interact (engage) with diverse</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span \n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>themes and ideas.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[2]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 3)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#95B1D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #779FD4, -1px -2px 7px #BAC4D2')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Because a great story is worth remembering.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[3]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Subscribe to Andy Mag for updates.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react';\n\nexport const useDidUpdate = (func: any, deps: Array<any>) => {\n    const didUpdate = useRef(false);\n\n    useEffect(() => {\n        if (didUpdate.current) func();\n        else didUpdate.current = true;\n    }, deps);\n}","// export default {}\nimport React, { FunctionComponent, useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { a, useSpring } from 'react-spring/three';\n// import { useDidUpdate } from '../hooks/useDidUpdate';\nimport { Box3 } from 'three';\nimport { DoubleSide } from 'three/';\n// import { Sphere } from './Sphere';\n\ninterface OrbProps {\n\tpointerPosition: [number | null, number | null]\n\tchapterIndex: number\n\torbMovingState: \"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"resting\" | \"to\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tresetPointer: () => void\n\tsubscribeActive: boolean\n\tsetSubscribeActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetEmailActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetOrbHold: React.Dispatch<React.SetStateAction<boolean>>\n\torbHold: boolean\n\tsetScrollIndicatorHeight: React.Dispatch<React.SetStateAction<number>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n\tsetInstructionPosition: React.Dispatch<React.SetStateAction<[number, number] | null>>\n\tsetInstructionActive: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Orb: FunctionComponent<OrbProps> = ({\n\tpointerPosition,\n\tchapterIndex,\n\torbMovingState,\n\tresetPointer,\n\tsetOrbMovingState,\n\tsubscribeActive,\n\tsetSubscribeActive,\n\tsetEmailActive,\n\tsetOrbHold,\n\torbHold,\n\tsetScrollIndicatorHeight,\n\tsetChapterIndex,\n\tsetBackgroundColor,\n\tsetButtonShadow,\n\tsetInstructionPosition,\n\tsetInstructionActive\n}) => {\n\tconst { viewport, camera } = useThree();\n\tconst orbRef = useRef<THREE.Points | null>(null)\n\tconst previousPosition = useRef<[number, number, number] | null>(null)\n\tconst closestSide = useRef<string | null>(null)\n\tconst subscribePosition = useRef<[number, number, number]>([viewport.width < 1280 ? -220 : -260, 0, 0]);\n\n\tconst orbMask = useRef<any>(null);\n\tconst orbMaskSphereBbox = useRef<THREE.Sphere>(new THREE.Sphere()) // position dependent on orbMask position\n\n\tconst rectPositions = useRef<any>([\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,59,0],\n\t\t\t\tgeometry: [690, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,6,0],\n\t\t\t\tgeometry: [415, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-60,0],\n\t\t\t\tgeometry: [355, 26, 0],\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,51,0],\n\t\t\t\tgeometry: [647, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,-1,0],\n\t\t\t\tgeometry: [748, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-51,0],\n\t\t\t\tgeometry: [272, 26, 0]\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [682, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [537, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t},\n\t]);\n\n\t// this is causing bug: on viewport change position of orb is changing\n\t// const orbPositions = useMemo<any>(() => {\n\t// \tlet radius = 200;\n\t// \tif (viewport.width >= 1280) radius = 240\n\t// \treturn [\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t// \t\t\tstart: [0,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [-250,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t// \t\t\tstart: [50,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [100,0,0]\n\t// \t\t},\n\t// \t]\n\t// }, [viewport])\n\tconst orbPositions = useMemo<any>(() => {\n\t\tlet radius = 200;\n\t\tif (viewport.width >= 1280) radius = 240\n\t\treturn [\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t\t\t\tstart: [0,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [-250,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t\t\t\tstart: [50,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [100,0,0]\n\t\t\t},\n\t\t]\n\t}, [])\n\n\tconst orbPositionConfigs = useRef<any>({\n\t\tresting: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tintersecting: undefined,\n\t\tout: {\n\t\t\tmass: 5,\n\t\t\tfriction: 4.5,\n\t\t\tclamp: true,\n\t\t},\n\t\tto: {\n\t\t\tduration: 1\n\t\t},\n\t\tin: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tsubscribe: {\n\t\t\ttension: 120,\n\t\t\tclamp: true\n\t\t},\n\t\tsubscribe_hold: {\n\t\t\tmass: 70,\n\t\t\t// friction: 50,\n\t\t\ttension: 140,\n\t\t\tclamp: true\n\t\t\t// duration: 600\n\t\t},\n\t\tat_threshold: {\n\t\t\tduration: 600\n\t\t}\n\t})\n\n\t// chapter rects\n\n\tconst textRef1 = useRef<any>(null);\n\tconst textBbox1 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef2 = useRef<any>(null);\n\tconst textBbox2 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef3 = useRef<any>(null);\n\tconst textBbox3 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst subscribeRef = useRef<any>(null);\n\tlet subscribeBbox = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst [orbScale, setOrbScale] = useState<[number, number, number] | null>(null)\n\tconst [orbPosition, setOrbPosition] = useState<[number,number,number] | null>(orbPositions[chapterIndex].pre)\n\tconst [isIntersecting, setIsIntersecting] = useState<boolean>(orbMovingState === 'intersecting' ? true : false);\n\tconst [orbOpacity, setOrbOpacity] = useState<number>(1);\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1800; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = 200 * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = 200 * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = 200 * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [])\n\n\tconst getOrbPosition = useCallback(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tconst currentPosition = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z];\n\t\t\tconst setPosition = orbPosition;\n\t\t\tlet match;\n\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => {\n\t\t\t\t\t// if the coord is within 5 units away in any direction return true for that direction\n\t\t\t\t\treturn Math.abs(coord - setPosition[index]) < 8\n\t\t\t\t}) : false\n\t\t\t} else {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => coord === setPosition[index]) : false;\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\tswitch (orbMovingState) {\n\t\t\t\t\tcase 'to':\n\t\t\t\t\t\treturn 'pre'\n\t\t\t\t\tcase 'subscribe':\n\t\t\t\t\t\treturn 'subscribe'\n\t\t\t\t\tcase 'at_threshold':\n\t\t\t\t\t\treturn 'at_threshold'\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn false\n\t}, [orbMovingState, orbPosition])\n\n\tconst placeInstructions = useCallback(() => {\n\t\tconst center = viewport.width < 1280 ? new THREE.Vector3(-220, 0, 0) :  new THREE.Vector3(-260, 0, 0);\n\t\tconst radius = viewport.width < 1280 ? 200 : 240;\n\n\t\tcenter.project(camera);\n\t\tcenter.x = center.x * (0.5 * viewport.width) + 0.5 * viewport.width + (0.5 * radius);\n\t\tcenter.y = -center.y * (0.5 * viewport.height) + 0.5 * viewport.height + radius;\n\n\t\tsetInstructionPosition(() => [center.x, center.y]);\n\t}, [viewport, camera, setInstructionPosition])\n\n\tconst { position, opacity, transparent } = useSpring({\n\t\tposition: orbPosition,\n\t\topacity: orbOpacity,\n\t\ttransparent: 0,\n\t\tconfig: isIntersecting ? orbPositionConfigs.current.intersecting : orbPositionConfigs.current[orbMovingState],\n\t\tonFrame: ({ opacity }: { opacity: number }) => {\n\t\t\tconst match = getOrbPosition();\n\t\t\tif (match === 'pre') {\n\t\t\t\tsetSubscribeActive((prev) => {\n\t\t\t\t\tif (prev === true) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t})\n\t\t\t\tsetScrollIndicatorHeight(() => 0)\n\t\t\t\tsetOrbMovingState(() => 'in');\n\t\t\t\tsetOrbPosition(() => orbPositions[chapterIndex].start);\n\t\t\t} else if (match === 'subscribe') {\n\t\t\t\tsetEmailActive(() => true)\n\t\t\t\tsetInstructionActive(() => true)\n\t\t\t} else if (match === 'at_threshold') {\n\t\t\t\tif (opacity === 0) {\n\t\t\t\t\t// do not set subscribe back to active until orb is at pre position\n\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\tsetOrbMovingState(() => 'to')\n\t\t\t\t\tsetEmailActive(() => false)\n\t\t\t\t\tsetInstructionActive(() => false)\n\t\t\t\t\tsetOrbHold(() => false)\n\t\t\t\t\tsetOrbPosition(() => orbPositions[0].pre)\n\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\tconst autoRotateOrb = useCallback((number: number) => {\n\t\tif (orbRef.current !== null) {\n\t\t\torbRef.current.rotation.y += number\n\t\t}\n\t}, [])\n\n\tconst computeBoundingAreas = useCallback(() => {\n\t\tif (orbMask.current !== null) orbMask.current.geometry.computeBoundingSphere();\n\t\tif (textRef1.current !== null) textRef1.current.geometry.computeBoundingBox();\n\t\tif (textRef2.current !== null) textRef2.current.geometry.computeBoundingBox();\n\t\tif (textRef3.current !== null) textRef3.current.geometry.computeBoundingBox();\n\t\tif (subscribeRef.current !== null) subscribeRef.current.geometry.computeBoundingBox();\n\t}, [])\n\n\tconst updateOrbMaskSphereBboxRadius = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) {\n\t\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius;\n\t\t\t} else if (viewport.width >= 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius + 40;\n\t\t\t}\n\t\t}\n\t}, [viewport])\n\n\tconst updateOrbMaskSphereBboxCenter = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) orbMaskSphereBbox.current.center = new THREE.Vector3(orbMask.current.position.x, orbMask.current.position.y, orbMask.current.position.z)\n\t}, [])\n\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetBackgroundColor(() => '#D695AB')\n\t// \tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t// \tsetOrbOpacity(() => 0)\n\t// \tsetChapterIndex(() => 0)\n\t// \tsetSubscribeActive(() => false)\n\t// \tsetOrbMovingState(() => 'out')\n\t// \tsetEmailActive(() => false)\n\t// }, [setChapterIndex, setBackgroundColor, setButtonShadow, setOrbOpacity, setSubscribeActive, setEmailActive, setOrbMovingState])\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetOrbMovingState(() => 'at_threshold');\n\t// }, [setOrbMovingState])\n\n\tconst getClosestSide = useCallback((): string | null => {\n\t\tif (orbRef.current !== null ) {\n\t\t\tconst distanceObj = {\n\t\t\t\tleft: orbRef.current.position.x + (0.5 * viewport.width),\n\t\t\t\tright: (0.5 * viewport.width) - orbRef.current.position.x,\n\t\t\t\ttop: (0.5 * viewport.height) - orbRef.current.position.y,\n\t\t\t\tbottom: orbRef.current.position.y + (0.5 * viewport.height)\n\t\t\t}\n\t\t\t\n\t\t\tconst min = Math.min(distanceObj.left, distanceObj.right, distanceObj.top, distanceObj.bottom);\n\n\t\t\tif (min === distanceObj.left) {\n\t\t\t\treturn 'left'\n\t\t\t} else if (min === distanceObj.right) {\n\t\t\t\treturn 'right'\n\t\t\t} else if (min === distanceObj.bottom) {\n\t\t\t\treturn 'bottom'\n\t\t\t} else if (min === distanceObj.top) {\n\t\t\t\treturn 'top'\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}, [viewport])\n\n\tconst getTranslatedPointerPosition = useCallback(() => {\n\t\tlet position: [number, number, number] | null = null;\n\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\tconst x = pointerPosition[0] - window.innerWidth / 2;\n\t\t\tconst y = -pointerPosition[1] + window.innerHeight / 2;\n\t\t\tposition = [x, y, 0];\n\t\t}\n\t\treturn position\n\t}, [pointerPosition])\n\n\tconst isSphereIntersectingBox = useCallback((sphere: THREE.Sphere, box: Box3) => {\n\t\tvar x = Math.max(box.min.x, Math.min(sphere.center.x, box.max.x));\n\t\tvar y = Math.max(box.min.y, Math.min(sphere.center.y, box.max.y));\n\t\tvar z = Math.max(box.min.z, Math.min(sphere.center.z, box.max.z));\n\t  \n\t\tvar distance = Math.sqrt((x - sphere.center.x) * (x - sphere.center.x) +\n\t\t\t\t\t\t\t\t (y - sphere.center.y) * (y - sphere.center.y) +\n\t\t\t\t\t\t\t\t (z - sphere.center.z) * (z - sphere.center.z));\n\t\t\n\t\treturn distance < sphere.radius;\n\t}, [])\n\n\tconst moveOut = useCallback(() => {\n\t\t// using the closest side, translate out of view\n\t\tlet radius: number;\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tradius = 200;\n\t\t} else {\n\t\t\tradius = 240;\n\t\t}\n\n\t\tsetOrbPosition((prev) => {\n\t\t\tif (prev !== null && orbRef.current !== null) {\n\t\t\t\tlet x = orbRef.current.position.x;\n\t\t\t\tlet y = orbRef.current.position.y;\n\t\t\t\tconst z = orbRef.current.position.z;\n\t\t\t\tif (closestSide.current === 'left') {\n\t\t\t\t\tx = (-0.5 * viewport.width) - radius;\n\t\t\t\t} else if (closestSide.current === 'bottom') {\n\t\t\t\t\ty = (-0.5 * viewport.height) - radius;\n\t\t\t\t} else if (closestSide.current === 'top') {\n\t\t\t\t\ty = (0.5 * viewport.height) + radius\n\t\t\t\t} else if (closestSide.current === 'right') {\n\t\t\t\t\tx = (0.5 * viewport.width) + radius;\n\t\t\t\t}\n\t\t\t\treturn [x,y,z]\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t}, [viewport])\n\n\tconst isOrbIntersecting = useCallback(() => {\n\t\treturn !subscribeActive && orbMovingState !== 'out' ? isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox1.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, subscribeBbox.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox2.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox3.current) : false\n\t}, [isSphereIntersectingBox, subscribeActive, orbMovingState])\n\n\tuseEffect(() => {\n\t\tplaceInstructions();\n\t}, [placeInstructions])\n\n\tuseEffect(() => {\n\t\tcomputeBoundingAreas();\n\t\t\n\t\tsubscribeBbox.current.setFromObject(subscribeRef.current);\n\t\t\n\t\tupdateOrbMaskSphereBboxRadius()\n\t\tupdateOrbMaskSphereBboxCenter();\n\t}, [computeBoundingAreas, updateOrbMaskSphereBboxRadius, updateOrbMaskSphereBboxCenter])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState(() => 'to');\n\t\tsetOrbPosition(() => orbPositions[chapterIndex].pre);\n\t\ttextBbox1.current.setFromObject(textRef1.current);\n\t\ttextBbox2.current.setFromObject(textRef2.current);\n\t\ttextBbox3.current.setFromObject(textRef3.current);\n\t}, [chapterIndex, setOrbMovingState, orbPositions])\n\n\tuseEffect(() => {\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tsetOrbScale(() => [1,1,1])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t} else {\n\t\t\tsetOrbScale(() => [1.2, 1.2, 1.2])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t}\n\t}, [viewport, updateOrbMaskSphereBboxRadius])\n\n\tuseEffect(() => {\n\t\tif (orbMovingState === 'out') {\n\t\t\tmoveOut();\n\t\t\tresetPointer();\n\t\t} else if (orbMovingState === 'at_threshold') {\n\t\t\tsetOrbOpacity(() => 0);\n\t\t} else if (orbMovingState === 'to') {\n\t\t\tsetOrbOpacity((prev) => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [orbMovingState, moveOut, resetPointer])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetOrbMovingState(() => 'subscribe')\n\t\t} else {\n\t\t\tsetOrbOpacity(prev => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [subscribeActive, setOrbMovingState])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState((prev) => {\n\t\t\tif (prev === 'subscribe' && orbHold === true) {\n\t\t\t\treturn 'subscribe_hold'\n\t\t\t} else if (prev === 'subscribe_hold' && orbHold === false) {\n\t\t\t\treturn 'subscribe'\n\t\t\t}\n\t\t\treturn prev\n\t\t})\n\t}, [orbHold, setOrbMovingState])\n \n\tuseFrame(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\t// console.log(orbRef.current.position);\n\t\t\tautoRotateOrb(0.001);\n\n\t\t\t// update the orbMaskSphereBbox to the position of the orbMask\n\t\t\tupdateOrbMaskSphereBboxCenter();\n\n\t\t\t// calculate what side or is closest to\n\t\t\tclosestSide.current = getClosestSide();\n\n\t\t\t// logic for orb movement\n\t\t\tif (!isOrbIntersecting()) {\n\t\t\t\tsetIsIntersecting(() => false)\n\t\t\t\tpreviousPosition.current = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z]\n\t\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\t\tsetOrbPosition(() => {\n\t\t\t\t\t\tsubscribePosition.current = [viewport.width < 1280 ? -220 : -260, 0, 0];\n\t\t\t\t\t\treturn [viewport.width < 1280 ? -220 : -260, 0, 0]\n\t\t\t\t\t})\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y === 0) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'resting') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'resting') {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) return getTranslatedPointerPosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'in') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'resting');\n\t\t\t\t\t\t\t\treturn getTranslatedPointerPosition();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'subscribe_hold') {\n\t\t\t\t\tsetOrbPosition(() => [0, 0, 0])\n\t\t\t\t\t// get percentage of travel\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\t// percentage is 100 when origin is atleast 10 units away from origin\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y === 0) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// automator\n\t\t\t\t\t\t\t\tif (percentage === 1) {\n\t\t\t\t\t\t\t\t\t// atHoldThresholdAutomator();\n\t\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'at_threshold');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetIsIntersecting(() => true)\n\t\t\t\tsetOrbPosition(() => previousPosition.current)\n\t\t\t}\n\t\t}\n\t})\t\n\t\n\treturn (\n\t\t<>\n\t\t\t<group\n\t\t\t>\n\t\t\t\t<a.mesh\n\t\t\t\t\tonPointerDown={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return true\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tonPointerUp={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return false\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tref={orbMask}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t>\n\t\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\targs={[200, 32, 32, 0, 2*Math.PI, 0, Math.PI]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t\tside={DoubleSide}\n\t\t\t\t\t/>\n\t\t\t\t</a.mesh>\n\t\t\t\t<a.points\n\t\t\t\t\tonPointerDown={() => setOrbHold(() => true)}\n\t\t\t\t\tonPointerUp={() => setOrbHold(() => false)}\n\t\t\t\t\tref={orbRef}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t\t// opacity={orbAnimationProps.opacity}\n\t\t\t\t>\t\n\t\t\t\t\t<geometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\tvertices={vertices}\n\t\t\t\t\t/>\n\t\t\t\t\t<a.pointsMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t\tsize={2.5}\n\t\t\t\t\t\ttransparent={transparent}\n\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t/>\n\t\t\t\t</a.points>\n\t\t\t</group>\n\t\t\t<group>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef1}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef1.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef1.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef2}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef2.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef2.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef3}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef3.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef3.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={subscribeRef}\n\t\t\t\t\tposition={[0, -viewport.height / 2 + 135, 0]}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={[280, 50, 0]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t</group>\t\t\t\n\t\t</>\n\t)\n\t\n}\n\t\n","import React, {\n\tFunctionComponent,\n\t// useContext,\n\t// useState,\n} from 'react';\nimport { useSpring, animated } from 'react-spring';\n\n// import { ViewportContext } from '../context/viewportContext';\n// import * as THREE from 'three'\n\ninterface DesktopInstructionsProps {\n\tinstructionPosition: [number, number] | null\n\tinstructionActive: boolean\n\torbHold: boolean\n\t// setOrbHold: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const DesktopInstructions: FunctionComponent<DesktopInstructionsProps> = ({\n\tinstructionPosition,\n\tinstructionActive,\n\torbHold\n}) => {\n\t// obtain viewport dimensions and use this to determine sbuscribe center position and to calc instruction position\n\t// [-220, 0, 0] for screens 900 -> 1279, [-260, 0, 0] for screens 1280+\n\n\t// const { currentDeviceWidth, currentDeviceHeight } = useContext(ViewportContext);\n\t// const [center, setCenter] = useState<[number, number, number]>(currentDeviceWidth < 1280 ? [-220, 0 , 0] : [-260, 0, 0]);\n\t// const [htmlPosition, htmlPosition] = useState<[number, number] | null>(null);\n\n\t// const getHTMLPosition = useCallback(() => {\n\t// \t// translate normalized 2D threejs coord to html position\n\t// \t// project center to camera\n\t// \t// const normalizedCenter = THREE.Vector3.\n\t// \tconst \n\t// }, [])\n\t\n\t// const getConfig = (key: string) => {\n\t// \tif (key === 'opacity') {\n\t// \t\treturn {\n\t// \t\t\tmass: 2,\n\t// \t\t\tfriction: 2,\n\t// \t\t\tclamp: true\n\t// \t\t}\n\t// \t} else if (['top', 'left'].includes(key)) {\n\t// \t\treturn {\n\t// \t\t\tduration: 300\n\t// \t\t}\n\t// \t}\n\t// }\n\t\n\tconst instructionProps = useSpring({\n\t\topacity: instructionActive ? orbHold ? 0 : 1 : 0,\n\t\tvisibility: instructionActive ? 'visible' : 'hidden',\n\t\ttop: instructionPosition ? instructionPosition[1] : '',\n\t\tleft: instructionPosition ? instructionPosition[0] : '',\n\t\t// config: key => getConfig(key)\n\t\t// delay: (key: string) => key === 'opacity' ? 400 : undefined\n\t\t// delay: (key) => key === 'opacity' \n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 1,\n\t\t\tclamp: true,\n\t\t},\n\t})\n\n\t\n\n\treturn (\n\t\t<animated.div\n\t\t\tclassName=\"DesktopInstructions\"\n\t\t\t// style={{\n\t\t\t// \tposition: 'absolute',\n\t\t\t// \ttop: instructionPosition ? instructionPosition[1] : '',\n\t\t\t// \tleft: instructionPosition ? instructionPosition[0] : ''\n\t\t\t// }}\n\t\t\tstyle={instructionProps}\n\t\t>\n\t\t\t<div className=\"hold-icon\">\n\t\t\t\t<img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/>\n\t\t\t\t<p>Press and hold orb to go back</p>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef, useEffect\n\t}\nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface DesktopEmailProps {\n\temailActive: boolean\n\torbHold: boolean\n}\n\nexport const Email: FunctionComponent<DesktopEmailProps> = ({\n\temailActive,\n\torbHold\n}) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\tlet [inputFocus, setInputFocus] = useState<boolean>(false);\n\tconst emailDiv = useRef<HTMLDivElement | null>(null)\n\n\tconst emailDivProps = useSpring({\n\t\topacity: orbHold ? 0 : 1,\n\t\tvisibility: orbHold ? 'hidden' : 'visible',\n\t\tconfig: {\n\t\t\tmass: 2,\n\t\t\tfriction: 2,\n\t\t\tclamp: true\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (emailDiv.current !== null) {\n\t\t\temailActive ? emailDiv.current.classList.add('active') : emailDiv.current.classList.remove('active')\n\t\t\tif (inputFocus) {\n\t\t\t\temailDiv.current.classList.add('focused') \n\t\t\t} else {\n\t\t\t\temailDiv.current.classList.remove('focused')\n\t\t\t}\n\t\t}\n\t}, [emailActive, inputFocus, email])\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\treturn (\n\t\t<animated.div className='DesktopEmail grid' ref={emailDiv} style={emailDivProps}>\n\t\t\t<form onSubmit={submitHandler} className={success ? 'desktopEmailWrapper Email success' : (success === 'false' ? 'desktopEmailWrapper Email fail' : 'desktopEmailWrapper Email')}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h3>STAY UPDATED WITH THE</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h3>ANDY MAG NEWSLETTER</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<label>\n\t\t\t\t\t<h4>Email</h4>\n\t\t\t\t</label>\n\t\t\t\t{ inputFocus ? <img className=\"submitIcon\" src=\"../assets/paper_plane_purple.svg\" alt=\"Submit\" /> : <img className=\"submitIcon\" src=\"../assets/paper_plane_white.svg\" alt=\"Submit\" /> }\n\t\t\t\t<input\n\t\t\t\t\tonFocus={() => setInputFocus(() => true)}\n\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\t\tif (email === undefined || email.length < 1) setInputFocus(() => false)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t\t{/* <input type=\"submit\" value=\"SUBSCRIBE\"/> */}\n\t\t\t</form>\n\t\t\t{/* <div className=\"hold-icon\">\n\t\t\t\t<img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/>\n\t\t\t\t<p>Press and hold to go back</p>\n\t\t\t</div> */}\n\t\t</animated.div>\n\t\t\n\t)\n}","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef,\n\t\tuseEffect,\n\t\tuseCallback,\n\t} \nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Canvas } from 'react-three-fiber';\n\nimport { DesktopText } from './DesktopText';\n// import { DesktopOrb } from './DesktopOrb';\nimport { Orb } from './DesktopOrb3';\nimport { DesktopInstructions } from './DesktopInstructions'\nimport { Email } from './DesktopEmailForm';\n\ninterface OrbState {\n\torb_position: [number, number, number],\n\tmove_state: 'out' | 'in' | 'to' | 'rest',\n}\n\nexport const DesktopApp: FunctionComponent = () => {\n\tlet [chapterIndex, setChapterIndex] = useState<number>(0);\n\tlet [backgroundColor, setBackgroundColor] = useState<string>('#D695AB')\n\tlet [subscribeActive, setSubscribeActive] = useState<boolean>(false);\n\tlet [emailActive, setEmailActive] = useState<boolean>(false);\n\tlet [buttonShadow, setButtonShadow] = useState<string>('1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\tconst scrollIndicatorPositions = useRef<number[]>([0, 9, 18, 26]);\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tlet [scrollIndicatorHeight, setScrollIndicatorHeight] = useState<number>(0);\n\tlet [canvasViewport, setCanvasViewport] = useState<{width: number, height: number, factor: number} | null>(null)\n\tlet [orbMovingState, setOrbMovingState] = useState<'out' | 'resting' | 'to' | 'intersecting' | 'in' | 'subscribe' | 'subscribe_hold' | 'at_threshold'>('resting')\n\tlet [orbHold, setOrbHold] = useState<boolean>(false);\n\tlet [pointerPosition, setPointerPosition] = useState<[number | null, number | null]>([null, null])\n\n\tlet [instructionPosition, setInstructionPosition] = useState<[number, number] | null>(null); \n\tlet [instructionActive, setInstructionActive] = useState<boolean>(false);\n\n\tlet wheelThreshold = useRef<number>(40);\n\tlet containerRef = useRef<HTMLDivElement>(null);\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\t// top: subscribeActive ? 'auto' : scrollIndicatorPosition,\n\t\ttop: !subscribeActive ? scrollIndicatorPosition : 'auto',\n\t\tbottom: subscribeActive ? 1 : 'auto',\n\t\theight: subscribeActive ? scrollIndicatorHeight : 19,\n\t\tconfig: { clamp: true },\n\t\tbackgroundColor: !subscribeActive ? 'black' : 'white',\n\t\t// opacity: subscribeActive ? 0 : 1,\n\t\t// top: scrollIndicatorPosition,\n\t\t// bottom: 'auto',\n\t\t// height: 19,\n\t\t// config: { clamp: true },\n\t\t// backgroundColor: 'black',\n\t})\n\n\t// const subscribeIndicatorAnimate = useSpring({\n\t// \topacity: subscribeActive ? 1 : 0,\n\t// \ttop: 'auto',\n\t// \theight: scrollIndicatorHeight,\n\t// \tbottom: 1,\n\t// \tbackgroundColor: 'white',\n\t// \tconfig: { clamp: true }\n\t// })\n\n\t// const instructionsProps = useSpring({\n\t// \topacity: orbHold ? 0 : 1\n\t// })\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerPosition(() => [null, null])\n\t}, [])\n\n\tconst subscribeButtonProps = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName=\"DesktopAnimation\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: backgroundColor\n\t\t\t}}\n\t\t\tonPointerMove={(e) => {\n\t\t\t\tconst {\n\t\t\t\t\tclientX,\n\t\t\t\t\tclientY\n\t\t\t\t} = e;\n\t\t\t\tsetPointerPosition(() => {\n\t\t\t\t\treturn [clientX, clientY]\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\t\t\t<Canvas\n\t\t\t\tclassName=\"Orb\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t\torthographic\n\t\t\t\tcamera={{\n\t\t\t\t\tleft: canvasViewport ? -canvasViewport.width / 2 : undefined,\n\t\t\t\t\tright: canvasViewport ? canvasViewport.width / 2 : undefined,\n\t\t\t\t\ttop: canvasViewport ? canvasViewport.height / 2 : undefined,\n\t\t\t\t\tbottom: canvasViewport ? -canvasViewport.height / 2 : undefined,\n\t\t\t\t\tnear: 300,\n\t\t\t\t\tfar: -300\n\t\t\t\t}}\n\t\t\t>\t\n\t\t\t\t<Orb\n\t\t\t\t\tsetInstructionActive={setInstructionActive}\n\t\t\t\t\tsetInstructionPosition={setInstructionPosition}\n\t\t\t\t\tsetBackgroundColor={setBackgroundColor}\n\t\t\t\t\tsetButtonShadow={setButtonShadow}\n\t\t\t\t\tsetChapterIndex={setChapterIndex}\n\t\t\t\t\tsetScrollIndicatorHeight={setScrollIndicatorHeight}\n\t\t\t\t\torbHold={orbHold}\n\t\t\t\t\tsetOrbHold={setOrbHold}\n\t\t\t\t\tsetEmailActive={setEmailActive}\n\t\t\t\t\tpointerPosition={pointerPosition}\n\t\t\t\t\tchapterIndex={chapterIndex}\n\t\t\t\t\torbMovingState={orbMovingState}\n\t\t\t\t\tresetPointer={resetPointer}\n\t\t\t\t\tsetOrbMovingState={setOrbMovingState}\n\t\t\t\t\tsubscribeActive={subscribeActive}\n\t\t\t\t\tsetSubscribeActive={setSubscribeActive} />\n\t\t\t</Canvas>\n\t\t\t<div className=\"logo\">\n\t\t\t\t{ !subscribeActive ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' />}\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t\t{/* <animated.div className=\"scroll-indicator\" style={subscribeIndicatorAnimate} /> */}\n\t\t\t</div>\n\t\t\t<DesktopText chapterIndex={chapterIndex} setChapterIndex={setChapterIndex} wheelThreshold={wheelThreshold.current} setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} />\n\t\t\t<animated.div className=\"SubscribeButton\" style={subscribeButtonProps}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSubscribeActive(() => true)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: buttonShadow\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSUBSCRIBE\n\t\t\t\t</button>\n\t\t\t</animated.div>\n\t\t\t<div className=\"SocialMedia\">\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.snapchat.com/add/theandymag\"><img src=\"../assets/snapchat.svg\" alt=\"Snapchat\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/theandymag/\"><img src=\"../assets/instagram.svg\" alt=\"Instagram\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/theandymag_\"><img src=\"../assets/twitter.svg\" alt=\"Twitter\" /></a>\n\t\t\t</div>\n\t\t\t<DesktopInstructions instructionPosition={instructionPosition} instructionActive={instructionActive} orbHold={orbHold}/>\n\t\t\t<Email orbHold={orbHold} emailActive={emailActive} />\n\t\t</div>\n\t)\n}","import React, {\n\t// useEffect,\n\t// useState, \n\t// useCallback, \n\t// useRef\n\tuseContext,\n} from 'react';\n\nimport './styles/base.sass'\nimport { MobileApp } from './Components/MobileApp'\nimport { DesktopApp } from './Components/DesktopApp'\nimport { ViewportContext } from './context/viewportContext';\n\nfunction App() {\n\t// let [isMobile, setIsMobile] = useState<Boolean>(window.innerWidth <= 900);\n\t// need to wrap this in context\n\t// let [height, setHeight] = useState<number>(window.innerHeight);\n\t// let [width, setWidth] = useState<number>(window.innerWidth);\n\t// const appHeight = () => document.documentElement.style.setProperty('--app-height', `${window.innerHeight}px`)\n\t\n\t// const windowResizeHandler = useCallback(() => {\n\t// \t// const viewport = document.querySelector(\"meta[name=viewport]\");\n\t// \t// const height = window.innerHeight;\n\t// \t// const width = window.innerWidth;\n\t// \t// viewport && viewport.setAttribute(\"content\", \"height=\" + height + \"px, width=\" + width + \"px, initial-scale=1.0\");\n\t// \t// setHeight(() => window.innerHeight)\n\t// \t// setWidth(() => window.innerWidth);\n\t// \twindow.innerWidth <= 900 ? setIsMobile(true) : setIsMobile(false);\n\t// }, [])\n\n\n\t// useEffect(() => {\n\t// \twindow.addEventListener('resize', windowResizeHandler)\n\t// \t// window.addEventListener('resize', appHeight)\n\t// }, [windowResizeHandler]);\n\n\t// useEffect(() => {\n\t// \tappHeight()\n\t// }, [])\n\n\t// useEffect(() => {\n\t// \tif (viewport.current) {\n\t// \t\tviewport.current.setAttribute(\"content\", \"height=\" + height + \"px, width=\" + width + \"px, initial-scale=1.0\");\n\t// \t}\n\t// }, [height, width])\n\tconst { isMobile } = useContext(ViewportContext)\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{\n\t\t\t\t\tisMobile ? <MobileApp /> : <DesktopApp />\n\t\t\t\t}\n\t\t\t</div>\t\t\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { ViewportContextWrapper } from './viewportContext';\n\nexport const Store: FunctionComponent = (props) => {\n\treturn (\n\t\t<ViewportContextWrapper>\n\t\t\t{ props.children }\n\t\t</ViewportContextWrapper>\n\t)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Store } from './context/index';\n\nReactDOM.render(\n  <React.StrictMode>\n\t<Store>\n    \t<App />\n\t</Store>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}