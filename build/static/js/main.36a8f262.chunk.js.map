{"version":3,"sources":["Components/Sphere2.tsx","Components/ColorShow.tsx","Components/Email.tsx","Components/MobileEmailForm.tsx","Components/MobileAnimation2.tsx","Components/MobileApp.tsx","Components/DesktopText.tsx","hooks/useDidUpdate.tsx","Components/DesktopOrb3.tsx","Components/DesktopEmailForm.tsx","Components/DesktopApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sphere","radius","sphereState","setSphereState","breakPoint","setEmailVisible","setInstructionsVisible","setColorShowActive","sphereRef","useRef","useThree","camera","fov","size","defaultPointSize","inPosition","outPosition","height","hemisphereRef","useFrame","current","rotation","y","setPosition","useCallback","mountAnimating","hold","pointerUpHandler","position","z","prev","direction","vertices","useMemo","computedVertices","i","theta","THREE","randFloatSpread","phi","x","Math","sin","cos","push","map","v","sphereAnimationProps","useSpring","config","mass","tension","friction","clamp","pointsPosition","opacity","onFrame","arg","onRest","console","log","every","index","useEffect","material","tan","PI","lookAt","mesh","ref","onPointerDown","onPointerUp","circlePosition","attach","args","transparent","side","DoubleSide","points","pointsMaterial","color","ColorShow","chapterIndex","colorShowActive","setChapterIndex","darkMode","container","useState","transitioning","setTransitioning","initialized","setInitialized","xStart","yStart","yTravel","xTravel","pointerState","setPointerState","backgroundColors","lightMode","arrowColors","backgroundColor","setBackgroundColor","arrowColor","setArrowColor","getActiveSlideIndex","active","slides","children","length","classList","contains","activeSlide","activeSlideTransitionTarget","nextSlide","nextSlideTransitionTarget","addEventListener","activeCb","remove","removeEventListener","nextCb","add","next","back","containerCb","setTimeout","reset","className","e","clientX","clientY","updated","pointerDownHandler","onPointerMove","pointerMoveHandler","style","background","transitionDelay","width","viewBox","fill","xmlns","fill-rule","clip-rule","d","Email","success","setSuccess","email","setEmail","emailInputProps","borderBottom","duration","submitButtonProps","boxShadow","immediate","key","onSubmit","preventDefault","body","options","method","headers","JSON","stringify","fetch","process","then","res","json","data","statusCode","catch","error","input","type","value","placeholder","onChange","currentTarget","required","MobileEmailForm","emailVisible","setDarkMode","animationProps","bottom","includes","textProps","buttonProps","div","p","button","onClick","Camera","aspect","setDefaultCamera","atan","cameraDistance","onUpdate","self","updateProjectionMatrix","MobileAnimation","scrollIndicatorPositions","instructionsVisible","scrollIndicatorPosition","setScrollIndicatorPosition","instructionsDivProps","instructionsTextProps","scrollIndicatorAnimate","top","src","alt","MobileApp","DesktopText","wheelThreshold","setButtonShadow","setOrbMovingState","subscribeActive","chapterRefs","createRef","textTransitioning","setTextTransitioning","textAnimation","zIndex","forEach","chapter","func","deps","didUpdate","useDidUpdate","wheelHandler","event","deltaY","abs","onWheel","onTransitionEnd","Orb","pointerPosition","orbMovingState","resetPointer","setSubscribeActive","setEmailActive","setOrbHold","orbHold","setScrollIndicatorHeight","viewport","orbRef","previousPosition","closestSide","subscribePosition","orbMask","orbMaskSphereBbox","rectPositions","textRef1","geometry","textRef2","textRef3","undefined","orbPositions","pre","start","orbPositionConfigs","resting","intersecting","out","to","in","subscribe","subscribe_hold","at_threshold","textBbox1","Box3","textBbox2","textBbox3","subscribeRef","subscribeBbox","orbScale","setOrbScale","orbPosition","setOrbPosition","isIntersecting","setIsIntersecting","orbOpacity","setOrbOpacity","getOrbPosition","currentPosition","coord","match","autoRotateOrb","number","computeBoundingAreas","computeBoundingSphere","computeBoundingBox","updateOrbMaskSphereBboxRadius","boundingSphere","updateOrbMaskSphereBboxCenter","center","getClosestSide","distanceObj","left","right","min","getTranslatedPointerPosition","window","innerWidth","innerHeight","isSphereIntersectingBox","sphere","box","max","sqrt","moveOut","isOrbIntersecting","setFromObject","x1","currentX","percentage","scale","emailActive","inputFocus","setInputFocus","emailDiv","emailDivProps","visibility","onFocus","onBlur","DesktopApp","buttonShadow","scrollIndicatorHeight","canvasViewport","setPointerPosition","containerRef","subscribeButtonProps","orthographic","near","far","target","rel","href","App","isMobile","setIsMobile","windowResizeHandler","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.36a8f262.chunk.js","sourcesContent":["import React, {\n\tFunctionComponent,\n\tuseRef,\n\tuseCallback,\n\tuseMemo,\n\tuseEffect,\n\t// useState,\n} from 'react';\nimport * as THREE from 'three/';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three'\nimport { DoubleSide } from 'three/';\n\ninterface SphereProps {\n\tradius: number,\n\tsetInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\tsetEmailVisible: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereAnimationProps?: any,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tsphereState: {\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t},\n\tinPosition: [number, number, number],\n\toutPosition: [number, number, number],\n\tbreakPoint: number,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Sphere: FunctionComponent<SphereProps> = ({\n\tradius,\n\t// inPosition,\n\tsphereState,\n\tsetSphereState,\n\tbreakPoint,\n\t// outPosition,\n\tsetEmailVisible,\n\tsetInstructionsVisible,\n\tsetColorShowActive\n}) => {\n\t/* \n\t\tTODO: \n\t\t\t-add responsive scaling for smaller and larger mobile viewports\n\t\t\t-responsive outPositions depending on viewport height\n\n\t\t\t-initial animation of ease into view:\n\t\t\t\t- start position \n\t\t\t\t- opacity fade in\n\t\t\t\t- orbLive ? --> fade and ease in to start position, \n\t*/ \n\tconst sphereRef = useRef<any>(null);\n\tconst {\n\t\tcamera,\n\t\tcamera: {\n\t\t\tfov\n\t\t},\n\t\t// viewport,\n\t\tsize,\n\t}: { camera: any, viewport: any, size: any } = useThree();\n\n\tconst defaultPointSize = useRef<number>(1.7);\n\tconst inPosition: [number, number, number] = [0, 0, 0];\n\tconst outPosition: [number, number, number] = [0, -size.height / 9, 626];\n\tconst hemisphereRef = useRef<THREE.Points | null>(null);\n\n\n\tuseFrame(() => {\n\t\tif (sphereRef.current) {\n\t\t\treturn sphereRef.current.rotation.y = sphereRef.current.rotation.y + 0.003\n\t\t}\n\t});\n\n\tconst setPosition = useCallback(() => {\n\t\tif (sphereState.mountAnimating) {\n\t\t\treturn outPosition\n\t\t} else {\n\t\t\tif (sphereState.hold) {\n\t\t\t\treturn outPosition\n\t\t\t} else {\n\t\t\t\treturn inPosition\n\t\t\t}\n\t\t}\n\t}, [inPosition, sphereState, outPosition])\n\n\tconst pointerUpHandler = useCallback(() => {\n\t\tif (sphereRef.current.position.z >= breakPoint) {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: true,\n\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t} else {\n\t\t\tsetSphereState(prev => {\n\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\thold: false,\n\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t}\n\t\t\t\treturn updated\n\t\t\t})\n\t\t}\n\t}, [setSphereState, breakPoint, sphereState])\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1600; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = radius * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = radius * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = radius * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [radius])\n\n\tconst sphereAnimationProps = useSpring({\n\t\tconfig: { mass: 1.8, tension: 84, friction: 22, clamp: true },\n\t\tpointsPosition: setPosition(),\n\t\topacity: sphereState.mountAnimating ? 0 : 1,\n\t\tonFrame: (arg: any) => {\n\t\t\tif (sphereRef.current.position.z > 0 && sphereRef.current.position.z < 50) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetEmailVisible(() => true)\n\t\t\t\t\tsetInstructionsVisible(() => true)\n\t\t\t\t} else {\n\t\t\t\t\tsetEmailVisible(() => false);\n\t\t\t\t\tsetInstructionsVisible(() => false)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRest: (arg: any) => {\n\t\t\tconsole.log(sphereState);\n\t\t\tif (outPosition.every((position: number, index: number) => {\n\t\t\t\tif (!sphereState.mountAnimating) {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\treturn sphereRef.current.position.x === position\n\t\t\t\t\t} else if (index === 1) {\n\t\t\t\t\t\treturn sphereRef.current.position.y === position\n\t\t\t\t\t} else if (index === 2) {\n\t\t\t\t\t\treturn sphereRef.current.position.z === position\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}) && sphereState.direction === 'forwards') {\n\t\t\t\tsetColorShowActive((prev) => prev ? prev : true);\n\t\t\t\tsetSphereState((prev) => {\n\t\t\t\t\treturn { ...prev, direction: 'backwards'}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (sphereRef.current) {\n\t\t\tsphereRef.current.material.size = defaultPointSize.current / Math.tan( ( Math.PI / 180 ) * fov / 2 )\n\t\t}\n\t}, [fov])\n\n\tuseEffect(() => {\n\t\tif (size.height && camera) {\n\t\t\tcamera.lookAt(0, (-size.height / 5), 0);\n\t\t}\n\t}, [size, camera])\n\n\tuseEffect(() => {\n\t\tsetSphereState(prev => {\n\t\t\tif (prev.mountAnimating) {\n\t\t\t\treturn {\n\t\t\t\t\t...prev,\n\t\t\t\t\tmountAnimating: false\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn prev\n\t\t\t}\n\t\t})\n\t}, [setSphereState])\n\n\t\n\treturn (\n\t\t<group>\n\t\t\t<a.mesh\n\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\tref={hemisphereRef}\n\t\t\t\tonPointerDown={() => setSphereState(prev => {\n\t\t\t\t\tconst updated: typeof sphereState = {\n\t\t\t\t\t\thold: true,\n\t\t\t\t\t\tdirection: \"forwards\",\n\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t}\n\t\t\t\t\treturn updated\n\t\t\t\t})}\n\t\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t\tposition={sphereAnimationProps.circlePosition}\n\t\t\t>\n\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\targs={[130, 32, 32, 0, 2*Math.PI, 0, 0.7 * Math.PI]}\n\t\t\t\t/>\n\t\t\t\t<meshBasicMaterial attach='material' transparent={true} opacity={0} side={DoubleSide} />\n\t\t\t</a.mesh>\n\t\t\t<a.points \n\t\t\t\tref={sphereRef}\n\t\t\t\t// ref={sphereRef}\n\t\t\t\tposition={sphereAnimationProps.pointsPosition}\n\t\t\t\t// scale={[1,1,1]}\n\t\t\t>\t\n\t\t\t\t<geometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\tvertices={vertices}\n\t\t\t\t/>\n\t\t\t\t<a.pointsMaterial\n\t\t\t\t\tattach='material'\n\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\tsize={1.7}\n\t\t\t\t\topacity={sphereAnimationProps.opacity}\n\t\t\t\t/>\n\t\t\t</a.points>\n\t\t</group>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tPointerEvent,\n\tuseEffect,\n\tuseRef,\n\tuseState\n} from 'react';\n\n// controlling overflowed span components\n// on chapter change -- animate to next \n\ninterface ColorShowProps {\n\tchapterIndex: number,\n\tcolorShowActive: boolean,\n\tsetColorShowActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\tmountAnimating: boolean;\n\t}>>\n\tdarkMode: Boolean\n}\n\nexport const ColorShow: FunctionComponent<ColorShowProps> = ({\n\tchapterIndex,\n\tcolorShowActive,\n\tsetColorShowActive,\n\tsetChapterIndex,\n\tsetSphereState,\n\tdarkMode\n}) => {\n\t// use chapter index to determine which slide to show\n\t// determine swipe direction & length\n\tconst container = useRef<HTMLDivElement>(null);\n\tlet [transitioning, setTransitioning] = useState<boolean>(false);\n\tlet [initialized, setInitialized] = useState<boolean>(false);\n\tlet [pointerState, setPointerState] = useState<any>({\n\t\txStart: null,\n\t\tyStart: null,\n\t\tyTravel: null,\n\t\txTravel: null,\n\t})\n\n\tconst backgroundColors = useRef<any>({\n\t\tlightMode: ['#E4F0FA', '#D64773', '#CBCBCB', '#000000'],\n\t\tdarkMode: ['#000000', '#D64773', '#E4F0FA', '#F9FAFC']\n\t})\n\n\tconst arrowColors = useRef<any>({\n\t\tlightMode: ['#6E81A0', '#FFFFFF', '#D64773', '#CBCBCB'],\n\t\tdarkMode: ['#6E81A0', '#000000', '#D64773', '#009CDF']\n\t})\n\n\tlet [backgroundColor, setBackgroundColor] = useState<string>(backgroundColors.current.lightMode[chapterIndex]);\n\tlet [arrowColor, setArrowColor] = useState<string>(arrowColors.current.lightMode[chapterIndex])\n\n\tconst getActiveSlideIndex = (): number => {\n\t\tif (container.current) {\n\t\t\tlet active = -1;\n\t\t\tconst slides = container.current.children;\n\t\t\tfor (let i = 0; i < slides.length; i++) {\n\t\t\t\tif (!slides[i].classList.contains('out-down') && !slides[i].classList.contains('out-up')) {\n\t\t\t\t\tactive = i\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn active\n\t\t}\n\t\treturn -1\n\t}\n\n\tconst pointerDownHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst updated = {\n\t\t\t\txStart: clientX,\n\t\t\t\tyStart: clientY,\n\t\t\t}\n\t\t\treturn { ...prev, ...updated}\n\t\t})\n\t}\n\n\tconst pointerMoveHandler = (e: PointerEvent) => {\n\t\tconst {\n\t\t\tclientX,\n\t\t\tclientY\n\t\t} = e\n\t\tsetPointerState((prev: any) => {\n\t\t\tconst yTravel = prev.yStart ? prev.yStart - clientY : null;\n\t\t\tconst xTravel = prev.xStart ? clientX - prev.xStart : null;\n\t\t\treturn { ...prev, yTravel, xTravel }\n\t\t})\n\t}\n\n\tconst pointerUpHandler = () => {\n\t\tsetPointerState(() => ({\n\t\t\txTravel: null,\n\t\t\tyTravel: null,\n\t\t\txStart: null,\n\t\t\tyStart: null,\n\t\t}))\n\t}\n\n\tuseEffect(() => {\n\t\tconst next = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active >= 0 && active < container.current.children.length - 2) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\t// change background color -- account for dark mode\n\t\t\t\t\t\tnextSlide.classList.remove('out-down');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst back = () => {\n\t\t\tif (container.current) {\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tif (active > 0) {\n\t\t\t\t\tsetTransitioning(() => true);\n\t\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\t\t\t\t\t\n\t\t\t\t\tconst nextSlide = container.current.children[chapterIndex];\n\t\t\t\t\tconst nextSlideLastSpan = nextSlide.children[nextSlide.children.length - 1];\n\t\t\t\t\tconst nextSlideTransitionTarget = nextSlideLastSpan.children[0]\n\t\t\t\t\t\n\t\t\t\t\t// Because of transitionDelay\n\t\t\t\t\tconst activeCb = () => {\n\t\t\t\t\t\tnextSlide.classList.remove('out-up');\n\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[chapterIndex]\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[chapterIndex]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\t\tconst nextCb = () => {\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tnextSlideTransitionTarget.removeEventListener('transitionend', nextCb);\n\t\t\t\t\t}\n\t\t\t\t\tnextSlideTransitionTarget.addEventListener('transitionend', nextCb);\n\t\t\t\t\t\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (chapterIndex >= 0 && colorShowActive && initialized) {\n\t\t\tif (getActiveSlideIndex() < chapterIndex) {\n\t\t\t\tconsole.log('next')\n\t\t\t\tnext();\n\t\t\t} else if (getActiveSlideIndex() > chapterIndex) {\n\t\t\t\tconsole.log('back')\n\t\t\t\tback();\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, colorShowActive, initialized, darkMode])\n\n\tuseEffect(() => {\n\t\tif (darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.darkMode[0])\n\t\t} else if (!darkMode && !initialized) {\n\t\t\tsetBackgroundColor(() => backgroundColors.current.lightMode[0])\n\t\t}\n\t}, [darkMode, initialized])\n\t\n\tuseEffect(() => {\n\t\tconst reset = () => {\n\t\t\tif (container.current) {\n\t\t\t\t// console.log(colorShowActive);\n\t\t\t\tsetTransitioning(() => true);\n\t\t\t\tconst active = getActiveSlideIndex();\n\t\t\t\tconst activeSlide = container.current.children[active]\n\t\t\t\tconst activeSlideLastSpan = activeSlide.children[activeSlide.children.length - 1];\n\t\t\t\tconst activeSlideTransitionTarget = activeSlideLastSpan.children[0];\n\n\t\t\t\tlet containerCb = () => {\n\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\tsetSphereState(prev => {\n\t\t\t\t\t\t\tconst updated: any = {\n\t\t\t\t\t\t\t\thold: false,\n\t\t\t\t\t\t\t\tdirection: \"backwards\",\n\t\t\t\t\t\t\t\tmountAnimating: prev.mountAnimating\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn updated\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (container.current) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < container.current.children.length - 1; i++) {\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.remove('out-up');\n\t\t\t\t\t\t\t\t\tcontainer.current.children[i].classList.add('out-down');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor((prev) => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn backgroundColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tsetArrowColor(() => {\n\t\t\t\t\t\t\t\t\tif (darkMode) {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.darkMode[0]\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn arrowColors.current.lightMode[0]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tsetInitialized(() => false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 1000)\n\t\t\t\t\t\tcontainer.current.removeEventListener('transitionend', containerCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontainer.current.addEventListener('transitionend', containerCb);\n\n\t\t\t\tlet activeCb = () => {\n\t\t\t\t\tif (container.current) {\t\n\t\t\t\t\t\tsetTransitioning(() => false);\n\t\t\t\t\t\tcontainer.current.classList.remove('active');\n\t\t\t\t\t\tactiveSlideTransitionTarget.removeEventListener('transitionend', activeCb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tactiveSlideTransitionTarget.addEventListener('transitionend', activeCb);\n\n\t\t\t\tif (active === 0) {\n\t\t\t\t\tactiveSlide.classList.add('out-down');\n\t\t\t\t} else {\n\t\t\t\t\tactiveSlide.classList.add('out-up');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tconst init = () => {\n\t\t\tif (container.current) {\n\t\t\t\tcontainer.current.classList.add('active');\n\t\t\t\tcontainer.current.children[0].classList.remove('out-down');\n\t\t\t\tsetInitialized(() => true);\n\t\t\t}\n\t\t}\n\n\t\tif (colorShowActive && !initialized) {\n\t\t\tconsole.log('init')\n\t\t\tinit();\n\t\t} else if (!colorShowActive && initialized) {\n\t\t\treset();\n\t\t}\n\t}, [colorShowActive, initialized, setSphereState, setChapterIndex, darkMode])\n\n\tuseEffect(() => {\n\t\tif (pointerState.yTravel > 0 && pointerState.yTravel >= 100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current) {\n\t\t\t\t\tif (prev < container.current.children.length - 2 && !transitioning) {\n\t\t\t\t\t\treturn prev + 1\n\t\t\t\t\t} else if (prev === container.current.children.length -  2) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t} else if (pointerState.yTravel < 0 && pointerState.yTravel <= -100) {\n\t\t\tsetChapterIndex(prev => {\n\t\t\t\tif (container.current && !transitioning) {\n\t\t\t\t\tif (prev > 0) {\n\t\t\t\t\t\treturn prev - 1\n\t\t\t\t\t} else if (prev === 0) {\n\t\t\t\t\t\tsetColorShowActive(() => false)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t\tsetPointerState(() => ({\n\t\t\t\txTravel: null,\n\t\t\t\tyTravel: null,\n\t\t\t\txStart: null,\n\t\t\t\tyStart: null,\n\t\t\t}))\n\t\t}\n\t}, [pointerState, setChapterIndex, transitioning, setColorShowActive])\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"ColorShow grid\"\n\t\t\tref={container}\n\t\t\tonPointerDown={(e: PointerEvent) => pointerDownHandler(e)}\n\t\t\tonPointerMove={(e: PointerEvent) => pointerMoveHandler(e)}\n\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\tstyle={{ background: backgroundColor }}\n\t\t>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#E066DB' : '#334669'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>The most dangerous phrase</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>in language is 'It's always</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>been done that way'\"</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<p style={{ color: darkMode ? '#FFFFFF' : '#334669'}}>Admiral Grace Hopper</p>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#000000' : '#FFFFFF'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Andy Mag is an experiential</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>magazine that enables</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.1s'}}>\n\t\t\t\t\t\t<h4>readers to interact (engage)</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.15s'}}>\n\t\t\t\t\t\t<h4>with diverse themes and </h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.2s'}}>\n\t\t\t\t\t\t<h4>ideas.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: '#D64773'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Because a great story is</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h4>worth remembering.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"ColorShowText out-down\" style={{ color: darkMode ? '#009CDF' : '#CBCBCB'}}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h4>Subscribe to Andy Mag for</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t<h4>updates.</h4>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"Arrows\"\n\t\t\t\tstyle={{ opacity: colorShowActive ? 1 : 0 }}\n\t\t\t>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor}/>\n\t\t\t\t</svg>\n\t\t\t\t<svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.3691 6.74592C11.757 6.35382 11.7536 5.72383 11.3615 5.33594L6.74686 0.770747C6.35477 0.382855 5.72478 0.386251 5.33688 0.778347L0.771692 5.39302C0.3838 5.78512 0.387195 6.41511 0.779292 6.803C1.17139 7.19089 1.80138 7.1875 2.18927 6.7954L6.0583 2.89449L9.95916 6.75352C10.3513 7.14141 10.9912 7.12796 11.3691 6.74592Z\" fill={arrowColor} />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, { FunctionComponent, useState } from 'react'\nimport { useSpring, animated } from 'react-spring';\n\n// email form should add email to mailing list on directmailmac \n// on success there should be some indication on the frontend -- turns green with a success message\n// on failure there should be some indication on the frontend -- turns red with an error message\n\n// make an api call to directmailmac with the email address\ninterface EmailProps {\n\tdarkMode: Boolean,\n}\n\nexport const Email: FunctionComponent<EmailProps> = ({ darkMode }) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\tconst emailInputProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tborderBottom: darkMode ? '1.5px solid #FFFFFF' : '1.5px solid #000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst submitButtonProps = useSpring({\n\t\tbackground: darkMode ? '#754AAD' : '#EE84FF',\n\t\t// boxShadow: darkMode ? 'inset 0px 0px 1px 0px #FFFFFF' : 'inset 0px 0px 2px 1px #FFFFFF',\n\t\tboxShadow: darkMode ? '21px 17px 45px rgba(14, 28, 33, .8)' : '8px 8px 24px rgba(176, 195, 210, .8)',\n\t\tcolor: darkMode ? '#FFFFFF' : '#2E476E',\n\t\timmediate: key => key === 'boxShadow'\n\t})\n\n\treturn (\n\t\t// if null do nothing, if false show fail, if true show success\n\t\t<form onSubmit={submitHandler} className={success ? 'Email success' : (success === 'false' ? 'Email fail' : 'Email')}>\n\t\t\t<animated.input className={darkMode ? 'darkmode' : ''} style={emailInputProps} type=\"email\" value={email} placeholder='email' onChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t<animated.input style={submitButtonProps} type=\"submit\" value=\"Subscribe\"/>\n\t\t</form>\n\t)\n}\n\n// what is going on? Requesting data from directmailmac via fetch on the frontend is being blocked\n// potentially because I'm requesting from my localhost which is identified as the origin, making a \n// request from the localhost to directmail is defined as a cross-origin request,\n\n// Wrong, for now, -- the preflight OPTIONS request that the browser sends to the server is returning with a \n// 401. This may be a bug on their server configs. However, if it is the case I still don't know if \n// a cross-origin request from localhost is allowed/will work. Even then, I shouldn't be exposing the \n// API key to the frontend. So I will have to create a server folder and configure a quick server to\n// request to from the app, which then will post request to the API, responding to the frontend with a success -- \n// allowing the component to make necessary changes to styling.","import React, { FunctionComponent } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Email } from './Email';\n\ninterface MobileEmailFormProps {\n\tprops?: any,\n\temailVisible: Boolean,\n\tdarkMode: Boolean,\n\tsetDarkMode: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereState: {\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\t// position: [number, number, number] | null;\n\t},\n}\n\nexport const MobileEmailForm: FunctionComponent<MobileEmailFormProps> = ({ sphereState, emailVisible, darkMode, setDarkMode }) => {\n\tconst animationProps = useSpring({\n\t\tconfig: { mass: 1, friction: 20, clamp: true },\n\t\topacity: !emailVisible ? 0 : 1,\n\t\tbottom: !emailVisible ? -6 : 0,\n\t\tbackground: darkMode ? '#2E3138' : '#F9FAFC',\n\t\t// borderImage: darkMode ? 'linear-gradient(to top, #26282C, 70%, #363940) 1 0%' : 'linear-gradient(to right, #FFFFFF, #E5EFFA) 1 0%',\n\t\tboxShadow: darkMode ? '0px 4px 13px rgba(29, 30, 35, .9)' : '0px 14px 18px rgba(31, 36, 39, .75)',\n\t\timmediate: key => ['background', 'boxShadow'].includes(key)\n\t})\n\n\tconst textProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst buttonProps = useSpring({\n\t\t// border: darkMode ? '2px solid #FFFFFF' : '2px solid #000000',\n\t\tbackground: darkMode ? '#2C3036' : '#E6EEF8',\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tboxShadow: !darkMode ? '-4px -2px 10px rgba(255, 255, 255, 1), 4px 2px 18px rgba(170, 187, 201, 0.9)' : '-2px -1px 7px rgba(72, 78, 83, 0.75), 3px 1px 7px rgba(22, 26, 28, 0.9)',\n\t\tconfig: { duration: 130 },\n\t\timmediate: key => ['background', 'boxShadow'].includes(key)\n\t})\n\n\treturn (\n\t\t<animated.div className=\"MobileEmailForm\" style={animationProps}>\n\t\t\t<animated.p style={textProps}>Stay Updated</animated.p>\n\t\t\t<Email darkMode={darkMode} />\n\t\t\t<animated.button style={buttonProps} className=\"mode-switch\" onClick={() => setDarkMode(() => !darkMode)}>\n\t\t\t\t{ darkMode ? 'L' : 'D'}\n\t\t\t</animated.button>\n\t\t</animated.div>\n\t)\n}","import React, {\n\tFunctionComponent,\n\tuseState,\n\t// useMemo,\n\tuseRef,\n\tuseEffect\n} from 'react';\nimport { Canvas, useThree } from 'react-three-fiber';\n// import * as THREE from 'three/'\n\nimport { Sphere } from './Sphere2';\nimport { ColorShow } from './ColorShow';\nimport { MobileEmailForm } from './MobileEmailForm';\nimport { useSpring, animated } from 'react-spring';\nimport { PerspectiveCamera } from 'three';\n\nconst Camera = () => {\n\tconst camera = useRef<PerspectiveCamera | null>(null)\n\tconst { aspect, size, setDefaultCamera } = useThree()\n\tconst pixelToThreeUnitRatio = 1\n\tconst planeDistance = 0\n\tconst cameraDistance = 500\n\tconst distance = cameraDistance - planeDistance\n\tconst height = size.height / pixelToThreeUnitRatio\n\tconst halfFovRadians = Math.atan((height / 2) / distance)\n\tconst fov = 2 * halfFovRadians * (180/Math.PI)\n\tuseEffect(() => {\n\t\tif (camera.current) void setDefaultCamera(camera.current)\n\t}, [setDefaultCamera])\n\n\treturn <perspectiveCamera\n\t\tref={camera}\n\t\taspect={aspect}\n\t\tfov={fov}\n\t\t//   position={[0, viewport.height / 2 - 200, cameraDistance]}\n\t\tposition={[0, 0, cameraDistance]}\n\t\tonUpdate={self => self.updateProjectionMatrix()}\n\t/>\n  }\n\nexport const MobileAnimation: FunctionComponent = () => {\n\tconst scrollIndicatorPositions = useRef<number[]>([-1, 10, 22, 31.5]);\n\tconst [darkMode, setDarkMode] = useState<Boolean>(false);\n\tconst [chapterIndex, setChapterIndex ] = useState<number>(0);\n\tconst [colorShowActive, setColorShowActive] = useState<boolean>(false);\n\tconst [sphereState, setSphereState] = useState<{\n\t\thold: boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t\tmountAnimating: boolean\n\t}>({ hold: false, direction: 'backwards', mountAnimating: true});\n\tconst [emailVisible, setEmailVisible] = useState<Boolean>(false);\n\tconst [instructionsVisible, setInstructionsVisible ] = useState<boolean>(false);\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\n\tconst instructionsDivProps = useSpring({\n\t\topacity: instructionsVisible ? 1 : 0,\n\t\tconfig: { mass: 1, friction: 10, clamp: true },\n\t})\n\n\tconst instructionsTextProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\tbackgroundColor: darkMode ? '#FFFFFF' : '#000000',\n\t\ttop: scrollIndicatorPosition,\n\t\topacity: colorShowActive ? '1' : '0',\n\t\tconfig: { clamp: true }\n\t\t// config: { mass: 1, friction: 1, tension: 100, clamp: true }\n\t})\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\treturn (\n\t\t<div className=\"MobileAnimation\">\n\t\t\t<div className=\"logo\" onClick={() => {\n\t\t\t\tsetColorShowActive(() => false)\n\t\t\t}}>\n\t\t\t\t{ !darkMode ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' /> }\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<Canvas\n\t\t\t\tstyle={{ backgroundColor: darkMode ? '#26282C' : '#F9FAFC' }}\n\t\t\t\tclassName=\"Canvas\"\n\t\t\t>\n\t\t\t\t<Camera />\n\t\t\t\t<Sphere\n\t\t\t\t\tradius={135}\n\t\t\t\t\tsetInstructionsVisible={setInstructionsVisible}\n\t\t\t\t\tsetEmailVisible={setEmailVisible}\n\t\t\t\t\tinPosition={[0, 135, 0]}\n\t\t\t\t\tsphereState={sphereState}\n\t\t\t\t\toutPosition={[0, 60, 646]}\n\t\t\t\t\tsetSphereState={setSphereState}\n\t\t\t\t\tbreakPoint={468}\n\t\t\t\t\tsetColorShowActive={setColorShowActive}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t<ColorShow chapterIndex={chapterIndex} colorShowActive={colorShowActive} setColorShowActive={setColorShowActive} setChapterIndex={setChapterIndex} setSphereState={setSphereState} darkMode={darkMode} />\n\t\t\t<animated.div className=\"hold-icon\" style={instructionsDivProps}>\n\t\t\t\t{ !darkMode ? <img src=\"../assets/holdicon.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> : <img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> }\n\t\t\t\t<animated.p style={instructionsTextProps}>Press and hold to learn more about Andy Mag</animated.p>\n\t\t\t</animated.div>\n\t\t\t<MobileEmailForm\n\t\t\t\tsphereState={sphereState}\n\t\t\t\temailVisible={emailVisible}\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tsetDarkMode={setDarkMode}\n\t\t\t/>\n \t\t</div>\n\t)\n}","import React, { FunctionComponent } from 'react';\n\n// import { Email } from './Email';\n// import { MobileAnimation } from './MobileAnimation';\nimport { MobileAnimation } from './MobileAnimation2';\n\nexport const MobileApp: FunctionComponent = () => {\n\treturn (\n\t\t// <Email />\n\t\t<MobileAnimation />\n\t)\n}","import React, { FunctionComponent, useRef, createRef, useEffect, useCallback, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { useDidUpdate } from '../hooks/useDidUpdate';\n\ninterface DesktopTextProps {\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tchapterIndex: number | null\n\twheelThreshold: number\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n\t// orbMovingState: \"out-forward\" | \"out-backward\" | \"to-forward\" | \"to-backward\" | \"resting\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tsubscribeActive: boolean\n}\n\nexport const DesktopText: FunctionComponent<DesktopTextProps> = ({ \n\tchapterIndex,\n\tsetChapterIndex,\n\twheelThreshold,\n\tsetBackgroundColor,\n\tsetButtonShadow,\n\tsetOrbMovingState,\n\tsubscribeActive\n}) => {\n\tlet chapterRefs = useRef<React.RefObject<HTMLDivElement>[]>([createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>(), createRef<HTMLDivElement>()]);\n\tlet [textTransitioning, setTextTransitioning] = useState<'out-down' | 'out-up' | 'in' | null>(null)\n\n\tconst textAnimation = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tzIndex: subscribeActive ? -1 : 2,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\tconst reset = useCallback(() => {\n\t\t// remove all out classes to out down\n\t\tif (chapterRefs.current !== null) {\n\t\t\tchapterRefs.current.forEach((chapter, index) => {\n\t\t\t\tif (chapter.current !== null) {\n\t\t\t\t\tchapter.current.classList.remove('out-up');\n\t\t\t\t\tchapter.current.classList.add('out-down');\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [])\n\t\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tcurrent: chapter = null\n\t\t} = chapterRefs.current[0]\n\n\t\tchapter?.classList.remove('out-down')\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetBackgroundColor(() => '#231B1B')\n\t\t\tsetTimeout(reset, 1000);\n\t\t} else {\n\t\t\tif (chapterRefs.current !== null && chapterRefs.current[0].current !== null) {\n\t\t\t\tif (chapterRefs.current[0].current.classList.contains('out-down')) chapterRefs.current[0].current.classList.remove('out-down') \n\t\t\t}\n\t\t}\n\t}, [subscribeActive, setBackgroundColor, reset])\n\n\tuseDidUpdate(() => {\n\t\tif (chapterIndex !== null) {\n\t\t\tconst {\n\t\t\t\tcurrent: chapter = null\n\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\n\t\t\tsetTextTransitioning(() => 'in')\n\t\t\tchapter?.classList.remove('out-down', 'out-up')\n\t\t}\n\t}, [chapterIndex])\n\n\tconst wheelHandler = useCallback((event: React.WheelEvent<HTMLDivElement>) => {\n\t\tconst { deltaY } = event;\n\t\tif (textTransitioning === null) {\n\t\t\tif (Math.abs(deltaY) > wheelThreshold) {\n\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcurrent: chapter = null\n\t\t\t\t\t} = chapterRefs.current[chapterIndex]\n\t\t\t\t\tif (deltaY > 0 && chapterIndex < 3) {\n\t\t\t\t\t\tchapter?.classList.add('out-up');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-up')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t} else if (deltaY < 0 && chapterIndex > 0) {\n\t\t\t\t\t\tchapter?.classList.add('out-down');\n\t\t\t\t\t\tsetTextTransitioning(() => 'out-down')\n\t\t\t\t\t\tsetOrbMovingState(() => 'out')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [chapterIndex, wheelThreshold, textTransitioning, setOrbMovingState])\n\n\treturn (\n\t\t<animated.div className=\"Text grid\" style={textAnimation}>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t\tref={chapterRefs.current[0]}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>The most damaging phrase in language is 'It's</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>always been done that way'</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span className=\"spacer-top-1\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\t// set chapterIndex to next\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h2>- Admiral Grace Hopper</h2>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[1]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span><h2>Andy Mag is an experiential magazine that</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.06s'}}><h2>enables readers to interact (engage) with diverse</h2></span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span \n\t\t\t\t\t\tstyle={{ transitionDelay: '0.09s'}}\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>themes and ideas.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[2]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-up') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 3)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#95B1D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #779FD4, -1px -2px 7px #BAC4D2')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 1)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#D695C7')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Because a great story is worth remembering.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"chapter out-down\"\n\t\t\t\tref={chapterRefs.current[3]}\n\t\t\t\tonWheel={(e) => wheelHandler(e)}\n\t\t\t>\n\t\t\t\t<span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tonTransitionEnd={() => {\n\t\t\t\t\t\t\tif (textTransitioning === 'out-down') {\n\t\t\t\t\t\t\t\tsetChapterIndex(() => 2)\n\t\t\t\t\t\t\t\tsetBackgroundColor(() => '#9C95D6')\n\t\t\t\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px #877DD8, -1px -2px 7px #BAB7D3')\n\t\t\t\t\t\t\t} else if (textTransitioning === 'in') {\n\t\t\t\t\t\t\t\tsetTextTransitioning(() => null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t><h2>Subscribe to Andy Mag for updates.</h2></span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react';\n\nexport const useDidUpdate = (func: any, deps: Array<any>) => {\n    const didUpdate = useRef(false);\n\n    useEffect(() => {\n        if (didUpdate.current) func();\n        else didUpdate.current = true;\n    }, deps);\n}","// export default {}\nimport React, { FunctionComponent, useRef, useMemo, useState, useEffect, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { useFrame, useThree } from 'react-three-fiber';\nimport { a, useSpring } from 'react-spring/three';\n// import { useDidUpdate } from '../hooks/useDidUpdate';\nimport { Box3 } from 'three';\nimport { DoubleSide } from 'three/';\n// import { Sphere } from './Sphere';\n\ninterface OrbProps {\n\tpointerPosition: [number | null, number | null]\n\tchapterIndex: number\n\torbMovingState: \"out\" | \"to\" | \"resting\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\"\n\tsetOrbMovingState: React.Dispatch<React.SetStateAction<\"out\" | \"resting\" | \"to\" | \"intersecting\" | \"in\" | \"subscribe\" | \"subscribe_hold\" | \"at_threshold\">>\n\tresetPointer: () => void\n\tsubscribeActive: boolean\n\tsetSubscribeActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetEmailActive: React.Dispatch<React.SetStateAction<boolean>>\n\tsetOrbHold: React.Dispatch<React.SetStateAction<boolean>>\n\torbHold: boolean\n\tsetScrollIndicatorHeight: React.Dispatch<React.SetStateAction<number>>\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number>>\n\tsetBackgroundColor: React.Dispatch<React.SetStateAction<string>>\n\tsetButtonShadow: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport const Orb: FunctionComponent<OrbProps> = ({\n\tpointerPosition,\n\tchapterIndex,\n\torbMovingState,\n\tresetPointer,\n\tsetOrbMovingState,\n\tsubscribeActive,\n\tsetSubscribeActive,\n\tsetEmailActive,\n\tsetOrbHold,\n\torbHold,\n\tsetScrollIndicatorHeight,\n\tsetChapterIndex,\n\tsetBackgroundColor,\n\tsetButtonShadow\n}) => {\n\tconst { viewport } = useThree();\n\tconst orbRef = useRef<THREE.Points | null>(null)\n\tconst previousPosition = useRef<[number, number, number] | null>(null)\n\tconst closestSide = useRef<string | null>(null)\n\tconst subscribePosition = useRef<[number, number, number]>([viewport.width < 1280 ? -220 : -260, 0, 0]);\n\n\tconst orbMask = useRef<any>(null);\n\tconst orbMaskSphereBbox = useRef<THREE.Sphere>(new THREE.Sphere()) // position dependent on orbMask position\n\n\tconst rectPositions = useRef<any>([\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,59,0],\n\t\t\t\tgeometry: [690, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,6,0],\n\t\t\t\tgeometry: [415, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-60,0],\n\t\t\t\tgeometry: [355, 26, 0],\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: [0,51,0],\n\t\t\t\tgeometry: [647, 26, 0]\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,-1,0],\n\t\t\t\tgeometry: [748, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: [0,-51,0],\n\t\t\t\tgeometry: [272, 26, 0]\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [682, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttextRef1: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t\ttextRef2: {\n\t\t\t\tposition: [0,0,0],\n\t\t\t\tgeometry: [537, 26, 0]\n\t\t\t},\n\t\t\ttextRef3: {\n\t\t\t\tposition: null,\n\t\t\t\tgeometry: undefined\n\t\t\t},\n\t\t},\n\t]);\n\n\t// this is causing bug: on viewport change position of orb is changing\n\t// const orbPositions = useMemo<any>(() => {\n\t// \tlet radius = 200;\n\t// \tif (viewport.width >= 1280) radius = 240\n\t// \treturn [\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t// \t\t\tstart: [0,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [-250,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t// \t\t\tstart: [50,0,0]\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t// \t\t\tstart: [100,0,0]\n\t// \t\t},\n\t// \t]\n\t// }, [viewport])\n\tconst orbPositions = useMemo<any>(() => {\n\t\tlet radius = 200;\n\t\tif (viewport.width >= 1280) radius = 240\n\t\treturn [\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 100, -viewport.height / 2 - radius, 0],\n\t\t\t\tstart: [0,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [-viewport.width / 2 + 180, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [-250,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 + 180, -viewport.height / 2 - 180, 0],\n\t\t\t\tstart: [50,0,0]\n\t\t\t},\n\t\t\t{\n\t\t\t\tpre: [viewport.width / 2 - 200, viewport.height / 2 + radius, 0],\n\t\t\t\tstart: [100,0,0]\n\t\t\t},\n\t\t]\n\t}, [])\n\n\tconst orbPositionConfigs = useRef<any>({\n\t\tresting: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tintersecting: undefined,\n\t\tout: {\n\t\t\tmass: 5,\n\t\t\tfriction: 4.5,\n\t\t\tclamp: true,\n\t\t},\n\t\tto: {\n\t\t\tduration: 1\n\t\t},\n\t\tin: {\n\t\t\tmass: 1000,\n\t\t\tfriction: 1400,\n\t\t\tclamp: false\n\t\t},\n\t\tsubscribe: {\n\t\t\ttension: 120,\n\t\t\tclamp: true\n\t\t},\n\t\tsubscribe_hold: {\n\t\t\tmass: 70,\n\t\t\t// friction: 50,\n\t\t\ttension: 100,\n\t\t\tclamp: true\n\t\t\t// duration: 600\n\t\t},\n\t\tat_threshold: {\n\t\t\tduration: 600\n\t\t}\n\t})\n\n\t// chapter rects\n\n\tconst textRef1 = useRef<any>(null);\n\tconst textBbox1 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef2 = useRef<any>(null);\n\tconst textBbox2 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst textRef3 = useRef<any>(null);\n\tconst textBbox3 = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst subscribeRef = useRef<any>(null);\n\tlet subscribeBbox = useRef<Box3>(new Box3(new THREE.Vector3(), new THREE.Vector3()));\n\n\tconst [orbScale, setOrbScale] = useState<[number, number, number] | null>(null)\n\tconst [orbPosition, setOrbPosition] = useState<[number,number,number] | null>(orbPositions[chapterIndex].pre)\n\tconst [isIntersecting, setIsIntersecting] = useState<boolean>(orbMovingState === 'intersecting' ? true : false);\n\tconst [orbOpacity, setOrbOpacity] = useState<number>(1);\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1800; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = 200 * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = 200 * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = 200 * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [])\n\n\tconst getOrbPosition = useCallback(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tconst currentPosition = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z];\n\t\t\tconst setPosition = orbPosition;\n\t\t\tlet match;\n\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => {\n\t\t\t\t\t// if the coord is within 5 units away in any direction return true for that direction\n\t\t\t\t\treturn Math.abs(coord - setPosition[index]) < 8\n\t\t\t\t}) : false\n\t\t\t} else {\n\t\t\t\tmatch = setPosition ? currentPosition.every((coord, index) => coord === setPosition[index]) : false;\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\tswitch (orbMovingState) {\n\t\t\t\t\tcase 'to':\n\t\t\t\t\t\treturn 'pre'\n\t\t\t\t\tcase 'subscribe':\n\t\t\t\t\t\treturn 'subscribe'\n\t\t\t\t\tcase 'at_threshold':\n\t\t\t\t\t\treturn 'at_threshold'\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn false\n\t}, [orbMovingState, orbPosition])\n\n\tconst { position, opacity, transparent } = useSpring({\n\t\tposition: orbPosition,\n\t\topacity: orbOpacity,\n\t\ttransparent: 0,\n\t\tconfig: isIntersecting ? orbPositionConfigs.current.intersecting : orbPositionConfigs.current[orbMovingState],\n\t\tonFrame: ({ opacity }: { opacity: number }) => {\n\t\t\tconst match = getOrbPosition();\n\t\t\tif (match === 'pre') {\n\t\t\t\tsetSubscribeActive((prev) => {\n\t\t\t\t\tif (prev === true) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn false\n\t\t\t\t})\n\t\t\t\tsetScrollIndicatorHeight(() => 0)\n\t\t\t\tsetOrbMovingState(() => 'in');\n\t\t\t\tsetOrbPosition(() => orbPositions[chapterIndex].start);\n\t\t\t} else if (match === 'subscribe') {\n\t\t\t\tsetEmailActive(() => true)\n\t\t\t} else if (match === 'at_threshold') {\n\t\t\t\tif (opacity === 0) {\n\t\t\t\t\t// do not set subscribe back to active until orb is at pre position\n\t\t\t\t\tsetChapterIndex(() => 0)\n\t\t\t\t\tsetOrbMovingState(() => 'to')\n\t\t\t\t\tsetEmailActive(() => false)\n\t\t\t\t\tsetOrbHold(() => false)\n\t\t\t\t\tsetOrbPosition(() => orbPositions[0].pre)\n\t\t\t\t\tsetBackgroundColor(() => '#D695AB')\n\t\t\t\t\tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n\tconst autoRotateOrb = useCallback((number: number) => {\n\t\tif (orbRef.current !== null) {\n\t\t\torbRef.current.rotation.y += number\n\t\t}\n\t}, [])\n\n\tconst computeBoundingAreas = useCallback(() => {\n\t\tif (orbMask.current !== null) orbMask.current.geometry.computeBoundingSphere();\n\t\tif (textRef1.current !== null) textRef1.current.geometry.computeBoundingBox();\n\t\tif (textRef2.current !== null) textRef2.current.geometry.computeBoundingBox();\n\t\tif (textRef3.current !== null) textRef3.current.geometry.computeBoundingBox();\n\t\tif (subscribeRef.current !== null) subscribeRef.current.geometry.computeBoundingBox();\n\t}, [])\n\n\tconst updateOrbMaskSphereBboxRadius = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) {\n\t\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius;\n\t\t\t} else if (viewport.width >= 1280) {\n\t\t\t\torbMaskSphereBbox.current.radius = orbMask.current.geometry.boundingSphere.radius + 40;\n\t\t\t}\n\t\t}\n\t}, [viewport])\n\n\tconst updateOrbMaskSphereBboxCenter = useCallback(() => {\n\t\tif (orbMaskSphereBbox.current !== null) orbMaskSphereBbox.current.center = new THREE.Vector3(orbMask.current.position.x, orbMask.current.position.y, orbMask.current.position.z)\n\t}, [])\n\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetBackgroundColor(() => '#D695AB')\n\t// \tsetButtonShadow(() => '1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\t// \tsetOrbOpacity(() => 0)\n\t// \tsetChapterIndex(() => 0)\n\t// \tsetSubscribeActive(() => false)\n\t// \tsetOrbMovingState(() => 'out')\n\t// \tsetEmailActive(() => false)\n\t// }, [setChapterIndex, setBackgroundColor, setButtonShadow, setOrbOpacity, setSubscribeActive, setEmailActive, setOrbMovingState])\n\t// const atHoldThresholdAutomator = useCallback(() => {\n\t// \t// set orb opacity to 0, return to first chapter slide,\n\t// \tsetOrbMovingState(() => 'at_threshold');\n\t// }, [setOrbMovingState])\n\n\tconst getClosestSide = useCallback((): string | null => {\n\t\tif (orbRef.current !== null ) {\n\t\t\tconst distanceObj = {\n\t\t\t\tleft: orbRef.current.position.x + (0.5 * viewport.width),\n\t\t\t\tright: (0.5 * viewport.width) - orbRef.current.position.x,\n\t\t\t\ttop: (0.5 * viewport.height) - orbRef.current.position.y,\n\t\t\t\tbottom: orbRef.current.position.y + (0.5 * viewport.height)\n\t\t\t}\n\t\t\t\n\t\t\tconst min = Math.min(distanceObj.left, distanceObj.right, distanceObj.top, distanceObj.bottom);\n\n\t\t\tif (min === distanceObj.left) {\n\t\t\t\treturn 'left'\n\t\t\t} else if (min === distanceObj.right) {\n\t\t\t\treturn 'right'\n\t\t\t} else if (min === distanceObj.bottom) {\n\t\t\t\treturn 'bottom'\n\t\t\t} else if (min === distanceObj.top) {\n\t\t\t\treturn 'top'\n\t\t\t}\n\t\t}\n\t\treturn null\n\t}, [viewport])\n\n\tconst getTranslatedPointerPosition = useCallback(() => {\n\t\tlet position: [number, number, number] | null = null;\n\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\tconst x = pointerPosition[0] - window.innerWidth / 2;\n\t\t\tconst y = -pointerPosition[1] + window.innerHeight / 2;\n\t\t\tposition = [x, y, 0];\n\t\t}\n\t\treturn position\n\t}, [pointerPosition])\n\n\tconst isSphereIntersectingBox = useCallback((sphere: THREE.Sphere, box: Box3) => {\n\t\tvar x = Math.max(box.min.x, Math.min(sphere.center.x, box.max.x));\n\t\tvar y = Math.max(box.min.y, Math.min(sphere.center.y, box.max.y));\n\t\tvar z = Math.max(box.min.z, Math.min(sphere.center.z, box.max.z));\n\t  \n\t\tvar distance = Math.sqrt((x - sphere.center.x) * (x - sphere.center.x) +\n\t\t\t\t\t\t\t\t (y - sphere.center.y) * (y - sphere.center.y) +\n\t\t\t\t\t\t\t\t (z - sphere.center.z) * (z - sphere.center.z));\n\t\t\n\t\treturn distance < sphere.radius;\n\t}, [])\n\n\tconst moveOut = useCallback(() => {\n\t\t// using the closest side, translate out of view\n\t\tlet radius: number;\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tradius = 200;\n\t\t} else {\n\t\t\tradius = 240;\n\t\t}\n\n\t\tsetOrbPosition((prev) => {\n\t\t\tif (prev !== null && orbRef.current !== null) {\n\t\t\t\tlet x = orbRef.current.position.x;\n\t\t\t\tlet y = orbRef.current.position.y;\n\t\t\t\tconst z = orbRef.current.position.z;\n\t\t\t\tif (closestSide.current === 'left') {\n\t\t\t\t\tx = (-0.5 * viewport.width) - radius;\n\t\t\t\t} else if (closestSide.current === 'bottom') {\n\t\t\t\t\ty = (-0.5 * viewport.height) - radius;\n\t\t\t\t} else if (closestSide.current === 'top') {\n\t\t\t\t\ty = (0.5 * viewport.height) + radius\n\t\t\t\t} else if (closestSide.current === 'right') {\n\t\t\t\t\tx = (0.5 * viewport.width) + radius;\n\t\t\t\t}\n\t\t\t\treturn [x,y,z]\n\t\t\t}\n\t\t\treturn null\n\t\t})\n\t}, [viewport])\n\n\tconst isOrbIntersecting = useCallback(() => {\n\t\treturn !subscribeActive ? isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox1.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, subscribeBbox.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox2.current) || isSphereIntersectingBox(orbMaskSphereBbox.current, textBbox3.current) : false\n\t}, [isSphereIntersectingBox, subscribeActive])\n\n\tuseEffect(() => {\n\t\tcomputeBoundingAreas();\n\t\t\n\t\tsubscribeBbox.current.setFromObject(subscribeRef.current);\n\t\t\n\t\tupdateOrbMaskSphereBboxRadius()\n\t\tupdateOrbMaskSphereBboxCenter();\n\t}, [computeBoundingAreas, updateOrbMaskSphereBboxRadius, updateOrbMaskSphereBboxCenter])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState(() => 'to');\n\t\tsetOrbPosition(() => orbPositions[chapterIndex].pre);\n\t\ttextBbox1.current.setFromObject(textRef1.current);\n\t\ttextBbox2.current.setFromObject(textRef2.current);\n\t\ttextBbox3.current.setFromObject(textRef3.current);\n\t}, [chapterIndex, setOrbMovingState, orbPositions])\n\n\tuseEffect(() => {\n\t\tif (viewport.width > 900 && viewport.width < 1280) {\n\t\t\tsetOrbScale(() => [1,1,1])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t} else {\n\t\t\tsetOrbScale(() => [1.2, 1.2, 1.2])\n\t\t\tupdateOrbMaskSphereBboxRadius();\n\t\t}\n\t}, [viewport, updateOrbMaskSphereBboxRadius])\n\n\tuseEffect(() => {\n\t\tif (orbMovingState === 'out') {\n\t\t\tmoveOut();\n\t\t\tresetPointer();\n\t\t} else if (orbMovingState === 'at_threshold') {\n\t\t\tsetOrbOpacity(() => 0);\n\t\t} else if (orbMovingState === 'to') {\n\t\t\tsetOrbOpacity((prev) => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [orbMovingState, moveOut, resetPointer])\n\n\tuseEffect(() => {\n\t\tif (subscribeActive) {\n\t\t\tsetOrbMovingState(() => 'subscribe')\n\t\t} else {\n\t\t\tsetOrbOpacity(prev => {\n\t\t\t\tif (prev === 0) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn prev\n\t\t\t})\n\t\t}\n\t}, [subscribeActive, setOrbMovingState])\n\n\tuseEffect(() => {\n\t\tsetOrbMovingState((prev) => {\n\t\t\tif (prev === 'subscribe' && orbHold === true) {\n\t\t\t\treturn 'subscribe_hold'\n\t\t\t} else if (prev === 'subscribe_hold' && orbHold === false) {\n\t\t\t\treturn 'subscribe'\n\t\t\t}\n\t\t\treturn prev\n\t\t})\n\t}, [orbHold, setOrbMovingState])\n \n\tuseFrame(() => {\n\t\tif (orbRef.current !== null) {\n\t\t\tautoRotateOrb(0.001);\n\n\t\t\t// update the orbMaskSphereBbox to the position of the orbMask\n\t\t\tupdateOrbMaskSphereBboxCenter();\n\n\t\t\t// calculate what side or is closest to\n\t\t\tclosestSide.current = getClosestSide();\n\n\t\t\t// logic for orb movement\n\t\t\tif (!isOrbIntersecting()) {\n\t\t\t\tsetIsIntersecting(() => false)\n\t\t\t\tpreviousPosition.current = [orbRef.current.position.x, orbRef.current.position.y, orbRef.current.position.z]\n\t\t\t\tif (orbMovingState === 'subscribe') {\n\t\t\t\t\tsetOrbPosition(() => {\n\t\t\t\t\t\tsubscribePosition.current = [viewport.width < 1280 ? -220 : -260, 0, 0];\n\t\t\t\t\t\treturn [viewport.width < 1280 ? -220 : -260, 0, 0]\n\t\t\t\t\t})\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'resting') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'resting') {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) return getTranslatedPointerPosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'in') {\n\t\t\t\t\tsetOrbPosition((prev) => {\n\t\t\t\t\t\t\tif (pointerPosition[0] !== null && pointerPosition[1] !== null) {\n\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'resting');\n\t\t\t\t\t\t\t\treturn getTranslatedPointerPosition();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t} else if (orbMovingState === 'subscribe_hold') {\n\t\t\t\t\tsetOrbPosition(() => [0, 0, 0])\n\t\t\t\t\t// get percentage of travel\n\t\t\t\t\tsetScrollIndicatorHeight((prev) => {\n\t\t\t\t\t\tif (orbRef.current !== null) {\n\t\t\t\t\t\t\t// percentage is 100 when origin is atleast 10 units away from origin\n\t\t\t\t\t\t\tif (subscribePosition.current[1] - orbRef.current.position.y < 1) {\n\t\t\t\t\t\t\t\tconst maxHeight = 47.2;\n\t\t\t\t\t\t\t\tconst x1 = subscribePosition.current[0];\n\t\t\t\t\t\t\t\tconst currentX = orbRef.current.position.x;\n\t\t\t\t\t\t\t\tlet percentage = 0\n\t\t\t\t\t\t\t\tif (currentX !== null) {\n\t\t\t\t\t\t\t\t\tpercentage = Math.abs(x1 - currentX) / Math.abs(x1)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// automator\n\t\t\t\t\t\t\t\tif (percentage === 1) {\n\t\t\t\t\t\t\t\t\t// atHoldThresholdAutomator();\n\t\t\t\t\t\t\t\t\tsetOrbMovingState(() => 'at_threshold');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn percentage * maxHeight\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetIsIntersecting(() => true)\n\t\t\t\tsetOrbPosition(() => previousPosition.current)\n\t\t\t}\n\t\t}\n\t})\t\n\t\n\treturn (\n\t\t<>\n\t\t\t<group\n\t\t\t>\n\t\t\t\t<a.mesh\n\t\t\t\t\tonPointerDown={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return true\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tonPointerUp={() => setOrbHold((prev) => {\n\t\t\t\t\t\tif (orbMovingState === 'subscribe' || orbMovingState === 'subscribe_hold') return false\n\t\t\t\t\t\treturn prev\n\t\t\t\t\t})}\n\t\t\t\t\tref={orbMask}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t>\n\t\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\targs={[200, 32, 32, 0, 2*Math.PI, 0, Math.PI]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t\tside={DoubleSide}\n\t\t\t\t\t/>\n\t\t\t\t</a.mesh>\n\t\t\t\t<a.points\n\t\t\t\t\tonPointerDown={() => setOrbHold(() => true)}\n\t\t\t\t\tonPointerUp={() => setOrbHold(() => false)}\n\t\t\t\t\tref={orbRef}\n\t\t\t\t\tscale={orbScale}\n\t\t\t\t\tposition={position}\n\t\t\t\t\t// opacity={orbAnimationProps.opacity}\n\t\t\t\t>\t\n\t\t\t\t\t<geometry\n\t\t\t\t\t\tattach='geometry'\n\t\t\t\t\t\tvertices={vertices}\n\t\t\t\t\t/>\n\t\t\t\t\t<a.pointsMaterial\n\t\t\t\t\t\tattach='material'\n\t\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t\tsize={2.5}\n\t\t\t\t\t\ttransparent={transparent}\n\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t/>\n\t\t\t\t</a.points>\n\t\t\t</group>\n\t\t\t<group>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef1}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef1.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef1.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef2}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef2.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef2.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={textRef3}\n\t\t\t\t\tposition={rectPositions.current[chapterIndex].textRef3.position}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={rectPositions.current[chapterIndex].textRef3.geometry}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t\t<mesh\n\t\t\t\t\tref={subscribeRef}\n\t\t\t\t\tposition={[0, -viewport.height / 2.65, 0]}\n\t\t\t\t>\n\t\t\t\t\t<boxGeometry\n\t\t\t\t\t\tattach=\"geometry\"\n\t\t\t\t\t\targs={[280, 50, 0]}\n\t\t\t\t\t/>\n\t\t\t\t\t<meshBasicMaterial \n\t\t\t\t\t\tattach=\"material\"\n\t\t\t\t\t\t// color=\"blue\"\n\t\t\t\t\t\ttransparent={true}\n\t\t\t\t\t\topacity={0}\n\t\t\t\t\t/>\n\t\t\t\t</mesh>\n\t\t\t</group>\t\t\t\n\t\t</>\n\t)\n\t\n}\n\t\n","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef, useEffect\n\t}\nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\n\ninterface DesktopEmailProps {\n\temailActive: boolean\n\torbHold: boolean\n}\n\nexport const Email: FunctionComponent<DesktopEmailProps> = ({\n\temailActive,\n\torbHold\n}) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\tlet [inputFocus, setInputFocus] = useState<boolean>(false);\n\tconst emailDiv = useRef<HTMLDivElement | null>(null)\n\n\tconst emailDivProps = useSpring({\n\t\topacity: orbHold ? 0 : 1,\n\t\tvisibility: orbHold ? 'hidden' : 'visible',\n\t\tconfig: {\n\t\t\tmass: 2,\n\t\t\tfriction: 2,\n\t\t\tclamp: true\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tif (emailDiv.current !== null) {\n\t\t\temailActive ? emailDiv.current.classList.add('active') : emailDiv.current.classList.remove('active')\n\t\t\tif (inputFocus) {\n\t\t\t\temailDiv.current.classList.add('focused') \n\t\t\t} else {\n\t\t\t\temailDiv.current.classList.remove('focused')\n\t\t\t}\n\t\t}\n\t}, [emailActive, inputFocus, email])\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\treturn (\n\t\t<animated.div className='DesktopEmail grid' ref={emailDiv} style={emailDivProps}>\n\t\t\t<form onSubmit={submitHandler} className={success ? 'desktopEmailWrapper Email success' : (success === 'false' ? 'desktopEmailWrapper Email fail' : 'desktopEmailWrapper Email')}>\n\t\t\t\t<span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h3>STAY UPDATED WITH THE</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t<span style={{ transitionDelay: '0.05s'}}>\n\t\t\t\t\t\t<h3>ANDY MAG NEWSLETTER</h3>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<label>\n\t\t\t\t\t<h4>Email</h4>\n\t\t\t\t</label>\n\t\t\t\t{ inputFocus ? <img className=\"submitIcon\" src=\"../assets/paper_plane_purple.svg\" alt=\"Submit\" /> : <img className=\"submitIcon\" src=\"../assets/paper_plane_white.svg\" alt=\"Submit\" /> }\n\t\t\t\t<input\n\t\t\t\t\tonFocus={() => setInputFocus(() => true)}\n\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\t\tif (email === undefined || email.length < 1) setInputFocus(() => false)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t\t{/* <input type=\"submit\" value=\"SUBSCRIBE\"/> */}\n\t\t\t</form>\n\t\t\t{/* <div className=\"hold-icon\">\n\t\t\t\t<img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/>\n\t\t\t\t<p>Press and hold to go back</p>\n\t\t\t</div> */}\n\t\t</animated.div>\n\t\t\n\t)\n}","import\n\tReact,\n\t{\n\t\tFunctionComponent,\n\t\tuseState,\n\t\tuseRef,\n\t\tuseEffect,\n\t\tuseCallback,\n\t} \nfrom 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Canvas } from 'react-three-fiber';\n\nimport { DesktopText } from './DesktopText';\n// import { DesktopOrb } from './DesktopOrb';\nimport { Orb } from './DesktopOrb3';\n// import { DesktopInstructions } from './DesktopInstructions'\nimport { Email } from './DesktopEmailForm';\n\ninterface OrbState {\n\torb_position: [number, number, number],\n\tmove_state: 'out' | 'in' | 'to' | 'rest',\n}\n\nexport const DesktopApp: FunctionComponent = () => {\n\tlet [chapterIndex, setChapterIndex] = useState<number>(0);\n\tlet [backgroundColor, setBackgroundColor] = useState<string>('#D695AB')\n\tlet [subscribeActive, setSubscribeActive] = useState<boolean>(false);\n\tlet [emailActive, setEmailActive] = useState<boolean>(false);\n\tlet [buttonShadow, setButtonShadow] = useState<string>('1px 2px 7px 0px #576F6F6F, -1px -2px 7px #A6D3D3D3')\n\tconst scrollIndicatorPositions = useRef<number[]>([0, 10, 19, 28.2]);\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tlet [scrollIndicatorHeight, setScrollIndicatorHeight] = useState<number>(0);\n\tlet [canvasViewport, setCanvasViewport] = useState<{width: number, height: number, factor: number} | null>(null)\n\tlet [orbMovingState, setOrbMovingState] = useState<'out' | 'resting' | 'to' | 'intersecting' | 'in' | 'subscribe' | 'subscribe_hold' | 'at_threshold'>('resting')\n\tlet [orbHold, setOrbHold] = useState<boolean>(false);\n\tlet [pointerPosition, setPointerPosition] = useState<[number | null, number | null]>([null, null])\n\t// console.log(scrollIndicatorHeight);\n\tlet wheelThreshold = useRef<number>(40);\n\tlet containerRef = useRef<HTMLDivElement>(null);\n\n\tconst scrollIndicatorAnimate = useSpring({\n\t\t// top: subscribeActive ? 'auto' : scrollIndicatorPosition,\n\t\ttop: !subscribeActive ? scrollIndicatorPosition : 'auto',\n\t\tbottom: subscribeActive ? 1 : 'auto',\n\t\theight: subscribeActive ? scrollIndicatorHeight : 19,\n\t\tconfig: { clamp: true },\n\t\tbackgroundColor: !subscribeActive ? 'black' : 'white',\n\t})\n\n\t// const instructionsProps = useSpring({\n\t// \topacity: orbHold ? 0 : 1\n\t// })\n\n\tuseEffect(() => {\n\t\tsetScrollIndicatorPosition(() => scrollIndicatorPositions.current[chapterIndex])\n\t}, [chapterIndex])\n\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerPosition(() => [null, null])\n\t}, [])\n\n\tconst subscribeButtonProps = useSpring({\n\t\topacity: subscribeActive ? 0 : 1,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 4,\n\t\t\tclamp: true,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName=\"DesktopAnimation\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: backgroundColor\n\t\t\t}}\n\t\t\tonPointerMove={(e) => {\n\t\t\t\tconst {\n\t\t\t\t\tclientX,\n\t\t\t\t\tclientY\n\t\t\t\t} = e;\n\t\t\t\tsetPointerPosition(() => {\n\t\t\t\t\treturn [clientX, clientY]\n\t\t\t\t})\n\t\t\t}}\n\t\t>\n\t\t\t<Canvas\n\t\t\t\tclassName=\"Orb\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t\torthographic\n\t\t\t\tcamera={{\n\t\t\t\t\tleft: canvasViewport ? -canvasViewport.width / 2 : undefined,\n\t\t\t\t\tright: canvasViewport ? canvasViewport.width / 2 : undefined,\n\t\t\t\t\ttop: canvasViewport ? canvasViewport.height / 2 : undefined,\n\t\t\t\t\tbottom: canvasViewport ? -canvasViewport.height / 2 : undefined,\n\t\t\t\t\tnear: 300,\n\t\t\t\t\tfar: -300\n\t\t\t\t}}\n\t\t\t>\t\n\t\t\t\t<Orb setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setChapterIndex={setChapterIndex} setScrollIndicatorHeight={setScrollIndicatorHeight} orbHold={orbHold} setOrbHold={setOrbHold} setEmailActive={setEmailActive} pointerPosition={pointerPosition} chapterIndex={chapterIndex} orbMovingState={orbMovingState} resetPointer={resetPointer} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} setSubscribeActive={setSubscribeActive} />\n\t\t\t</Canvas>\n\t\t\t<div className=\"logo\" onClick={() => setChapterIndex(() => 0)}>\n\t\t\t\t{ !subscribeActive ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' />}\n\t\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t</div>\n\t\t\t<DesktopText chapterIndex={chapterIndex} setChapterIndex={setChapterIndex} wheelThreshold={wheelThreshold.current} setBackgroundColor={setBackgroundColor} setButtonShadow={setButtonShadow} setOrbMovingState={setOrbMovingState} subscribeActive={subscribeActive} />\n\t\t\t<animated.div className=\"SubscribeButton\" style={subscribeButtonProps}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setSubscribeActive(() => true)}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: buttonShadow\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSUBSCRIBE\n\t\t\t\t</button>\n\t\t\t</animated.div>\n\t\t\t<div className=\"SocialMedia\">\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.snapchat.com/add/theandymag\"><img src=\"../assets/snapchat.svg\" alt=\"Snapchat\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/theandymag/\"><img src=\"../assets/instagram.svg\" alt=\"Instagram\" /></a>\t\t\t\n\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/theandymag_\"><img src=\"../assets/twitter.svg\" alt=\"Twitter\" /></a>\n\t\t\t</div>\n\t\t\t{/* <DesktopInstructions /> */}\n\t\t\t<Email orbHold={orbHold} emailActive={emailActive} />\n\t\t</div>\n\t)\n}","import React, { useEffect, useState, useCallback } from 'react';\n\nimport './styles/base.sass'\nimport { MobileApp } from './Components/MobileApp'\nimport { DesktopApp } from './Components/DesktopApp'\n\nfunction App() {\n\t\n\tlet [isMobile, setIsMobile] = useState<Boolean>(window.innerWidth <= 900);\n\n\tconst windowResizeHandler = useCallback(() => {\n\t\twindow.innerWidth <= 900 ? setIsMobile(true) : setIsMobile(false);\n\t}, [])\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', windowResizeHandler)\n\t}, [windowResizeHandler]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\tisMobile ? <MobileApp /> : <DesktopApp />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}