{"version":3,"sources":["Components/Sphere.tsx","Components/GradientShow2.tsx","hooks/useDidUpdate.tsx","Components/Email.tsx","Components/MobileEmailForm.tsx","Components/MobileAnimation.tsx","Components/MobileApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sphere","radius","startPosition","sphereState","setSphereState","setGradientActive","breakPoint","endPosition","setEmailVisible","setInstructionsVisible","sphereRef","useRef","hemisphereRef","currentPosition","sphereAnimationProps","useSpring","config","mass","tension","friction","clamp","pointsPosition","hold","circlePosition","onFrame","arg","current","direction","onRest","length","every","position","index","useFrame","rotation","y","pointerUpHandler","useCallback","vertices","useMemo","computedVertices","i","theta","THREE","randFloatSpread","phi","x","Math","sin","cos","z","push","map","v","mesh","PI","ref","onPointerDown","onPointerUp","attach","args","transparent","opacity","side","DoubleSide","points","color","size","GradientShow2","gradientActive","swipeThreshold","children","chapterConfigs","chapterIndex","setChapterIndex","darkMode","planeRef","undefined","containerRef","MAX_CHAPTERS","React","Children","toArray","MAX_TEXT_SHADOW","scrollIndicatorPositions","useState","active","initial_y_direction","x_start","y_start","y_travel","x_travel","swipePercentage","pointerState","setPointerState","textOpacity","setTextOpacity","textShadow","setTextShadow","textColor","setTextColor","lightColor","setLightColor","lightPosition","setLightPosition","lightRotation","planeColor","setPlaneColor","lightIntensity","setLightIntensity","scrollIndicatorPosition","setScrollIndicatorPosition","unmountLightColor","planeAnimation","useSpringThree","rectLightAnimation","intensity","coord","setTimeout","scrollIndicatorAnimate","backgroundColor","top","gradientContainerAnimation","zIndex","immediate","key","unmount","resetPointer","resetAnimationValues","pointerDownHandler","e","clientY","clientX","prevState","updatedValues","pointerMoveHandler","preventDefault","y_position","x_position","abs","useEffect","el","addEventListener","removeEventListener","absSwipePercentage","func","deps","didUpdate","useDidUpdate","div","className","style","items","from","update","enter","leave","props","cloneElement","rectAreaLight","width","height","lookAt","meshPhysicalMaterial","Email","success","setSuccess","email","setEmail","emailInputProps","borderBottom","duration","submitButtonProps","boxShadow","onSubmit","body","options","method","headers","JSON","stringify","fetch","process","then","res","json","data","console","log","statusCode","catch","error","input","type","value","placeholder","onChange","currentTarget","required","MobileEmailForm","emailVisible","setDarkMode","animationProps","bottom","includes","textProps","buttonProps","border","p","button","onClick","MobileAnimation","instructionsVisible","gradientConfig","instructionsDivProps","instructionsTextProps","src","alt","camera","MobileApp","App","window","innerWidth","isMobile","setIsMobile","windowResizeHandler","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.74180006.chunk.js","sourcesContent":["import React, { FunctionComponent, useRef, useCallback, useMemo } from 'react';\nimport * as THREE from 'three/';\nimport { useFrame } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three'\nimport { DoubleSide } from 'three/';\n\ninterface SphereProps {\n\tradius: number,\n\tsetInstructionsVisible: React.Dispatch<React.SetStateAction<boolean>>,\n\tsetEmailVisible: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereAnimationProps?: any,\n\tsetGradientActive: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t}>>\n\tsphereState: {\n\t\thold: Boolean,\n\t\tdirection: null | 'forwards' | 'backwards',\n\t},\n\tstartPosition: [number, number, number],\n\tendPosition: [number, number, number],\n\tbreakPoint: number,\n}\n\nexport const Sphere: FunctionComponent<SphereProps> = ({ radius, startPosition, sphereState, setSphereState, setGradientActive, breakPoint, endPosition, setEmailVisible, setInstructionsVisible }) => {\n\tconst sphereRef = useRef<THREE.Points | null>(null);\n\tconst hemisphereRef = useRef<THREE.Points | null>(null);\n\tconst currentPosition = useRef<[number, number, number]>(startPosition);\n\tconst sphereAnimationProps = useSpring({\n\t\tconfig: { mass: 1.8, tension: 84, friction: 22, clamp: true },\n\t\tpointsPosition: !sphereState.hold ? startPosition : endPosition,\n\t\tcirclePosition: !sphereState.hold ? startPosition : endPosition,\n\t\tonFrame: (arg: any) => {\n\t\t\tcurrentPosition.current = arg.pointsPosition\n\t\t\tif (currentPosition.current[2] > 0 && currentPosition.current[2] < 50) {\n\t\t\t\tif (sphereState.direction === 'backwards') {\n\t\t\t\t\tsetEmailVisible(() => true)\n\t\t\t\t\tsetInstructionsVisible(() => true)\n\t\t\t\t} else {\n\t\t\t\t\tsetEmailVisible(() => false);\n\t\t\t\t\tsetInstructionsVisible(() => false)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonRest: (arg: any) => { \n\t\t\tif (currentPosition.current.length === endPosition.length && currentPosition.current.every((position: number, index: number) => position === endPosition[index])) {\n\t\t\t\tsetGradientActive(() => true);\n\t\t\t}\n\t\t}\n\t})\n\n\tuseFrame(() => {\n\t\tif (sphereRef.current) {\n\t\t\treturn sphereRef.current.rotation.y = sphereRef.current.rotation.y + 0.003\n\t\t}\n\t});\n\n\tconst pointerUpHandler = useCallback(() => {\n\t\tif (currentPosition.current[2] >= breakPoint) {\n\t\t\tsetSphereState({\n\t\t\t\thold: true,\n\t\t\t\tdirection: 'forwards',\n\t\t\t});\n\t\t} else {\n\t\t\tsetSphereState({\n\t\t\t\thold: false,\n\t\t\t\tdirection: 'backwards',\n\t\t\t});\n\t\t}\n\t}, [setSphereState, breakPoint])\n\t\n\tconst vertices = useMemo(() => {\n\t\tconst computedVertices = [];\n\t\t\n\t\tfor (let i = 0; i < 1600; i++) {\n\n\t\t\tconst theta = THREE.MathUtils.randFloatSpread(360); \n\t\t\tconst phi = THREE.MathUtils.randFloatSpread(360);\n\t\t\t\n\t\t\tconst x = radius * Math.sin(theta) * Math.cos(phi);\n\t\t\tconst y = radius * Math.sin(theta) * Math.sin(phi);\n\t\t\tconst z = radius * Math.cos(theta);\n\n\t\t\tcomputedVertices.push([x, y, z]);\n\t\t}\n\t\treturn computedVertices.map(v => new THREE.Vector3(...v));\n\t}, [radius])\n\t\n\treturn (\n\t\t<group>\n\t\t\t<a.mesh\n\t\t\t\trotation={[-Math.PI / 2, 0, 0]}\n\t\t\t\tref={hemisphereRef}\n\t\t\t\tonPointerDown={() => setSphereState({\n\t\t\t\t\thold: true,\n\t\t\t\t\tdirection: 'forwards',\n\t\t\t\t})}\n\t\t\t\tonPointerUp={() => pointerUpHandler()}\n\t\t\t\tposition={sphereAnimationProps.circlePosition}\n\t\t\t>\n\t\t\t\t<sphereBufferGeometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\targs={[130, 32, 32, 0, 2*Math.PI, 0, 0.7 * Math.PI]}\n\t\t\t\t/>\n\t\t\t\t<meshBasicMaterial attach='material' transparent={true} opacity={0} side={DoubleSide} />\n\t\t\t</a.mesh>\n\t\t\t<a.points \n\t\t\t\tref={sphereRef}\n\t\t\t\t// ref={sphereRef}\n\t\t\t\tposition={sphereAnimationProps.pointsPosition}\n\t\t\t>\t\n\t\t\t\t<geometry\n\t\t\t\t\tattach='geometry'\n\t\t\t\t\tvertices={vertices}\n\t\t\t\t/>\n\t\t\t\t<pointsMaterial\n\t\t\t\t\tattach='material'\n\t\t\t\t\tcolor={new THREE.Color(0xCC37CC)}\n\t\t\t\t\t// sizeAttenuation={false}\n\t\t\t\t\t// map={sprite}\n\t\t\t\t\tsize={2}\n\t\t\t\t/>\n\t\t\t</a.points>\n\t\t</group>\n\t)\n}","import React, { FunctionComponent, useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useDidUpdate } from '../hooks/useDidUpdate'\nimport { Canvas } from 'react-three-fiber'\nimport { useSpring as useSpringThree, a as aThree } from 'react-spring/three'\nimport { useSpring, animated } from 'react-spring'\nimport * as THREE from 'three/';\nimport { Transition } from 'react-spring/renderprops';\n\ninterface GradientShowProps {\n\tprops?: any\n\tgradientActive: Boolean,\n\tswipeThreshold: number,\n\tchapterConfigs: any,\n\tchapterIndex: number | null,\n\tdarkMode: Boolean,\n\tsetChapterIndex: React.Dispatch<React.SetStateAction<number | null>>,\n\tsetGradientActive: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsetSphereState: React.Dispatch<React.SetStateAction<{\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t}>>\n\tchildren: React.ReactNode\n}\ninterface PointerState {\n\tactive: Boolean,\n\tinitial_y_direction: 'up' | 'down' | null\n\tx_start: number | null\n\ty_start: number | null\n\ty_travel: number | null\n\tx_travel: number | null\n\tswipePercentage: number | null\n}\n\n// will have to reset to initial state when user presses Icon\n\nexport const GradientShow2: FunctionComponent<GradientShowProps> = ({ gradientActive, swipeThreshold, children, chapterConfigs, setGradientActive, setSphereState, chapterIndex, setChapterIndex, darkMode }) => {\n\tconst planeRef = useRef<THREE.Object3D | undefined>(undefined);\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\n\tconst MAX_CHAPTERS = useRef<number>(React.Children.toArray(children).length);\n\tconst MAX_TEXT_SHADOW = useRef<number>(7);\n\tconst scrollIndicatorPositions = useRef<number[]>([25, 33.8, 42.7, 51.5]);\n\t// const MAX_TEXT_OPACITY = useRef<number>(1);\n\n\tlet [pointerState, setPointerState] = useState<PointerState>({\n\t\tactive: false,\n\t\tinitial_y_direction: null,\n\t\tx_start: null,\n\t\ty_start: null,\n\t\ty_travel: null, // length of y drag, null if active is false\n\t\tx_travel: null, // length of x drag, null if active is false\n\t\tswipePercentage: null // y_travel / swipeThreshold\n\t})\t\n\tlet [textOpacity, setTextOpacity] = useState<number>(1);\n\tlet [textShadow, setTextShadow] = useState<number>(0);\n\tlet [textColor, setTextColor] = useState<string>(chapterConfigs[0].textColor)\n\tlet [lightColor, setLightColor] = useState<string>(chapterConfigs[0].lightColor)\n\tlet [lightPosition, setLightPosition] = useState<[number, number, number]>([0,0,0]);\n\tlet [lightRotation, setLightRotation] = useState<[number, number, number]>([0,0,0]);\n\tlet [planeColor, setPlaneColor] = useState<string>(chapterConfigs[0].planeColor)\n\tlet [lightIntensity, setLightIntensity] = useState<number>(chapterConfigs[0].lightIntensity)\n\tlet [scrollIndicatorPosition, setScrollIndicatorPosition] = useState<number>(scrollIndicatorPositions.current[0])\n\tconst unmountLightColor = useMemo(() => darkMode ? '#000000' : '#FFFFFF', [darkMode])\n\t\n\t// plane color\n\tconst planeAnimation = useSpringThree({\n\t\tcolor: planeColor,\n\t})\n\n\t// light position\n\tconst rectLightAnimation = useSpringThree({\n\t\tposition: lightPosition,\n\t\tcolor: lightColor,\n\t\trotation: lightRotation,\n\t\tintensity: lightIntensity,\n\t\tconfig: {\n\t\t\tmass: 1,\n\t\t\tfriction: 8,\n\t\t\ttension: 70,\n\t\t\tclamp: true\n\t\t},\n\t\tonRest: (arg: any) => {\n\t\t\tif (chapterIndex === null && lightPosition.every(coord => coord === 0)) {\n\t\t\t\tsetGradientActive(() => false);\n\t\t\t\tsetSphereState(() => ({\n\t\t\t\t\thold: false,\n\t\t\t\t\tdirection: 'backwards',\n\t\t\t\t}))\n\t\t\t\tsetTimeout(() => setChapterIndex(() => 0), 500);\n\t\t\t}\n\t\t} \n\t});\n\n\t// scrollIndicator \n\tconst scrollIndicatorAnimate = useSpring({\n\t\tbackgroundColor: darkMode ? '#FFFFFF' : '#000000',\n\t\ttop: scrollIndicatorPosition,\n\t\topacity: chapterIndex === null ? '0' : '1',\n\t\tconfig: { clamp: true }\n\t\t// config: { mass: 1, friction: 1, tension: 100, clamp: true }\n\t})\n\n\t// container opacity & z-index\n\tconst gradientContainerAnimation = useSpring({\n\t\tzIndex: !gradientActive ? -1 : 4,\n\t\topacity: !gradientActive ? 0 : 1,\n\t\timmediate: key => key === 'zIndex',\n\t});\n\n\tconst unmount = useCallback(() => {\n\t\tsetChapterIndex(() => null);\n\t}, [setChapterIndex])\n\n\t// reset pointer to default, unactive state\n\tconst resetPointer = useCallback(() => {\n\t\tsetPointerState(() => ({\n\t\t\tactive: false,\n\t\t\tinitial_y_direction: null,\n\t\t\tx_start: null,\n\t\t\ty_start: null,\n\t\t\ty_travel: null,\n\t\t\tx_travel: null,\n\t\t\tswipePercentage: null\n\t\t}))\n\t}, [])\n\n\t// reset react-spring animation values to defaults\n\tconst resetAnimationValues = useCallback(() => {\n\t\tsetLightColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].lightColor\n\t\t});\n\t\tsetTextColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].textColor;\n\t\t});\n\t\tsetLightIntensity(() => {\n\t\t\treturn chapterIndex === null ? 2 : chapterConfigs[chapterIndex].lightIntensity;\n\t\t})\n\t\tsetPlaneColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].planeColor;\n\t\t});\n\t\tsetLightPosition(() => [0,0,0]);\n\t\tsetTextShadow(() => 0);\n\t\tsetTextOpacity(() => 1);\n\t}, [chapterIndex, chapterConfigs, unmountLightColor])\n\n\tconst pointerDownHandler = useCallback((e: PointerEvent) => {\n\t\tconst y_start = e.clientY;\n\t\tconst x_start = e.clientX;\n\t\tsetPointerState(prevState => {\n\t\t\tconst updatedValues = {\n\t\t\t\tactive: true,\n\t\t\t\tx_start,\n\t\t\t\ty_start,\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...prevState, ...updatedValues\n\t\t\t}\n\t\t})\n\t}, [])\n\n\tconst pointerUpHandler = useCallback((e: PointerEvent) => {\n\t\tresetPointer();\n\t}, [resetPointer])\n\n\tconst pointerMoveHandler = useCallback((e: PointerEvent) => {\n\t\tif (pointerState.active) {\n\t\t\te.preventDefault();\n\t\t\tconst y_position = e.clientY;\n\t\t\tconst x_position = e.clientX;\n\t\t\tsetPointerState(prevState => {\n\t\t\t\tlet updatedValues;\n\t\t\t\tconst y_travel = prevState.y_start ? y_position - prevState.y_start : null;\n\t\t\t\tconst x_travel = prevState.x_start ? x_position - prevState.x_start : null;\n\t\t\t\t\n\t\t\t\tif (prevState.initial_y_direction === null) {\n\t\t\t\t\tlet initial_y_direction: 'up' | 'down' | null = null;\n\t\t\t\t\tif (y_travel) {\n\t\t\t\t\t\tif (y_travel < 0) {\n\t\t\t\t\t\t\tinitial_y_direction = 'up';\n\t\t\t\t\t\t} else if (y_travel > 0) {\n\t\t\t\t\t\t\tinitial_y_direction = 'down';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\tinitial_y_direction,\n\t\t\t\t\t}\n\t\t\t\t} else if (prevState.initial_y_direction !== null) {\n\t\t\t\t\tlet swipePercentage = y_travel !== null ? y_travel / swipeThreshold : null;\n\t\t\t\t\tif (prevState.initial_y_direction === 'up') {\n\t\t\t\t\t\tif (swipePercentage && swipePercentage < 0) {\n\t\t\t\t\t\t\tif (Math.abs(swipePercentage) < 0.10) swipePercentage = 0;\n\t\t\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\t\t\tswipePercentage,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (prevState.initial_y_direction === 'down' && chapterIndex !== null && chapterIndex > 0) {\n\t\t\t\t\t\tif (swipePercentage && swipePercentage > 0) {\n\t\t\t\t\t\t\tif (Math.abs(swipePercentage) < 0.10) swipePercentage = 0;\n\t\t\t\t\t\t\tupdatedValues = {\n\t\t\t\t\t\t\t\ty_travel,\n\t\t\t\t\t\t\t\tx_travel,\n\t\t\t\t\t\t\t\tswipePercentage,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...prevState, ...updatedValues\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [pointerState, swipeThreshold, chapterIndex])\n\n\tuseEffect(() => {\n\t\tconst el = containerRef.current\n\t\tif (el) {\n\t\t\tel.addEventListener('pointerdown', pointerDownHandler)\n\t\t\tel.addEventListener('pointermove', pointerMoveHandler, false)\n\t\t\tel.addEventListener('pointerup', pointerUpHandler)\n\t\t}\n\t\treturn () => {\n\t\t\tif (el) {\n\t\t\t\tel.removeEventListener('pointerdown', pointerDownHandler)\n\t\t\t\tel.removeEventListener('pointermove', pointerMoveHandler, false)\n\t\t\t\tel.removeEventListener('pointerup', pointerUpHandler)\n\t\t\t}\n\t\t}\t\n\t}, [pointerMoveHandler, pointerDownHandler, pointerUpHandler])\n\n\tuseEffect(() => {\n\t\tconst { \n\t\t\tactive,\n\t\t\tswipePercentage,\n\t\t\tinitial_y_direction,\n\t\t} = pointerState;\n\t\tif (active) {\n\t\t\tif (swipePercentage !== null) {\n\t\t\t\tconst absSwipePercentage = Math.abs(swipePercentage);\n\t\t\t\tif (absSwipePercentage >= 1) {\n\t\t\t\t\t// define unmounting scenario here\n\t\t\t\t\t// swipePercentage < 0 ? setChapterIndex(prevState => prevState + 1) : setChapterIndex(prevState => prevState - 1)\n\t\t\t\t\tif (swipePercentage < 0) {\n\t\t\t\t\t\tif (chapterIndex === MAX_CHAPTERS.current - 1) {\n\t\t\t\t\t\t\t// unmount\n\t\t\t\t\t\t\tunmount();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetChapterIndex(prevState => {\n\t\t\t\t\t\t\t\tif (prevState !== null) {\n\t\t\t\t\t\t\t\t\treturn prevState + 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn prevState\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetChapterIndex(prevState => {\n\t\t\t\t\t\t\tif (prevState !== null) {\n\t\t\t\t\t\t\t\treturn prevState - 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn prevState\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tresetPointer();\n\t\t\t\t} else if (absSwipePercentage >= 0 && absSwipePercentage < 1) {\n\t\t\t\t\tsetTextShadow(() => 4 + (absSwipePercentage * MAX_TEXT_SHADOW.current))\n\t\t\t\t\tsetTextOpacity(() => 1 - (absSwipePercentage * 0.5))\n\t\t\t\t\tif (absSwipePercentage >= 0.70) {\n\t\t\t\t\t\tsetLightPosition(() => [48, 120, 72])\n\t\t\t\t\t} else if (absSwipePercentage >= 0.50) {\n\t\t\t\t\t\tsetLightPosition(() => [36, 90, 54])\n\t\t\t\t\t} else if (absSwipePercentage >= 0.10) {\n\t\t\t\t\t\tsetLightPosition(() => [27, 67.5, 40.5])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (initial_y_direction === null) {\n\t\t\t\tsetTextShadow(() => 3.5)\n\t\t\t\t// setTextOpacity(() => 0.8)\n\t\t\t\tsetLightPosition(() => [10, -52.5, 31.5])\n\t\t\t} else if (chapterIndex === 0) {\n\t\t\t\tif (initial_y_direction === 'down') resetPointer();\n\t\t\t}\n\t\t} else {\n\t\t\tresetAnimationValues();\n\t\t}\n\t}, [pointerState, chapterIndex, resetPointer, resetAnimationValues, unmount, setChapterIndex])\n\n\tuseDidUpdate(() => {\n\t\tsetLightColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].lightColor;\n\t\t});\n\t\tsetTextColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].textColor;\n\t\t});\n\t\tsetLightIntensity(() => {\n\t\t\treturn chapterIndex === null ? 2 : chapterConfigs[chapterIndex].lightIntensity;\n\t\t})\n\t\tsetPlaneColor(() => {\n\t\t\treturn chapterIndex === null ? unmountLightColor : chapterConfigs[chapterIndex].planeColor;\n\t\t});\n\t\tsetLightPosition(() => [0,0,0])\n\t\tsetTextOpacity(() => 1)\n\t\tsetTextShadow(() => 0)\n\t\tsetScrollIndicatorPosition((prevState) => {\n\t\t\treturn chapterIndex === null ? prevState : scrollIndicatorPositions.current[chapterIndex]\n\t\t})\n\t}, [chapterIndex, chapterConfigs, unmountLightColor])\n\n\treturn (\n\t\t<animated.div className=\"GradientShow\"\n\t\t\tstyle={gradientContainerAnimation}\n\t\t\tref={containerRef}\n\t\t>\n\t\t\t<animated.div className=\"scroll-indicator\" style={scrollIndicatorAnimate} />\n\t\t\t<div className=\"grid\">\n\t\t\t\t<Transition\n\t\t\t\t\titems={chapterIndex}\n\t\t\t\t\tfrom={{ opacity: 0, textShadow: `0px 0px 0px ${textColor}`, immediate: (key: any) => key === 'textShadow' }}\n\t\t\t\t\tupdate={{ opacity: textOpacity, textShadow: `0px 0px ${textShadow}px ${textColor}`, config: { mass: 1, tension: 190, friction: 20, clamp: true }}}\n\t\t\t\t\tenter={{ opacity: 1 }}\n\t\t\t\t\tleave={{ textShadow: `0px 0px ${MAX_TEXT_SHADOW}px black`, opacity: 0, config: { mass: 1, friction: 10, clamp: true }}}\n\t\t\t\t>\n\t\t\t\t\t{ chapterIndex => (props) => {\n\t\t\t\t\t\tif (chapterIndex !== null) {\n\t\t\t\t\t\t\treturn React.cloneElement(React.Children.toArray(children)[chapterIndex] as React.ReactElement<any>, { style: props })\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}}\n\t\t\t\t</Transition>\n\t\t\t\t<Canvas className=\"gradient\">\n\t\t\t\t\t{/* <ambientLight intensity={0.5} /> */}\n\t\t\t\t\t<aThree.rectAreaLight\n\t\t\t\t\t\tposition={rectLightAnimation.position}\n\t\t\t\t\t\tcolor={rectLightAnimation.color}\n\t\t\t\t\t\trotation={rectLightAnimation.rotation}\n\t\t\t\t\t\tintensity={rectLightAnimation.intensity}\n\t\t\t\t\t\t// distance={2}/\n\t\t\t\t\t\twidth={150}\n\t\t\t\t\t\theight={550}\n\t\t\t\t\t\t// decay={0}\n\t\t\t\t\t\tlookAt={() => planeRef.current && planeRef.current.position} />\n\t\t\t\t\t<mesh position={[0, 0, -80]} ref={planeRef}>\n\t\t\t\t\t\t<planeBufferGeometry attach='geometry' args={[1000, 1000]} />\n\t\t\t\t\t\t<aThree.meshPhysicalMaterial attach='material' color={planeAnimation.color} />\n\t\t\t\t\t</mesh>\n\t\t\t\t</Canvas>\n\t\t\t</div>\n\t\t</animated.div>\n\t)\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef } from 'react';\n\nexport const useDidUpdate = (func: any, deps: Array<any>) => {\n    const didUpdate = useRef(false);\n\n    useEffect(() => {\n        if (didUpdate.current) func();\n        else didUpdate.current = true;\n    }, deps);\n}","import React, { FunctionComponent, useState } from 'react'\nimport { useSpring, animated } from 'react-spring';\n\n// email form should add email to mailing list on directmailmac \n// on success there should be some indication on the frontend -- turns green with a success message\n// on failure there should be some indication on the frontend -- turns red with an error message\n\n// make an api call to directmailmac with the email address\ninterface EmailProps {\n\tdarkMode: Boolean,\n}\n\nexport const Email: FunctionComponent<EmailProps> = ({ darkMode }) => {\n\tlet [success, setSuccess] = useState<Boolean | null>(null);\n\tlet [email, setEmail] = useState<string | undefined>('')\n\n\tconst submitHandler = (e:any) => {\n\t\te.preventDefault();\n\n\t\t// const url = `${process.env.REACT_APP_DEV_SERVER}/subscribe`;\n\t\tconst url = process.env.REACT_APP_DEV_SERVER + '/subscribe';\n\t\tconst body = { email }\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json; charset=utf-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}\n\n\t\t// will have to include logic that handles specific errors (duplicate emails, failure to fetch, etc.)\n\t\tfetch(url, options)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tconsole.log(data);\n\t\t\tdata.statusCode === 202 ? setSuccess(true) : setSuccess(false);\n\t\t})\n\t\t.catch(error => console.log(error))\n\t}\n\n\tconst emailInputProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tborderBottom: darkMode ? '1.5px solid #FFFFFF' : '1.5px solid #000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst submitButtonProps = useSpring({\n\t\tboxShadow: darkMode ? 'inset 0px 0px 1px 0px #FFFFFF' : 'inset 0px 0px 2px 1px #FFFFFF',\n\t\timmediate: key => key === 'boxShadow'\n\t})\n\n\treturn (\n\t\t// if null do nothing, if false show fail, if true show success\n\t\t<form onSubmit={submitHandler} className={success ? 'Email success' : (success === 'false' ? 'Email fail' : 'Email')}>\n\t\t\t<animated.input className={darkMode ? 'darkmode' : ''} style={emailInputProps} type=\"email\" value={email} placeholder='email' onChange={(e:any) => setEmail(e.currentTarget.value)} required />\n\t\t\t<animated.input style={submitButtonProps} type=\"submit\" value=\"SUBSCRIBE\"/>\n\t\t</form>\n\t)\n}\n\n// what is going on? Requesting data from directmailmac via fetch on the frontend is being blocked\n// potentially because I'm requesting from my localhost which is identified as the origin, making a \n// request from the localhost to directmail is defined as a cross-origin request,\n\n// Wrong, for now, -- the preflight OPTIONS request that the browser sends to the server is returning with a \n// 401. This may be a bug on their server configs. However, if it is the case I still don't know if \n// a cross-origin request from localhost is allowed/will work. Even then, I shouldn't be exposing the \n// API key to the frontend. So I will have to create a server folder and configure a quick server to\n// request to from the app, which then will post request to the API, responding to the frontend with a success -- \n// allowing the component to make necessary changes to styling.","import React, { FunctionComponent } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { Email } from './Email';\n\ninterface MobileEmailFormProps {\n\tprops?: any,\n\temailVisible: Boolean,\n\tdarkMode: Boolean,\n\tsetDarkMode: React.Dispatch<React.SetStateAction<Boolean>>,\n\tsphereState: {\n\t\thold: Boolean;\n\t\tdirection: null | 'forwards' | 'backwards';\n\t\t// position: [number, number, number] | null;\n\t},\n}\n\nexport const MobileEmailForm: FunctionComponent<MobileEmailFormProps> = ({ sphereState, emailVisible, darkMode, setDarkMode }) => {\n\tconst animationProps = useSpring({\n\t\tconfig: { mass: 1, friction: 20, clamp: true },\n\t\topacity: !emailVisible ? 0 : 1,\n\t\tbottom: !emailVisible ? -6 : 0,\n\t\tbackgroundColor: darkMode ? '#000B23' : '#F4F4F4',\n\t\timmediate: key => ['backgroundColor'].includes(key)\n\t})\n\n\tconst textProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\tconst buttonProps = useSpring({\n\t\tborder: darkMode ? '2px solid #FFFFFF' : '2px solid #000000',\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\treturn (\n\t\t<animated.div className=\"MobileEmailForm\" style={animationProps}>\n\t\t\t<animated.p style={textProps}>STAY UPDATED</animated.p>\n\t\t\t<Email darkMode={darkMode} />\n\t\t\t<animated.button style={buttonProps} className=\"mode-switch\" onClick={() => setDarkMode(() => !darkMode)}>\n\t\t\t\t{ darkMode ? 'L' : 'D'}\n\t\t\t</animated.button>\n\t\t</animated.div>\n\t)\n}","import React, { FunctionComponent, useState, useMemo } from 'react';\nimport { Canvas } from 'react-three-fiber';\n\nimport { Sphere } from './Sphere';\n// import { GradientShow } from './GradientShow';\nimport { GradientShow2 } from './GradientShow2';\nimport { MobileEmailForm } from './MobileEmailForm';\nimport { useSpring, animated } from 'react-spring';\n// import { useSpring as useSpringThree, a as aThree } from 'react-spring/three'\n\nexport const MobileAnimation: FunctionComponent = () => {\n\tconst [darkMode, setDarkMode] = useState<Boolean>(false);\n\tconst [gradientActive, setGradientActive] = useState<Boolean>(false);\n\tconst [chapterIndex, setChapterIndex ] = useState<number | null>(0);\n\tconst [sphereState, setSphereState] = useState<{ hold: Boolean, direction: null | 'forwards' | 'backwards' }>({ hold: false, direction: null});\n\tconst [emailVisible, setEmailVisible] = useState<Boolean>(true);\n\tconst [instructionsVisible, setInstructionsVisible ] = useState<boolean>(true);\n\tconst gradientConfig = useMemo<any>(() => {\n\t\tlet config;\n\t\tif (!darkMode) {\n\t\t\tconfig = [{\n\t\t\t\tlightIntensity: 2,\n\t\t\t\ttextColor: '#972C95',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#FFFFFF',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.3,\n\t\t\t\ttextColor: '#FFFFFF',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#e75a81',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.45,\n\t\t\t\ttextColor: '#e75a81',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#EAEAEA'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1,\n\t\t\t\ttextColor: '#C9C9C9',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#000000',\n\t\t\t}]\n\t\t} else {\n\t\t\tconfig = [{\n\t\t\t\tlightIntensity: 0,\n\t\t\t\ttextColor: '#972C95',\n\t\t\t\tplaneColor: '#000000',\n\t\t\t\tlightColor: '#000000',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.45,\n\t\t\t\ttextColor: '#000000',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#EAEAEA',\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 1.3,\n\t\t\t\ttextColor: '#C9C9C9',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#e75a81'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlightIntensity: 2,\n\t\t\t\ttextColor: '#e75a81',\n\t\t\t\tplaneColor: '#FFFFFF',\n\t\t\t\tlightColor: '#FFFFFF',\n\t\t\t}]\n\t\t}\n\t\treturn config\n\t}, [darkMode])\n\n\tconst instructionsDivProps = useSpring({\n\t\topacity: instructionsVisible ? 1 : 0,\n\t\tconfig: { mass: 1, friction: 10, clamp: true },\n\t})\n\n\tconst instructionsTextProps = useSpring({\n\t\tcolor: darkMode ? '#FFFFFF' : '#000000',\n\t\tconfig: { duration: 130 }\n\t})\n\n\treturn (\n\t\t<div className=\"MobileAnimation\">\n\t\t\t<div className=\"logo\" onClick={() => {\n\t\t\t\tif (gradientActive) setChapterIndex(() => null);\n\t\t\t}}>\n\t\t\t\t{ !darkMode ? <img src='../assets/logo.svg' alt='Logo' /> : <img src='../assets/logo_white.svg' alt='Logo' /> }\n\t\t\t</div>\n\t\t\t<Canvas\n\t\t\t\tstyle={{ backgroundColor: darkMode ? '#000000' : 'transparent' }}\n\t\t\t\tclassName=\"Canvas\"\n\t\t\t\tcamera={{position: [0, 0, 500]}}\n\t\t\t>\n\t\t\t\t<Sphere\n\t\t\t\t\tradius={135}\n\t\t\t\t\tsetInstructionsVisible={setInstructionsVisible}\n\t\t\t\t\tsetEmailVisible={setEmailVisible}\n\t\t\t\t\tstartPosition={[0, 135, 0]}\n\t\t\t\t\tsphereState={sphereState}\n\t\t\t\t\tendPosition={[0, -120, 646]}\n\t\t\t\t\tsetSphereState={setSphereState}\n\t\t\t\t\tsetGradientActive={setGradientActive}\n\t\t\t\t\tbreakPoint={468}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t<GradientShow2\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tchapterIndex={chapterIndex}\n\t\t\t\tsetChapterIndex={setChapterIndex}\n\t\t\t\tgradientActive={gradientActive}\n\t\t\t\tswipeThreshold={250}\n\t\t\t\tchapterConfigs={gradientConfig}\n\t\t\t\tsetGradientActive={setGradientActive}\n\t\t\t\tsetSphereState={setSphereState}\n\t\t\t>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>The most damaging phrase in language is 'It's always been done that way.'</h2>\n\t\t\t\t\t<h4 className=\"spacer-top-1\">- Admiral Grace Hopper</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Andy Mag is an experiential magazine that enables readers to interact (engage) with diverse themes and ideas.</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Because a great story is worth remembering.</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text\">\n\t\t\t\t\t<h2>Subscribe to Andy Mag for updates.</h2>\n\t\t\t\t</div>\n\t\t\t</GradientShow2>\n\t\t\t<animated.div className=\"hold-icon\" style={instructionsDivProps}>\n\t\t\t\t{ !darkMode ? <img src=\"../assets/holdicon.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> : <img src=\"../assets/holdicon_white.svg\" alt=\"Press and hold to learn more about Andy Mag\"/> }\n\t\t\t\t<animated.p style={instructionsTextProps}>Press and hold to learn more about Andy Mag</animated.p>\n\t\t\t</animated.div>\n\t\t\t<MobileEmailForm\n\t\t\t\tsphereState={sphereState}\n\t\t\t\temailVisible={emailVisible}\n\t\t\t\tdarkMode={darkMode}\n\t\t\t\tsetDarkMode={setDarkMode}\n\t\t\t/>\n \t\t</div>\n\t)\n}","import React, { FunctionComponent } from 'react';\n\n// import { Email } from './Email';\nimport { MobileAnimation } from './MobileAnimation';\n\nexport const MobileApp: FunctionComponent = () => {\n\treturn (\n\t\t// <Email />\n\t\t<MobileAnimation />\n\t)\n}","import React, { useEffect, useState, useCallback } from 'react';\n\nimport './styles/base.sass'\nimport { MobileApp } from './Components/MobileApp'\n\nfunction App() {\n\t\n\tlet [isMobile, setIsMobile] = useState<Boolean>(window.innerWidth <= 900);\n\n\tconst windowResizeHandler = useCallback(() => {\n\t\twindow.innerWidth <= 900 ? setIsMobile(true) : setIsMobile(false);\n\t}, [])\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', windowResizeHandler)\n\t}, [windowResizeHandler]);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{\n\t\t\t\tisMobile && <MobileApp />\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}